:properties:
:ID: 20231103T214003
:end:
#+title:      KDOC 52: Goで構造体がインターフェースを実装しているか確認する
#+date:       [2023-11-03 Fri 21:40]
#+filetags:   :code:
#+identifier: 20231103T214003

[[id:7cacbaa3-3995-41cf-8b72-58d6e07468b1][Go]]で、構造体がインターフェースを実装しているか確認したいときがある。

~var _ インタフェース名 = 構造体初期化~ とすればよい。

#+caption: 確かめる実例
#+begin_src git-permalink
https://github.com/kd-collective/go/blob/2eca0b1e1663d826893b6b1fd8bd89da98e65d1e/src/cmd/compile/internal/syntax/syntax.go#L31
#+end_src

#+RESULTS:
#+begin_results
var _ error = Error{} // verify that Error implements error
#+end_results

解説。

errorは組み込みのインターフェースである。小文字だから普通のローカル変数に見える。

#+caption: builtin package
#+begin_src git-permalink
https://github.com/kd-collective/go/blob/2eca0b1e1663d826893b6b1fd8bd89da98e65d1e/src/builtin/builtin.go#L305-L309
#+end_src

#+RESULTS:
#+begin_results
// The error built-in interface type is the conventional interface for
// representing an error condition, with the nil value representing no error.
type error interface {
	Error() string
}
#+end_results

指定シグネチャを備えていないと、インターフェースを満たせず代入できないためチェックできる、というわけ。
