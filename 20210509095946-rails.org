:PROPERTIES:
:ID:       e04aa1a3-509c-45b2-ac64-53d69c961214
:END:
#+title: Rails

* 概要
Railsは[[id:cfd092c4-1bb2-43d3-88b1-9f647809e546][Ruby]]でWEBサイトを作るためのフレームワーク。
* Memo
** rails console -s
~rails console -s~ としてconsole起動すると、sandbox-modeになりコンソール内のDB操作が終了時にリセットされる。
便利。
** rails cできないとき
springはキャッシュを保存して次のコマンド実行を早くするgem。
テストも高速化できるので便利だが、たまに壊れて反映しなくなったりする。

まずspringを止めて確認する。
#+begin_src shell
bundle exec spring stop
#+end_src
** system specでTCP error がでるとき
テストがある程度の長さを超えると、メモリの量が足りなくなってエラーを出す。
特にMacだと起こるよう。
#+begin_src shell
ulimit -n 1024
#+end_src
** どのメソッドか調べる
どのgemのメソッドかわからないときに ~source_location~ が便利。
https://docs.ruby-lang.org/ja/latest/method/Method/i/source_location.html
#+begin_src ruby
character.method(:draw).source_location
#+end_src
** DBリセット
環境を指定して、リセットを行う。
#+begin_src shell
  RAILS_ENV=test bundle exec rake db:migrate:reset
  rake db:seed_fu
#+end_src

初期データを投入する。
#+begin_src shell
  bundle exec rails db:migrate:reset && rails db:seed_fu
#+end_src
** デイリーでやること
gemのupgradeやマイグレーションが起きたときは必須。
決まったことは定型化してまとめておく。
#+begin_src shell
  bundle install && bundle exec rails db:migrate
#+end_src
** scope
scopeはクラスメソッド的なやつ。インスタンスには使えない。 ~User.scope...~
[[https://railsguides.jp/active_record_querying.html#%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97][Active Record クエリインターフェイス - Railsガイド]]

#+begin_quote
スコープを設定することで、関連オブジェクトやモデルへのメソッド呼び出しとして参照される、よく使用されるクエリを指定することができます。
#+end_quote
** validation
~valid?~ はAction Modelのバリデーションメソッド。
[[https://devdocs.io/rails~6.1/activemodel/validations#method-i-valid-3F][Ruby on Rails 6.1 / ActiveModel::Validations#valid? — DevDocs]]
引っかかってたらfalseになる。
上書きしてしまいそうになるメソッド名なのに注意。
** ネストしたvalidateは反応しない
 特定の条件だけで発動するvalidation + 条件。`with_options: if`内で`if`を使うと、中のif条件が優先して実行されるため、こう書く必要がある。
#+begin_src ruby
validates :term_date, date: { after: proc { Time.zone.now } }, if: proc { |p| p.term_date? && p.sellable?  }
#+end_src
** N+1問題
[[id:8b69b8d4-1612-4dc5-8412-96b431fdd101][SQL]]がたくさん実行されて遅くなること。ループしているとレコードの数だけSQLが発行され、一気に遅くなる。
includesを使うと少ないSQLにまとめられる。
https://qiita.com/hirotakasasaki/items/e0be0b3fd7b0eb350327
** 子のデータが存在するとき関連削除しないようにする
~dependent: destroy~ だと子のデータもすべて破壊して整合性を保つ。
それでは具合が悪いときもあるので、消さないようにする。
#+begin_src ruby
  has_many :contents, dependent: :restrict_with_error
#+end_src
** 文字列で返ってくる真偽値をbooleanオブジェクトに変換する
文字列で返ってくる真偽値を、booleanオブジェクトとして扱いとき。ActiveModelのmoduleを使用する。
言われてみるとDBでは文字列かをあまり意識せずに使える。
#+begin_src ruby
ActiveModel::Type::Boolean.new.cast(value) == true
#+end_src
* slim
slimはViewテンプレート。HTMLのようなタグが必要なく、インデントが階層を表現する。
外観がすっきり書けるが、やや柔軟性に欠ける。
** 条件分岐
[[https://qiita.com/mishiwata1015/items/407e924263d698ddeaae][【Rails】Slimで入れ子になっている要素の親タグのみを分岐させる - Qiita]]
閉じタグがないため階層の上だけ条件分岐するためには特殊な書き方が必要になる。
#+begin_export html
- unless request.variant.present? && request.variant.include?(:phone)
  / PCでのみサイドバーに
  - args = [:section, class: 'sidebar']
- else
  / スマホではメインコンテンツに入れる
  - args = [:section]
= content_tag(*args)
#+end_export
* Action Mailer
Railsでメールを送るのに使う。Railsの主要Mailer。
** プレビュー
previewを準備しておくといちいち送信せずとも、ローカルで中身を確認できる。
http://localhost:3000/rails/mailers/
