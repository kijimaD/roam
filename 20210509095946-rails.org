#+title: Rails

* shell
** rails cできないとき
#+begin_src shell
bundle exec spring stop
#+end_src
** system specでTCP error がでるとき
#+begin_src shell
ulimit -n 1024
#+end_src
** どのメソッドか調べる
#+begin_src ruby
method(aaa).source_location
#+end_src
** DBリセット
テスト環境。
#+begin_src shell
  RAILS_ENV=test bundle exec rake db:migrate:reset
  rake db:seed_fu
#+end_src

develop環境。
#+begin_src shell
  bundle exec rails db:migrate:reset && rails db:seed_fu
#+end_src
** デイリー
bundle install && bundle exec rails db:migrate
* RSpec
** カバレッジ
#+begin_src shell
COVERAGE=true bundle exec rspec spec/requests/admin/user_spec.rb
open coverage/index.html
#+end_src
** factorybot
create_list - factorybot
** request specでsessionメソッドを使う
#+begin_src ruby
allow_any_instance_of(ActionDispatch::Request).to receive(:session).and_return({})
#+end_src
* ActiveRecord
** ネストしたvalidateは反応しない
 特定の条件だけで発動するvalidation + 条件。`with_options: if`内で`if`を使うと、中のif条件が優先して実行されるため、こう書く必要があります。
#+begin_src ruby
validates :term_date, date: { after: proc { Time.zone.now } }, if: proc { |p| p.term_date? && p.sellable?  }
#+end_src
** N+1問題
includes
N+1問題を回避するために用います。
** 子のデータが存在するとき関連削除しないようにする
#+begin_src ruby
  has_many :contents, dependent: :restrict_with_error
#+end_src
** 文字列で返ってくる真偽値をbooleanオブジェクトに変換する
文字列で返ってくる真偽値を、booleanオブジェクトとして扱いとき。ActiveModelのmoduleを使用する。
言われてみるとDBでは意識せずに使える。
#+begin_src ruby
ActiveModel::Type::Boolean.new.cast(value) == true
#+end_src
* slim
** 条件分岐
[[https://qiita.com/mishiwata1015/items/407e924263d698ddeaae][【Rails】Slimで入れ子になっている要素の親タグのみを分岐させる - Qiita]]
閉じタグがないため階層の上だけ条件分岐するためには特殊な書き方が必要になる。
#+begin_export html
- unless request.variant.present? && request.variant.include?(:phone)
  / PCでのみサイドバーに
  - args = [:section, class: 'sidebar']
- else
  / スマホではメインコンテンツに入れる
  - args = [:section]
= content_tag(*args)
#+end_export
* Mailer
プレビュー
http://localhost:3000/rails/mailers/
