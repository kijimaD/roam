:PROPERTIES:
:ID:       e9a608aa-8545-42be-90bb-303097800a85
:END:
#+title: assembly language
* 概要
アセンブリ言語はビット列命令に対応した文字列命令を利用するプログラミング言語の種類。ビット列に対応する文字列命令(ニーモニック)を利用する。アセンブリ言語を用いることで、機械語相当の低水準なコードをより直感的に記述できる。
* Memo
** ニーモニック
- ニーモニックは処理内容に応じて各機械語命令に与えられた文字列・命令語。機械語のオペコードに相当する
- オペランドは命令の対象・引数
* Tasks
** [[https://www.amazon.co.jp/%E7%8B%AC%E7%BF%92%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%A9-%E6%96%B0%E7%89%88-%E5%A4%A7%E5%B4%8E-%E5%8D%9A%E4%B9%8B/dp/4798170291][独習アセンブラ 新版 | 大崎 博之 |本 | 通販 | Amazon]]
:LOGBOOK:
CLOCK: [2023-08-05 Sat 14:22]--[2023-08-05 Sat 14:47] =>  0:25
:END:
- 「アセンブリ言語のプログラムを、アセンブラを使ってアセンブルする」というのが正しい用法になる
  - アセンブリ: 組み立てるという「行為」
  - アセンブル: 組み立ての「動作」
  - アセンブラ: 組み立てる「人や物」
- gccコマンドそのものはCコンパイラの本体ではなく、Cコンパイラのフロントエンドになっている
- gcc実行の流れ。コンパイル・アセンブル・リンク
  1. C言語(ソースコード)
  2. アセンブリ言語(ソースコード)
  3. 機械語(オブジェクトファイル)
  4. 機械語(実行ファイル)
** TODO [[https://qiita.com/edo_m18/items/83c63cd69f119d0b9831][アセンブラに手を出してみる - Qiita]]
アセンブラの説明集。
** TODO [[https://tatsu-zine.com/books/my-emulator-x86-architecture][自作エミュレータで学ぶx86アーキテクチャ コンピュータが動く仕組みを徹底理解！【委託】 - 達人出版会]]
エミュレータで再現しながらの解説。
* Reference
** [[https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%AA%E8%A8%80%E8%AA%9E][アセンブリ言語 - Wikipedia]]
解説。
* Archives
