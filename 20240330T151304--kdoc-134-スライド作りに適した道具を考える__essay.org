:properties:
:ID: 20240330T151304
:mtime:    20250626232931
:ctime:    20241028101410
:end:
#+title:      KDOC 134: スライド作りに適した道具を考える
#+date:       [2024-03-30 Sat 15:13]
#+filetags:   :essay:
#+identifier: 20240330T151304

* この文書のステータス
- 作成
  - [X] 2024-03-31 貴島
- レビュー
  - [X] 2024-04-27 貴島

* 概要
いままでスライド作りにこれだという方法はなく、そのときどきの方法でやってきた[fn:1]。バラバラの形式でクラウドやローカルのあちこちに散乱している。ちゃんと自分の中で決める。
* スライド作り
求める条件。

- WYSIWYGで作れる。図を多用したいのでMarkDownから変換する形式は採用しない。MarkDownで表現できるならスライドにする必要がない。図を重視してドローソフトで作っている人さえいる
- ローカルに保存/編集できる
  - Webサービスで編集だとデータを書き戻すのが手間だから
  - Git管理にしやすいから
  - 文書をまとめたリポジトリに一元化したい
- 汎用性のある形式へ変換できる
  - PDFが鉄板か。誰でも見られてポータブル、Webにも載せやすい
- 原本と変換先の差分更新の手間がない
  - あとから変更したくなることはよくある。そのときに面倒だと、変更しなくなる
  - Webのスライド作成ツールはここで脱落する。編集したあとPDFを再度ダウンロードする必要があるから
  - コマンドラインで変換できるとよい
  - コマンドでビルドできればCIに乗せて反映を自動化できて良い

これらを満たす方法は、drawioのSVG保存 → PDF変換だ。drawioのSVG形式は複数ページ保存をサポートしている。複数ページ保存してPDFへの変換をかけるとページ順に変換してくれる。これをスライドとする。

編集はdrawioのWeb版、デスクトップ版、VSCode版があるので好きなのを使う。PDFへの変換はデスクトップ版で行う。デスクトップ版はコマンドラインツールとしても使える。[[id:2d35ac9e-554a-4142-bba7-3c614cbfe4c4][GitHub Actions]]で自動化した。

#+caption: drawioのLinux版をインストールする例
#+begin_src shell
  FILE=drawio-amd64-24.1.0.deb
  URL=https://github.com/jgraph/drawio-desktop/releases/download/v24.1.0/$FILE
  curl -sLO $URL
  sudo dpkg -i $FILE
#+end_src

#+caption: SVGをPDFへエクスポートする例
#+begin_src shell
  drawio -f pdf -x sample.svg
  # sample.svg -> sample.pdf
#+end_src

したがって、原本のSVGをdrawioで編集・コミット・デプロイという流れになった。あとは自動でPDFに変換される。

* 関連
なし。

* Footnotes
[fn:1] 図の作成に関してはもう決まっている。drawioのSVG形式である。直接編集でき変換の必要がない。[[id:6b889822-21f1-4a3e-9755-e3ca52fa0bc4][GitHub]]でのプレビューも効くので最高。画像は保存したあとに再編集できるのが絶対の条件だと考えている。図をPNGやJPEGといったラスタファイルで書くべきでない。
