#+title: Emacs

- [[file:20210509122633-emacs_lisp.org][Emacs Lisp]]
* 👀要チェックコマンド
** <F1> b
キーバインドの一覧を表示します。
** projectile-ag (~C-c p s s~)
プロジェクトをag検索します。検索結果をバッファで得たいときに。
** projectile-multi-occur (~C-c p o~)
プロジェクトで ~occur~ します。
occurの特徴はeでedit-modeに入れる点。一覧にして複数ファイルをそのまま置換できます。
** projectile-toggle-between-implementation-and-test (~C-c p t~)
テストとプロダクトコードを切り替えます。
** wdired-change-to-wdired-mode
編集モードにして ~C-c C-c~ で実行します。
** org-mode のキーバインド
見出し移動とか。
https://qiita.com/takaxp/items/a5a3383d7358c58240d0
** (magit-topic)
一覧でPRとIssueにアクセスできると行き来がしやすそう。
Forgeのトピック間移動がhelmでできたらいいのにな。
** (global-display-line-numbers-mode)
linum-modeよりこっちのほうがいいらしい。
linum-modeは重かった。
外観も綺麗。
** counsel-find-fileで新しいファイル
補完選択になってしまって新しくファイルが作れないとき。
C-M-jで新規作成できる。そんなのわかるか…。
READMEの最後に書かれてた、(setq ivy-use-selectable-prompt t)をしとくと上下選択できるようになる。
選択一覧にはでないが。
* ✔覚えたキーバインド
** DONE ~C-c n~
CLOSED: [2021-06-03 木 21:45]
roam のプレフィクスキー。
** DONE wdired-change-to-wdired-mode dired
CLOSED: [2021-06-03 木 21:45]
便利な置換。
** DONE org-mode の各種挿入 ~C-c C-,~
CLOSED: [2021-06-03 木 21:44]
** DONE ~projectile-find-file~ (~C-c p f~)
CLOSED: [2021-06-03 木 21:42]
プロジェクト全体のファイル名検索。
** DONE ~projectile-switch-project~ (~C-c p p~)
プロジェクトを切り替えます。
CLOSED: [2021-06-03 木 21:42]
** DONE ~robe-doc~ (~C-c C-d~)
CLOSED: [2021-06-03 木 21:42]
Rubyメソッドを調べられます。gemがあるプロジェクトのGemfileで ~pry~, ~pry-doc~ をインストールして実行するとpryが起動して、以後使えるようになります。これは補完の ~company.el~ と連携させているため、pryを起動しないことにはgemの補完は表示されません。
** DONE ~vterm-copy-mode~ → ~C-c C-t~
CLOSED: [2021-06-03 木 21:42]
vterm上で、eshellなどのように自由に動き回るモードです。
* パッケージ別ページ
- [[file:20210508233810-org_roam.org][roam]]
- mermaid-mode
- alert.el
- writeroom-mode
- [[file:20210603105559-current_word_highlight.org][current-word-highlight]]
- [[file:20210512001700-create_link.org][create-link]]
* ソースメモ
** org-lint
https://github.com/kijimaD/emacs/blob/master/lisp/org/org-lint.el#L124
** interactive
https://github.com/kijimaD/emacs/blob/master/src/callint.c#L37
** defun
https://github.com/kijimaD/emacs/blob/master/lisp/emacs-lisp/byte-run.el#L280
https://github.com/kijimaD/emacs/blob/master/lisp/emacs-lisp/cl-macs.el#L339
** markdown-to-ast
textlintはorg-modeに対応していません。txtファイルとして処理できますが、見出しでも丸をつけなさいとか、コードブロック内で大文字にしろとか言われます。これは、org用のAST変換を作れば解決します。
https://github.com/kijimaD/textlint/blob/master/packages/@textlint/markdown-to-ast/README.md#L1
オブジェクトから取り出して、マッピングしている。

https://github.com/remarkjs/remark-frontmatter
文字列Markdownはこれで変換してる。
* TODO 改善メモ
** undo履歴を保持しないときがあります。
3つくらいしか戻れないときがあり、原因は不明です。
** vtermで括弧補完が使えない
なのでカッコ関係はコピペする羽目になる。
** DONE ~vterm-toggle~ をもっと良い感じに出てくるようにしたいです。toggleでオフになったとき分割ウィンドウが消えます。
CLOSED: [2021-05-30 日 00:25]
設定を追加した。
** DONE ~markdown-mode~ でHelm-M-xが作動しません。...emacs-mozcを使っていて日本語入力モードのときhelmがうまく作動しないみたいです。
CLOSED: [2021-05-30 日 00:25]
よくわからないのでclose。
* Macメモ
- Macでは ~query-replace~ (~M-%~)が奪われて押せないので、 ~query-replace-regexp~ (~C-M-%~)します。
* 未分類メモ
十分に集まってきたらファイルに分割しましょう。
** spring rspec
いつのまにかEmacsでspringが動かなくなっていました。コマンドでは ~spring rspec~ などで動かせるが、Emacsではふつうの ~bundle exec ...~ になっていました。前は早くできていたはず。ネットの記事を参考にします。

#+begin_quote
emacsのrspec-modeで、上記のようにしてspringを使うと、自動ではspringがONにならない。 これはtmpにpidファイルが作られないため。 強制的にspringを使うには、次のように設定する。
#+end_quote

  #+begin_src emacs-lisp
  (require 'rspec-mode)
  (defun rspec-spring-p ()
    (and rspec-use-spring-when-possible
         (stringp (executable-find "spring"))))
  #+end_src

springを自動で検出してくれるらしいのですが(何より今までできてた)。
- ~spring status~ でspringが動いてるかチェックする。動いてなかったら ~spring rspec~ する。
** デバッグ起動
#+begin_src shell
$ emacs -q
# init読み込まない
$ emacs --debug-init
# デバッグモードで起動する
#+end_src
** 使用パッケージで分岐するとき、どうやってbyte-compileエラーを回避するのか
たとえばhelmを使ってるときはこれ、ivyのときはこれとかでrequireするものは変わるものだが。既存パッケージはどうしているのだろう。
** ivy化
[[https://qiita.com/takaxp/items/2fde2c119e419713342b][helm を背に ivy の門を叩く - Qiita]]
** System Crafters IRC
#+begin_quote
erc-tls
irc.libera.chat
6697
/join #systemcrafters
#+end_quote
** 脚注
脚注使えるのは知らなかったな。[fn:1]

[fn:1] The link is: https://orgmode.org
