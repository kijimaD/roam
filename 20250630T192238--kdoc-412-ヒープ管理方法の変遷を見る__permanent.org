:properties:
:ID: 20250630T192238
:mtime:    20250719080911
:ctime:    20250630192242
:end:
#+title:      KDOC 412: ヒープ管理方法の変遷を見る
#+date:       [2025-06-30 Mon 19:22]
#+filetags:   :permanent:
#+identifier: 20250630T192238

* この文書のステータス
- 作成
  - [X] 2025-06-30 貴島
- レビュー
  - [X] 2025-07-19 貴島

* 概要

ヒープ管理方法の変遷を見る。柔軟性、安全性、パフォーマンスのトレードオフの歴史である。

1. 従来はプログラマーが ~malloc~ や ~free~ でヒープを確保・解放していた
   - 課題: メモリ解放忘れや解放済みのポインタへのアクセス。安全性に問題があった
2. 処理系にガベージコレクションを組み込み、メモリ管理を自動で行うようにした
   - 課題: パフォーマンスへの影響、一時停止、管理の複雑さ
3. 所有権に基づいてメモリを管理する。コンパイル時にメモリ管理の正しさを検証し、実行時のオーバーヘッドなく安全性を得る
   - 課題: リストなど特定のケースで実装が難しいことがあるという

* 関連

- [[https://ja.wikipedia.org/wiki/%E3%82%AC%E3%83%99%E3%83%BC%E3%82%B8%E3%82%B3%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3][ガベージコレクション - Wikipedia]]
- [[id:20250630T185540][KDOC 411: スタックは積み重ねて取り出して解放する。ではヒープは?]]。きっかけになった疑問
