#+title: JS

* JavaScript
** 配列
- 配列を処理するときはやりたいことに応じて関数を選択します。するとやりたいことが明確になるのでわかりやすくもなります。除去したときは`filter()`、新しい配列を作るときは`map()`という感じです。
** コールバック関数
 - コールバック関数: 他の関数に引数として渡す関数のことです。
 <a href="https://sbfl.net/blog/2019/02/08/javascript-callback-func/">JavaScriptの「コールバック関数」とは一体なんなのか</a>
** Eslint無視の方法
 ```json
 "rules": {
     "comma-dangle": "error",
     "require-yield": "error",
     "no-unused-vars": "off",
     "no-undef": "off",
 },
 ```
 などと書きます。
** クラスを使わずにモジュール分割する
 変数内に入れます。
 ```js
 var Msg = (function() {
   function test() {
   }...
 }
 Msg.test()
 ```
** 命名の意味
 - `_`で始まるのはプライベートメソッドです。言語によっては未使用変数ということもあります。
** NodeList
 - NodeList - https://developer.mozilla.org/ja/docs/Web/API/NodeList
 - text node: タグに囲まれたもの。`<p>これ</p>。`
 - element node: `<p>や、</p>`
 - DOMツリー: ブラウザがアクセスしてHTMLを解析すると文書の内容を表すオブジェクトのツリー構造が構築されます。これがDOMツリーです。DOMツリーを形成する1つ1つのオブジェクトがノードです。さらに子のオブジェクトを持っている可能性があります。
 https://qiita.com/KDE_SPACE/items/e21bb31dd4d9c162c4a6
