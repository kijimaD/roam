:PROPERTIES:
:ID:       868ac56a-2d42-48d7-ab7f-7047c85a8f39
:END:
#+title: Programming Language
* 概要
プログラミング言語は、コンピュータへの命令を記述する言語。
* Memo
** 言語の学びやすさ
言語そのものより、既存のプロジェクトがどれくらいあるか、も大きい。
難しくても、参考になるコードが簡単に見つけられれば学習は容易になる。

また、使い慣れたソフトがあるなら最高。何をするのか予めわかっていればすぐ理解できる。
本体コードを見るのもいい。
* References
** [[https://github.com/sdmg15/Best-websites-a-programmer-should-visit][sdmg15/Best-websites-a-programmer-should-visit: Some useful websites for programmers.]]
役立つリンク集。
** TODO [[https://github.com/donnemartin/system-design-primer][donnemartin/system-design-primer: Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.]]
大きなシステムの設計方法を学ぶ方法。
** TODO [[https://github.com/kamranahmedse/design-patterns-for-humans][kamranahmedse/design-patterns-for-humans: An ultra-simplified explanation to design patterns]]
シンプルなデザインパターンの解説。
** TODO [[https://github.com/mtdvio/every-programmer-should-know][mtdvio/every-programmer-should-know: A collection of (mostly) technical things every software developer should know about]]
プログラマーが知るべきこと。
** TODO [[https://web.archive.org/web/20120530181801/http:/local.joelonsoftware.com:80/wiki/Japanese][Japanese - The Joel on Software Translation Project]]
エッセイの日本語訳。
** TODO [[https://www.infoq.com/jp/articles/Understanding-Monads-guide-for-perplexed/][モナドを理解する - 迷える者への手引き]]
モナドの解説。
**  [[https://qiita.com/hirokidaichi/items/27c757d92b6915e8ecf7][ペアプログラミングして気がついた新人プログラマの成長を阻害する悪習 - Qiita]]
**  [[https://diveintocode.jp/blogs/Technology/PryDebug][DIVE INTO CODE | エラーの原因を突き止めるためにデバッグをする]]
pryデバッグの方法。
**  [[http://helloworldcollection.de/][The Hello World Collection]]
あらゆるプログラミング言語のhello world集。
**  [[https://gamesfromwithin.com/data-oriented-design][Data-Oriented Design (Or Why You Might Be Shooting Yourself in The Foot With OOP) – Games from Within]]
データ指向のデザイン。
** TODO [[https://practical.engineering/][Practical Engineering]]
エンジニアリングに関する面白い記事がある。
**  [[https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design][SOLID: The First 5 Principles of Object Oriented Design | DigitalOcean]]
オブジェクト指向の原則。
**  [[https://xn--97-273ae6a4irb6e2hsoiozc2g4b8082p.com/][プログラマが知るべき97のこと]]
**  [[https://xn--97-273ae6a4irb6e2hxjpb5etb3nqtgfpmg22065a.com/][ゲームクリエイターが知るべき97のこと]]
**  [[https://www.pygame.org/tags/all][Pygameリンク集]]
**  [[https://gameprogrammingpatterns.com/contents.html][Table of Contents · Game Programming Patterns]]
ゲームプログラミングでよく使われるデザインパターン。
