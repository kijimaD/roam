:PROPERTIES:
:ID:       e3b48a23-21bc-4cdf-8395-052fab9fecb5
:header-args+: :wrap :results raw
:mtime:    20241102180404 20241028101410
:ctime:    20210926151212
:END:
#+title: Computer Science
* 概要
Computer Scienceは学問としての領域。
* Memo
* Tasks
** TODO [[https://speakerdeck.com/kobatako/netutowakufalsekotowozhi-rutame-sohutouearutawo-zi-zuo-sitahua][ネットワークのことを知るため ソフトウェアルータを 自作した話 - Speaker Deck]]
自作するスライド。
** TODO [[https://www.slideshare.net/ichikaway/phperkaigi2019][ゼロから始めるファミコンエミュレータ生活 PHPerKaigi2019]]
エミュレータのスライド。
** [[https://keens.github.io/blog/2017/04/30/memoritosutakkutohi_puto/][メモリとスタックとヒープとプログラミング言語 | κeenのHappy Hacκing Blog]]
スタックとヒープの解説記事。
** TODO [[https://zenn.dev/yukiyada/articles/23c9fde740744d][Nand2tetrisをGoで実装する ~ コンパイラ(コンパイラ・フロントエンド)編(10,11章) ~]]
やる。
** TODO [[https://www.oreilly.co.jp/books/9784873116976/][O'Reilly Japan - アンダースタンディング コンピュテーション]]     :Read:
:LOGBOOK:
CLOCK: [2022-09-25 Sun 08:41]--[2022-09-25 Sun 09:06] =>  0:25
:END:
計算の仕組みを理解する本。
** TODO [[https://drive.google.com/file/d/1Hdh-K3gyttzf-74j3B9EfOl_dScswHEF/view][ods-cpp.pdf - Google Drive]]
:LOGBOOK:
CLOCK: [2022-12-10 Sat 16:15]--[2022-12-10 Sat 16:40] =>  0:25
CLOCK: [2022-12-10 Sat 09:56]--[2022-12-10 Sat 10:21] =>  0:25
:END:
無料のコンピュータサイエンスの教科書。
** TODO [[https://www.oreilly.co.jp/books/9784873117126/][O'Reilly Japan - コンピュータシステムの理論と実装]]           :Read:
:PROPERTIES:
:Effort:   50:00
:END:
:LOGBOOK:
CLOCK: [2023-05-04 Thu 23:16]--[2023-05-04 Thu 23:41] =>  0:25
CLOCK: [2023-05-04 Thu 22:51]--[2023-05-04 Thu 23:16] =>  0:25
CLOCK: [2023-05-04 Thu 21:26]--[2023-05-04 Thu 21:51] =>  0:25
CLOCK: [2023-05-04 Thu 21:00]--[2023-05-04 Thu 21:25] =>  0:25
CLOCK: [2023-05-04 Thu 20:17]--[2023-05-04 Thu 20:42] =>  0:25
CLOCK: [2023-05-01 Mon 23:17]--[2023-05-01 Mon 23:42] =>  0:25
CLOCK: [2023-05-01 Mon 21:52]--[2023-05-01 Mon 22:17] =>  0:25
CLOCK: [2023-05-01 Mon 20:52]--[2023-05-01 Mon 21:17] =>  0:25
CLOCK: [2023-05-01 Mon 20:26]--[2023-05-01 Mon 20:51] =>  0:25
CLOCK: [2023-04-22 Sat 20:26]--[2023-04-22 Sat 20:51] =>  0:25
CLOCK: [2023-04-22 Sat 19:57]--[2023-04-22 Sat 20:22] =>  0:25
CLOCK: [2023-04-22 Sat 19:29]--[2023-04-22 Sat 19:54] =>  0:25
CLOCK: [2023-04-10 Mon 23:31]--[2023-04-10 Mon 23:56] =>  0:25
CLOCK: [2023-04-10 Mon 22:57]--[2023-04-10 Mon 23:22] =>  0:25
CLOCK: [2023-04-10 Mon 22:26]--[2023-04-10 Mon 22:51] =>  0:25
CLOCK: [2023-04-10 Mon 21:37]--[2023-04-10 Mon 22:02] =>  0:25
CLOCK: [2023-04-09 Sun 23:33]--[2023-04-09 Sun 23:58] =>  0:25
CLOCK: [2023-04-09 Sun 23:08]--[2023-04-09 Sun 23:33] =>  0:25
CLOCK: [2023-04-09 Sun 22:35]--[2023-04-09 Sun 23:00] =>  0:25
CLOCK: [2023-04-09 Sun 22:09]--[2023-04-09 Sun 22:34] =>  0:25
CLOCK: [2023-04-09 Sun 19:48]--[2023-04-09 Sun 20:13] =>  0:25
CLOCK: [2023-04-09 Sun 19:23]--[2023-04-09 Sun 19:48] =>  0:25
CLOCK: [2023-04-09 Sun 16:57]--[2023-04-09 Sun 17:22] =>  0:25
CLOCK: [2023-04-09 Sun 16:29]--[2023-04-09 Sun 16:54] =>  0:25
CLOCK: [2023-04-09 Sun 16:04]--[2023-04-09 Sun 16:29] =>  0:25
CLOCK: [2023-04-09 Sun 15:37]--[2023-04-09 Sun 16:02] =>  0:25
CLOCK: [2023-04-09 Sun 15:08]--[2023-04-09 Sun 15:33] =>  0:25
CLOCK: [2023-04-09 Sun 11:48]--[2023-04-09 Sun 12:13] =>  0:25
CLOCK: [2023-04-09 Sun 11:09]--[2023-04-09 Sun 11:34] =>  0:25
CLOCK: [2023-04-09 Sun 10:44]--[2023-04-09 Sun 11:09] =>  0:25
CLOCK: [2023-04-09 Sun 00:57]--[2023-04-09 Sun 01:22] =>  0:25
CLOCK: [2023-04-09 Sun 00:32]--[2023-04-09 Sun 00:57] =>  0:25
CLOCK: [2023-04-08 Sat 23:33]--[2023-04-08 Sat 23:58] =>  0:25
CLOCK: [2023-04-08 Sat 18:22]--[2023-04-08 Sat 18:47] =>  0:25
CLOCK: [2023-04-08 Sat 17:57]--[2023-04-08 Sat 18:22] =>  0:25
CLOCK: [2023-04-08 Sat 17:20]--[2023-04-08 Sat 17:45] =>  0:25
CLOCK: [2023-04-08 Sat 16:54]--[2023-04-08 Sat 17:19] =>  0:25
CLOCK: [2023-04-08 Sat 16:29]--[2023-04-08 Sat 16:54] =>  0:25
CLOCK: [2023-04-08 Sat 15:45]--[2023-04-08 Sat 16:10] =>  0:25
CLOCK: [2023-04-06 Thu 23:32]--[2023-04-06 Thu 23:57] =>  0:25
CLOCK: [2023-04-06 Thu 23:03]--[2023-04-06 Thu 23:28] =>  0:25
CLOCK: [2023-04-06 Thu 22:27]--[2023-04-06 Thu 22:52] =>  0:25
CLOCK: [2023-04-06 Thu 22:02]--[2023-04-06 Thu 22:27] =>  0:25
CLOCK: [2023-04-06 Thu 21:10]--[2023-04-06 Thu 21:35] =>  0:25
CLOCK: [2023-04-06 Thu 00:37]--[2023-04-06 Thu 01:02] =>  0:25
CLOCK: [2023-04-04 Tue 20:45]--[2023-04-04 Tue 21:10] =>  0:25
CLOCK: [2023-04-04 Tue 20:01]--[2023-04-04 Tue 20:26] =>  0:25
CLOCK: [2023-04-04 Tue 19:35]--[2023-04-04 Tue 20:00] =>  0:25
CLOCK: [2023-04-04 Tue 00:35]--[2023-04-04 Tue 01:00] =>  0:25
CLOCK: [2023-04-03 Mon 00:45]--[2023-04-03 Mon 01:10] =>  0:25
CLOCK: [2023-04-02 Sun 22:34]--[2023-04-02 Sun 22:59] =>  0:25
CLOCK: [2023-04-02 Sun 22:08]--[2023-04-02 Sun 22:33] =>  0:25
CLOCK: [2023-04-02 Sun 19:56]--[2023-04-02 Sun 20:01] =>  0:05
CLOCK: [2023-03-28 Tue 22:00]--[2023-03-28 Tue 22:25] =>  0:25
CLOCK: [2023-03-28 Tue 21:26]--[2023-03-28 Tue 21:51] =>  0:25
CLOCK: [2023-03-18 Sat 15:54]--[2023-03-18 Sat 16:19] =>  0:25
CLOCK: [2023-03-18 Sat 15:27]--[2023-03-18 Sat 15:52] =>  0:25
:END:
実装して理解する本。

- 97, 128, 171, 180, 185

メモ。

- @value はAレジスタにvalueを格納することを示す
  - 例. @17 はAレジスタに17を格納する
- A命令 :: 操作を行いたいアドレスを指定する命令
- C命令 :: 計算命令
- デバイスはメモリマップを通じて、ほかのメモリと全く同じようにCPUから扱うことができる
  - キーボードを押している間、メモリのどこかの値が変わっている
- アセンブラは、かんたんに作れた。単なるテキスト処理にすぎない
- 高水準プログラムは初めに中間コードに変換され、その中間コードは機械語に変換される
  - 中間コードは実際のプラットフォームで実行される代わりに、バーチャルマシンで実行されるように設計されている
- 1. 高水準コードからVM命令の中間コードへの変換を行う
- 2. VMコードから対象プラットフォームにおける機械語への変換を行う
- スタックマシンという計算モデルにおいて、算術命令はスタックの一番上からオペランドを取り出し、その結果をスタックの一番上に置く。どのような算術命令や論理命令であっても、単純なスタックによるモデルを用いて、その命令のための評価器を実装することができる
- Jackクラスファイル → (コンパイラ) → VMファイル → (VM変換器) → Hackアセンブリコード → (アセンブラ) → Hackバイナリコード
- JVMはバイトコードと呼ばれる中間言語を実行するスタック型のバーチャルマシンである

* Words
- インタフェース :: そのデータ構造が何をするか表現する。データ構造がサポートしている操作一式と、セマンティクスを定義する
- 実装 :: そのデータ構造をどのようにやるかを表現する
- セマンティクス :: 操作の意味
* Reference
** [[https://speakerdeck.com/dqneo/making-compilers-is-fun][コンパイラ作りの魅力を語る / Making compilers is fun - Speaker Deck]]
コンパイラ作りのスライド。
** [[http://alvyray.com/Memos/CG/Microsoft/6_pixel.pdf][ピクセルは四角じゃない]]
ピクセルについての論文。
** [[https://simonschreibt.de/gat/renderhell/][Render Hell 2.0 | Simon schreibt.]]
GPUの解説。
** [[https://www.seshop.com/product/detail/24207][コンピュータアーキテクチャのエッセンス［第2版］【PDF版】 ｜ SEshop｜ 翔泳社の本・電子書籍通販サイト]]
低レイヤの本。
** [[https://w.atwiki.jp/gbspec/pages/35.html][CPU/命令セット - GB Spec - atwiki（アットウィキ）]]
命令セットの一覧。
** [[https://www.oreilly.co.jp/books/9784873118819/][O'Reilly Japan - Python計算機科学新教本]]
計算機科学を動くコードで学ぶ本。
** [[https://www.memorymanagement.org/][Home — Memory Management Reference 4.0 documentation]]
メモリ管理のリファレンス。
** [[https://cs50.jp/][CS50 for Japanese: コンピュータサイエンスの入門 – 当ウェブサイトは、Creative Commons ライセンスに基づいて管理されています。]]
ハーバード大学のコンピュータサイエンス講座の日本語訳。
** [[https://github.com/Developer-Y/cs-video-courses][Developer-Y/cs-video-courses: List of Computer Science courses with video lectures.]]
コンピュータ・サイエンスの動画集。
* Archives
** DONE [[https://speakerdeck.com/daikimiura/implement-jvm-with-ruby][RubyでJVMを実装してみる / Implement JVM with Ruby - Speaker Deck]]
CLOSED: [2023-04-16 Sun 22:01]
:LOGBOOK:
CLOCK: [2023-04-11 Tue 22:31]--[2023-04-11 Tue 22:56] =>  0:25
CLOCK: [2023-04-11 Tue 22:06]--[2023-04-11 Tue 22:31] =>  0:25
CLOCK: [2023-04-11 Tue 21:40]--[2023-04-11 Tue 22:05] =>  0:25
:END:
JVMを実装する。

** DONE [[https://speakerdeck.com/memory1994/phperkaigi-2019][PHPerKaigi 2019 - PHP でJVMに入門する]]
CLOSED: [2023-04-16 Sun 22:01]
:LOGBOOK:
CLOCK: [2023-04-11 Tue 00:48]--[2023-04-11 Tue 01:13] =>  0:25
CLOCK: [2023-04-11 Tue 00:12]--[2023-04-11 Tue 00:37] =>  0:25
:END:
VM実装の予備知識。

実装して理解できた。
** DONE JVMを実装する
CLOSED: [2023-04-23 Sun 12:06]
:LOGBOOK:
CLOCK: [2023-04-23 Sun 11:39]--[2023-04-23 Sun 12:05] =>  0:26
CLOCK: [2023-04-23 Sun 11:14]--[2023-04-23 Sun 11:39] =>  0:25
CLOCK: [2023-04-22 Sat 22:11]--[2023-04-22 Sat 22:36] =>  0:25
CLOCK: [2023-04-22 Sat 21:20]--[2023-04-22 Sat 21:45] =>  0:25
CLOCK: [2023-04-22 Sat 10:38]--[2023-04-22 Sat 11:03] =>  0:25
CLOCK: [2023-04-20 Thu 23:08]--[2023-04-20 Thu 23:33] =>  0:25
CLOCK: [2023-04-20 Thu 22:42]--[2023-04-20 Thu 23:07] =>  0:25
CLOCK: [2023-04-20 Thu 22:09]--[2023-04-20 Thu 22:34] =>  0:25
CLOCK: [2023-04-20 Thu 21:39]--[2023-04-20 Thu 22:04] =>  0:25
CLOCK: [2023-04-19 Wed 23:05]--[2023-04-19 Wed 23:30] =>  0:25
CLOCK: [2023-04-19 Wed 22:31]--[2023-04-19 Wed 22:56] =>  0:25
CLOCK: [2023-04-19 Wed 21:57]--[2023-04-19 Wed 22:22] =>  0:25
CLOCK: [2023-04-18 Tue 23:39]--[2023-04-19 Wed 00:04] =>  0:25
CLOCK: [2023-04-17 Mon 23:54]--[2023-04-18 Tue 00:19] =>  0:25
CLOCK: [2023-04-17 Mon 23:23]--[2023-04-17 Mon 23:48] =>  0:25
CLOCK: [2023-04-17 Mon 22:58]--[2023-04-17 Mon 23:23] =>  0:25
CLOCK: [2023-04-17 Mon 00:07]--[2023-04-17 Mon 00:32] =>  0:25
CLOCK: [2023-04-16 Sun 23:07]--[2023-04-16 Sun 23:32] =>  0:25
CLOCK: [2023-04-16 Sun 22:34]--[2023-04-16 Sun 22:39] =>  0:05
CLOCK: [2023-04-16 Sun 21:36]--[2023-04-16 Sun 22:01] =>  0:25
CLOCK: [2023-04-16 Sun 20:38]--[2023-04-16 Sun 21:03] =>  0:25
CLOCK: [2023-04-16 Sun 20:13]--[2023-04-16 Sun 20:38] =>  0:25
CLOCK: [2023-04-16 Sun 19:30]--[2023-04-16 Sun 19:55] =>  0:25
CLOCK: [2023-04-16 Sun 19:05]--[2023-04-16 Sun 19:30] =>  0:25
CLOCK: [2023-04-16 Sun 18:38]--[2023-04-16 Sun 19:03] =>  0:25
CLOCK: [2023-04-16 Sun 18:12]--[2023-04-16 Sun 18:37] =>  0:25
CLOCK: [2023-04-16 Sun 17:47]--[2023-04-16 Sun 18:12] =>  0:25
CLOCK: [2023-04-16 Sun 17:03]--[2023-04-16 Sun 17:28] =>  0:25
CLOCK: [2023-04-16 Sun 13:14]--[2023-04-16 Sun 13:39] =>  0:25
CLOCK: [2023-04-16 Sun 12:30]--[2023-04-16 Sun 12:55] =>  0:25
CLOCK: [2023-04-16 Sun 11:58]--[2023-04-16 Sun 12:23] =>  0:25
CLOCK: [2023-04-16 Sun 11:33]--[2023-04-16 Sun 11:58] =>  0:25
CLOCK: [2023-04-16 Sun 00:19]--[2023-04-16 Sun 00:44] =>  0:25
CLOCK: [2023-04-15 Sat 23:23]--[2023-04-15 Sat 23:48] =>  0:25
CLOCK: [2023-04-15 Sat 22:58]--[2023-04-15 Sat 23:23] =>  0:25
CLOCK: [2023-04-15 Sat 22:23]--[2023-04-15 Sat 22:48] =>  0:25
CLOCK: [2023-04-15 Sat 21:58]--[2023-04-15 Sat 22:23] =>  0:25
CLOCK: [2023-04-15 Sat 20:26]--[2023-04-15 Sat 20:51] =>  0:25
CLOCK: [2023-04-15 Sat 19:58]--[2023-04-15 Sat 20:23] =>  0:25
CLOCK: [2023-04-15 Sat 19:23]--[2023-04-15 Sat 19:48] =>  0:25
CLOCK: [2023-04-15 Sat 18:54]--[2023-04-15 Sat 19:19] =>  0:25
CLOCK: [2023-04-15 Sat 18:29]--[2023-04-15 Sat 18:54] =>  0:25
CLOCK: [2023-04-15 Sat 18:04]--[2023-04-15 Sat 18:29] =>  0:25
CLOCK: [2023-04-15 Sat 17:24]--[2023-04-15 Sat 17:49] =>  0:25
CLOCK: [2023-04-15 Sat 16:58]--[2023-04-15 Sat 17:23] =>  0:25
CLOCK: [2023-04-15 Sat 16:19]--[2023-04-15 Sat 16:44] =>  0:25
CLOCK: [2023-04-15 Sat 15:40]--[2023-04-15 Sat 16:05] =>  0:25
CLOCK: [2023-04-14 Fri 00:25]--[2023-04-14 Fri 00:50] =>  0:25
CLOCK: [2023-04-13 Thu 23:30]--[2023-04-13 Thu 23:55] =>  0:25
CLOCK: [2023-04-13 Thu 23:05]--[2023-04-13 Thu 23:30] =>  0:25
CLOCK: [2023-04-13 Thu 22:34]--[2023-04-13 Thu 22:59] =>  0:25
CLOCK: [2023-04-13 Thu 21:33]--[2023-04-13 Thu 21:58] =>  0:25
CLOCK: [2023-04-13 Thu 21:07]--[2023-04-13 Thu 21:32] =>  0:25
CLOCK: [2023-04-13 Thu 20:42]--[2023-04-13 Thu 21:07] =>  0:25
CLOCK: [2023-04-13 Thu 20:17]--[2023-04-13 Thu 20:42] =>  0:25
CLOCK: [2023-04-13 Thu 00:30]--[2023-04-13 Thu 00:55] =>  0:25
CLOCK: [2023-04-12 Wed 23:49]--[2023-04-13 Thu 00:14] =>  0:25
CLOCK: [2023-04-12 Wed 23:01]--[2023-04-12 Wed 23:26] =>  0:25
CLOCK: [2023-04-12 Wed 22:22]--[2023-04-12 Wed 22:47] =>  0:25
CLOCK: [2023-04-12 Wed 21:57]--[2023-04-12 Wed 22:22] =>  0:25
CLOCK: [2023-04-12 Wed 21:25]--[2023-04-12 Wed 21:50] =>  0:25
CLOCK: [2023-04-12 Wed 20:43]--[2023-04-12 Wed 21:08] =>  0:25
CLOCK: [2023-04-12 Wed 00:27]--[2023-04-12 Wed 00:52] =>  0:25
CLOCK: [2023-04-11 Tue 23:23]--[2023-04-11 Tue 23:48] =>  0:25
CLOCK: [2023-04-11 Tue 22:56]--[2023-04-11 Tue 23:21] =>  0:25
:END:

- 難しそうに見えるが、単にバイナリをパースしていく作業
- [[id:7cacbaa3-3995-41cf-8b72-58d6e07468b1][Go]]だと、binary.Readで構造体のフィールドのバイト数だけ読み進められる
** DONE [[https://speakerdeck.com/memory1994/php-de-jvm-woshi-zhuang-site-hello-world-wochu-li-surumade][PHP で JVM を実装して Hello World を出力するまで - Speaker Deck]]
CLOSED: [2023-04-23 Sun 12:06]
実装の解説。

- Constant Pool はコンパイル時に埋め込まれたクラスの情報や参照を保持しておくためのシンボルテーブル
- 実行の流れ
  - ClassFile Structureを読み込む
  - Constant Poolを読み込む
  - メソッドの情報を読み込む
  - Code Attributeを読み込む
  - オペコードを実行する
- オペランドスタック
- JVMはレジスタへ書き込むのではなく、メモリ上に値を積む。積んだ値を命令がオペランドとしてポップして処理する
- ~[オペコード][オペランド(オペコードによって長さが変わる)]~ みたいな感じ
