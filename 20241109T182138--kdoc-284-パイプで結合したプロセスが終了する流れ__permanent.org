:properties:
:ID: 20241109T182138
:mtime:    20241114213105
:ctime:    20241109182150
:end:
#+title:      KDOC 284: パイプで結合したプロセスが終了する流れ

#+date:       [2024-11-09 Sat 18:21]
#+filetags:   :permanent:
#+identifier: 20241109T182138

* この文書のステータス
- 作成
  - [X] 2024-11-10 貴島
- レビュー
  - [X] 2024-11-14 貴島

* 概要

#+caption: この例で説明する。catは終了コード141、headは終了コード0で終了する
#+begin_src shell
  cat /dev/random | head
#+end_src

[[file:images/20241109-rw.drawio.svg]]

1. cat と head が非同期で実行開始する
2. catがパイプのバッファにランダムなバイト列を書き込む
3. headがパイプのバッファに書き込まれた内容を読み取る。入力のうち先頭10行を読み込み、実行終了する
4. head終了に伴って読み込み側のファイルディスクリプタがクローズされる
5. catはまだ動いている
6. catがパイプバッファへ書き込みしようとすると、読み込み側のファイルディスクリプタがクローズされているので書き込みがブロックされる。OSからcatのプロセスにSIGPIPEが送られる
7. catプロセスはSIGPIPEによって終了させられる。終了コード141を返す。SIGPIPEによって終了したことを示すコード

* 関連
- [[id:20241109T174614][KDOC 282: パイプで結合すると実行終了するのはなぜか?]]。メモを書くきっかけとなった問い
- [[id:20241109T180827][KDOC 283: パイプはファイルディスクリプタがクローズされると終了する]]。マニュアルの該当箇所
