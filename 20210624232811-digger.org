#+title: digger

* 発表用スライド(プラグイン)

* 発表用スライド(ゲーム)
** やっていること(途中)
[[https://github.com/kijimaD/digger][GitHub - kijimaD/digger]]
CLIのゲームを作っています。
まだ移動しかできない。

ローグライクです。↓みたいなゲーム。超好きなジャンルです。

- [[https://github.com/CleverRaven/Cataclysm-DDA][Cataclysm-DDA]] :: ゾンビサバイバル
- [[http://www.bay12games.com/dwarves/][Dwarf Fortress]] :: サバイバル/シミュレーション
- Elona :: RPGぽい

自由度の高いゲーム世界を作り上げています。貧弱なグラフィックですが。
世界を作れたら、楽しいだろうなあと、ずっと考えてます。
** 前回の反省
仕事につく前、何度か作りはじめては挫折してきました。

直近だと去年開発してましたが、開発が進まなくなってやめました。↓
- [[https://github.com/kijimaD/ban-ban-don][GitHub - kijimaD/ban-ban-don]] :: rubyのゲームライブラリGosuを使った、シューティングゲーム。
(本に載ってたコードをベースに開発しました。根本のコード構造はすべて参考のものでオリジナル性はほとんどありません…)


これの問題点、挫折した理由...。

- 要件を高望みしすぎた。
  - 疑似3Dにした。座標に、ひし形の画像を敷き詰めると疑似3Dができます…画面確認が大変だった。特に重なりとか、接触判定が…。
  - アニメーションする画像の用意が大変すぎた。方向分の画像を作る必要がある。
  - リアルタイムなので再現しにくい。
  - パフォーマンスを考えないとまともに動かなくなる。黒魔術がある(四分木とか)。

- つらい目視確認開発。
  - 新機能を作るときも、いちいち起動して該当箇所までいって開発していた。
  - テストがない、lintがない(まだ知らなかった)
  - いつのまにかどこかが壊れて動かなくなること多数

=> ムリ ~＼(^o^)／~
** 反省を踏まえた要件
- *画像表示はあきらめる or 見下ろし*

- テストを書く(*テストが書ける構造にする*)

- ターン制にする
** 利点
時代に逆行した開発ですが、学べることもあります。

- 真のRubyだけに集中できる(ライブラリすらない)
- オブジェクト指向をやらなければならない状況。ゲームそのものがゲームオブジェクトの相互作用なので、オブジェクト指向でないと死ぬ。普通のツール作成とかが二者間だとしたら、ゲームは三者間。
- 性能を考慮する必要がない
* Todo
** object_poolオブジェクト間の接触判定
地形判定とは異なる。キャラクター層で起こる反応。
game_objectとmapではやり方が異なる。
** プレイヤーキャラ以外を追加する
表示文字を引数によって変える必要がある。
** メニュー
2つ目のstate。
** 戦闘モード
** ターン実装
getchでなんとなくターンぽくなっているが、移動以外でもターンが進んでしまう。
** 設定のファイル化
CDDAみたいに、設定類はすべてjsonかymlにする。
** アイテム追加
* 大TODO
- ローグライク … とりあえずこれをやる。
- エンカウント戦闘
- インベントリシステム
* Archive
** DONE 移動システム
CLOSED: [2021-06-26 土 21:31]
- 地形判定
** DONE マップをtxtファイルから読み込む
CLOSED: [2021-06-26 土 10:19]
** DONE mainファイル分割
CLOSED: [2021-06-24 木 23:45]
同じ形にした。
** DONE テスト追加
CLOSED: [2021-06-24 木 23:46]
** DONE テスト環境構築
CLOSED: [2021-06-24 木 23:46]
- 単独RSpec
- カバレッジ
** DONE 複数ウィンドウエリア
CLOSED: [2021-06-28 月 10:23]
メッセージエリア、ステータスエリアなどウィンドウにエリアを追加する。
** DONE component追加
CLOSED: [2021-06-29 火 10:05]
game_objectを構成するもの。直に起動されることはなく、object_poolにもaddされない。
** inputに分割
今はすべてfield_stateでやっているが、characterのcomponentでやるようにする。
** 別入力
とりあえず敵をランダム移動できるようにする。
