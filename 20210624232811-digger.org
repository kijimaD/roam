:PROPERTIES:
:ID:       70f249a8-f8c8-4a7e-978c-8ff04ffd09c0
:END:
#+title: digger
#+filetags: :Project:
* 概要
https://github.com/kijimaD/digger
diggerはシンボルエンカウント/ローグライクな要素を持った[[id:8b79aef9-1073-4788-9e81-68cc63e4f997][game]]である。
パッケージ等をできるだけ用いず、できるだけ元の[[id:cfd092c4-1bb2-43d3-88b1-9f647809e546][Ruby]]で書くことを目標にした。

- 反省
  - 機能追加が大変で挫折した
  - データがオブジェクトの入った配列で管理が大変だった。バケツリレーが発生
  - UIと機能が一体化
  - 参考になるコードがなかった
  - 自動テストで検知できない
* Todo
** TODO 攻撃方法の選択
** TODO 1エンカウント対複数の敵に対応する
今はエンカウントシンボルと敵が1対1なので、自由度が低い。
** TODO 遭遇中の敵の情報を出す
** TODO 使わない部分を消す
- 既存の戦闘部分は使わないので消す
- 遠距離アイテムは消す
* References
#+begin_quote
- http://www.roguebasin.com/index.php/Articles :: ローグライクに関する情報が集約されている。
- http://www.roguebasin.com/index.php?title=How_to_Write_a_Roguelike_in_15_Steps :: ローグライクの作り方のヒント。
- https://countable.hatenablog.com/entry/20120717/1342505647 :: ↑ページの和訳
- https://techblog.sega.jp/entry/2018/08/27/100000 :: ゲームのテスト
- https://www.amazon.co.jp/Programming-Patterns-%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E9%96%8B%E7%99%BA%E3%81%AE%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC-impress-gear%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-ebook/dp/B015R0M8W0/ref=sr_1_1?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&dchild=1&keywords=%E3%82%B2%E3%83%BC%E3%83%A0+%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3&qid=1627347211&sr=8-1 :: ゲームデザインパターン
#+end_quote
* Archives
** DONE 移動システム
CLOSED: [2021-06-26 Sat 21:31]
- 地形判定
** DONE マップをtxtファイルから読み込む
CLOSED: [2021-06-26 Sat 10:19]
** DONE mainファイル分割
CLOSED: [2021-06-24 Thu 23:45]
同じ形にした。
** DONE テスト追加
CLOSED: [2021-06-24 Thu 23:46]
** DONE テスト環境構築
CLOSED: [2021-06-24 Thu 23:46]
- 単独RSpec
- カバレッジ
** DONE 複数ウィンドウエリア
CLOSED: [2021-06-28 Mon 10:23]
メッセージエリア、ステータスエリアなどウィンドウにエリアを追加する。
** DONE component追加
CLOSED: [2021-06-29 Tue 10:05]
game_objectを構成するもの。直に起動されることはなく、object_poolにもaddされない。
** DONE inputに分割
CLOSED: [2021-07-03 Sat 12:45]
今はすべてfield_stateでやっているが、characterのcomponentでやるようにする。
** DONE 別入力
CLOSED: [2021-07-03 Sat 12:45]
とりあえず敵をランダム移動できるようにする。
** DONE message_displayとmessageの分割
CLOSED: [2021-07-03 Sat 00:09]
statsを作ってそこにmessageを入れることで対応した。
** DONE テストrequireを自動化する
CLOSED: [2021-07-03 Sat 12:46]
めんどいので。
** DONE RSpec lintを追加した
CLOSED: [2021-07-04 Sun 00:10]
その日の気分で書きがちなところに基準ができた。必須だな。
** DONE object_poolオブジェクト間の接触判定
CLOSED: [2021-07-04 Sun 16:50]
地形判定とは異なる。オブジェクト層で起こる反応。
game_objectとmapではやり方が異なる。
** DONE boxつけるとずれる問題
CLOSED: [2021-07-04 Sun 16:50]
範囲がわかりづらいのでつけたいが、横方向がずれてる。
最初の一行だけ正しくて、改行以降はインデントがセットされてない、みたいな状況か。
#+begin_src
 aaa
aaa
aaa
#+end_src
かな。

一行ずつ出力することで解決した。
** DONE 基地メニュー
CLOSED: [2021-07-04 Sun 21:24]
2つ目state。
まだ内容はない。
** DONE ウィンドウ分割
CLOSED: [2021-07-04 Sun 21:24]
対応の必要なし。

メインウィンドウにすべて表示してたが、分割したほうがやりやすそうなので分割する。
マップウィンドウ、メッセージウィンドウとか。

その場合、ウィンドウ構成がモードによって変わる。どうやって表現すればよいだろう。
うーん、やっぱり面倒なのでメインウィンドウに座標挿入でよさそう。

stateによって使い回せるしな。
** DONE ゲームのおおまかな計画をやる
CLOSED: [2021-07-07 Wed 21:18]
バトルディッガーにしようとうっすら考えてたが、さすがに丸パクはできないので、混ぜよう。
そろそろどういう仕様にするか決めないといけない段階。

合成システムはカンタンに実装できて奥深そうなんだよな。
なのでシステム的にはディッガーよりハタ人間。

- アイテム合成
** DONE フォント
CLOSED: [2021-07-07 Wed 21:18]
- Press Start 2p :: 横幅的には一番
- misaki font :: 日本語対応
** DONE AIキャラが消える問題
CLOSED: [2021-07-07 Wed 21:18]
updateはAIキャラが動かない。
drawは全員消える。

game_objectにupdate, drawメソッドがあると、componentのdraw, updateが上書きされるため起こる。
ai_inputはcomponentでupdateを使って入力を生成してるが、player_inputはbutton_downのため、問題が起きたり起きなかったりする。

drawでは機能しないのはなぜだ。処理の順番か。field_stateの処理の順番を並べ替えるとできた。
object_pool.draw
map.draw
の順番にしないといけない。
** DONE カメラ追加
CLOSED: [2021-07-07 Wed 21:19]
** DONE アイテム追加する
CLOSED: [2021-07-08 Thu 10:12]
game_objectのアイテムと、所持品としてのアイテムをどう分ければよいだろう。
少なくとも単語を分けることが必要そう。

pickupはいいセンいってるが、動作っぽい。
まあいいか。後からどうするか明確になってからで。
** DONE プレイヤーキャラ以外を追加する
CLOSED: [2021-07-10 Sat 19:51]
表示文字をキャラによって変える必要がある。
inputによって分岐するようにした。
** DONE メニュー追加する
CLOSED: [2021-07-10 Sat 19:54]
画面追加だけできした。あとはカーソル移動とかか。
** DONE 設定のファイル化
CLOSED: [2021-07-10 Sat 19:55]
CDDAみたいに、設定類はすべてjsonかymlにする。
キャラクターは完了。とはいえシルエットだけなのでそんなにパラメータはない。
一応はできたが、これがtype objectと自信がもてない。characterはマップのシルエットとして使うくらいだからあまり必要性ないんだよな。
** DONE ターン実装
CLOSED: [2021-07-11 Sun 16:58]
getchでなんとなくターンぽくなっているが、移動以外でもターンが進んでしまう。
ターンが進むのは移動だけでよさそう。ローグライクだったら攻撃でも進むが、このゲームにはない。

player_inputかつ、移動ができたときだけexecuteフラグをオンにする。
** DONE characterをphysicsに分割する
CLOSED: [2021-07-11 Sun 16:58]
** DONE メニュー画面でカーソル移動できるようにする
CLOSED: [2021-07-12 Mon 21:16]
カーソル移動はメンドイのでしない。
** DONE Terrainクラスを作る(flyweightパターン)
CLOSED: [2021-07-12 Mon 21:16]
コードで直に地形判定をしているため。
地形用のクラスに切り分ける。
Terrainオブジェクトは状況非依存。つまり草地タイルはすべて同一。
なので、Terrainオブジェクトの格子にするのではなく、Terrainオブジェクトへのポインタにする。

- 地形情報にアクセスするために、worldから取る必要がなくなる。
- タイルから直にアクセスできるように。

まず文字列のマップをオブジェクトのマップにする。
どうやってやればいいんだ。
** DONE item_type
CLOSED: [2021-07-12 Mon 23:08]
作ろうと思ったがどうしよう。どういったプロパティを持つか。
- アイテムの中身

とりあえずイメージしやすいように名前を取り出せるようにする。
フィールドオブジェクトしては名前くらいしか必要でない。
** DONE インベントリ
CLOSED: [2021-07-14 Wed 00:58]
アイテムを拾ったとき、インベントリに追加する。
フィールドのはアイテムだが、それから別のオブジェクトにするか。

消費物、素材は単なる数値だが、装備はさまざまなパラメータを持った別オブジェクトだ。

単にオブジェクトを配列に追加するだけだが、仮で完了。
** DONE 衝突テスト
CLOSED: [2021-07-15 Thu 10:54]
衝突関係がややこしくなってきたのでテストで確かめることにする。
アイテム、キャラクタ(Ai, Player)
** DONE 自動操作テスト
CLOSED: [2021-07-16 Fri 10:37]
オートプレイさせたい。
system spec的な。
実際のキーボード入力をシミュレートする。

今はgetchで止まるのでできない。直にbutton_downを受け付けるようにするとかできないか。
そもそもgetchがよくない説もある。アニメーションは一切できないからな。
入力は任意でよくしたい。入力しなくてもゲームループは進む。
ターンベースだろうと、ゲームループは回すほうが表現豊か。

テストのときはゲームループを手動で進めればよいのでは。
キーボード入力はできないが、直に入力すればいい。一応できた。
** DONE utilsのload_jsonをデフォルト拡張子jsonにする
CLOSED: [2021-07-16 Fri 22:57]
** DONE コンパイル(断念)
CLOSED: [2021-07-16 Fri 22:59]
プレイヤーがいちいちbundle installとかしなくていいようにexeとか実行形式にしたいが、どうすればいいんだろう。
ruby-packerというのがあるらしい。
これで各環境用にコンパイルするようにすればいい。

大変そうなので断念。
** DONE インベントリに入れた時の挙動を変える
CLOSED: [2021-07-17 Sat 19:54]
素材系のときは、オブジェクトは保持せず単にカウントアップするだけにする。
武器とか消費アイテムはオブジェクトとして保持する。

item_typeにcountを保持することにした。やや不自然だが、itemから直に数を増やす操作ができたり、問い合わせがカンタンだ。いちいち初期化しておく必要もない。
** DONE アイテムをflyweightにする → item_typeを共通にする
CLOSED: [2021-07-17 Sat 19:57]
今はそれぞれ別のオブジェクトになっているので、共通オブジェクトにする。
jsonで読んでそれを各自インスタンス変数に入れるみたいなことってできるのかな。一気に全インスタンスを配列に入れ、配列をインスタンス変数にするとできる。

正確にいうと、item_typeが共通である。itemオブジェクト自体はユニークである。取得して消えたり座標を持ってるから。
** DONE 各state共通のinputを継承元に書く
CLOSED: [2021-07-18 Sun 15:02]
たとえば'c'はどのstateでも終了にしたい。

抽象クラスに移動した。
** DONE 移動AI
CLOSED: [2021-07-23 Fri 23:27]
経路選択をどうすればよいのだろう。斜めにターゲットがあるときどうやってジグザグを判定するか。
** DONE エンカウント追加
CLOSED: [2021-07-26 Mon 09:26]
戦闘モードへ遷移する。
** DONE パーティ状況を表示する
CLOSED: [2021-07-26 Mon 09:26]
まず戦闘のまえにこっちからやろう。
連れてる仲間、HP,SPを表示する。
** CLOSE Todo
CLOSED: [2022-04-07 Thu 10:35]
*** 戦闘後の移動
AIとは移動が競合するので、移動前のものになっている。
戦闘になった瞬間ゲームオブジェクトを消すので、移動できてもよさそう。あーでもそうすると逃げることができないのか。逃げたときは前の位置に移動したいところ。
勝利: 自分が動こうとしていた場所へ移動する。
逃走: 自分が動く前の場所へ移動する。
*** 非同期キーボードイベント
Gosuのキーボードだけ拝借できるかなと思ったが、Gosuのウィンドウにフォーカスが当たらないと検知できない。そりゃそうか。なのでncurses部分を書き換える必要がある。

現状ncurseの問題点。
- アニメーションが一切できない。
- フォントが変えられない。
- 描画単位が1マス。

CLIでも表現力が上がる。

テスト関係を変えないといけなそう。CIでgosu実行するとどうなるんだろう。
単体テストはOKそうだが、結合はどうなるんだろう。ゲームループ内で操作できるのか。
魅力的だが、別にあとでもよさそう。
*** 地図ファイルから敵やアイテム生成する
ランダムに加えて固定でも配置できるようにする。
地図と思ったが、移動パターンとか指定したいので結局テキストでやらないといけないか。
*** mapとcameraを分離
すべてのベースはmapの配列。
- character,itemを埋め込む。
- cameraのメソッドで配列を切り取って、描画している。
- 毎ターンリセット
よくないのは、すべてmapの配列操作で密結合していることだ。

書き換えるので、キャラがいると地形データが取れなくなる。別レイヤで処理したい。
banbandonではどうしてるのだろう。カメラとマップは分離しているように見える。

bbdではマップ上に描画しているのに対して、diggerでは画面のピクセルを指定して描画しないといけない違い。

結局地形判定はflyweightのworld配列でやってるので、関係なくなった。描画だけに使われる文字列配列。
*** 戦闘モード追加する
とりあえずstate切り替えだけ追加した。
戦闘のためにはいくつかのクラス、パラメータを用意してやる必要がある。

- party
- member
- enemy

#+begin_quote
http://www.lancarse.co.jp/blog/?p=194
#+end_quote
actorからパラメータをコピーして、1ターン分の結果を先に計算。
して、演出用メッセージを生成する。
コードの見通しがよくなる。
*** singletonを減らす
inventoryとかは似たような状況で、singletonになっている。
乱立するのが嫌なので1つのsingletonに、inventoryとかpartyとかを含むようにしたいな。
メッセージなどもそっちに保持させる。characterごとでなく。
*** 永続値をどこで持つか
ステートを切り替えても持ってないといけないものがある。
仲間のHPとか装備とか。そういうのをどこで保持すればいいんだろう。

とりあえずsignletonにしておけば良いかな。
*** 戦闘の方はmemberにする
エンカウント型にすると、map上のシンボルが複数のキャラクターを持つことがありうる。
現状のCharacterと合わなくなるような気がする。
map上とbattle上のcharacterは別物だ。

=>マップの方はpartyにする。
戦闘の方をcharacterに。
あまり直感的ではないな。

戦闘の方はmemberにするとか。属してるニュアンスは出る。

いろいろ違うので敵と仲間は別にしよう。かなり共通しているところもあるので組み合わせながら。
*** スキルはmemberで共通
敵もスキルを持ってる。
*** コマンドパターンについて考える
今の状況は、キーボードイべントとメソッドが直に結びついてる。
*** 達成バッジ
オブザーバパターン。
統計情報…移動した回数、経過ターン、倒した敵の数。
動機づけになる。
*** 不可視にする
視界が難しそう。AIにできるならプレイヤーにも追加すると面白そう。cataclysmみたいに、壁の向こう側は不可視にする。

気づくまでは、固定の動きをする。T字で左折する法則。
** CLOSE Todo(リファクタ)
*** カーソル系画面表示をリファクタリングする
カーソル、タブがだるい。
何かユーティリティを作ってもいい。
*** Inventoryシングルトンをやめる
inventoryをシングルトンにするのはやめよう。テストがだるい。
とはいえ、stateを限定しないデータなので、それなりの理由はある。
*** メッセージシステム
statsが持ってるのはおかしい気がする。
プレイヤーだけが知っていればいいことなので。
いちいちcharacterから辿るのはメンドイし、直感的でない。
** CLOSE 設計
*** 戦闘モード
#+begin_src

  oo`'._..---.___..-   oo`'._..---.___..-
 (_,-.        ,..'`  (_,-.        ,..'`
      `'.    ;            `'.    ;
         : :`                : :`
        _;_;                _;_;
ティラノ              ティラノ

ティラノ> 体当たりした
白瀬> 10のダメージを受けた
椿> 対物ライフル → ティラノに30のダメージ
石原> 木刀 → ティラノに5のダメージ

--------------------------------
→戦う　　|白瀬 HP: 55/20 SP: 40/30 **--- ****-
 逃げる　|椿　 HP: 90/84 SP: 50/20 ****- ***--
 アイテム|石原 HP: 80/80 SP: 50/24 ***** **---
 　　　　|
#+end_src
*** 拠点メニューモード
拠点。
#+begin_src
→休憩
 合成
 アイテム
 仲間
 装備
 セーブ
 ロード
#+end_src

フィールドではメニューにはアクセスしない。
ステータスやアイテムへのショートカットキーを用意する。
*** フィールドモード
- ターンベース
- イベントオブジェクトに接触して、別モードに遷移する

ステータス、アイテム、装備へのショートカットキーを用意する。
** DONE 戦闘モード追加
CLOSED: [2022-04-07 Thu 10:33]
:LOGBOOK:
CLOCK: [2022-04-06 Wed 22:41]--[2022-04-06 Wed 23:06] =>  0:25
CLOCK: [2022-04-06 Wed 22:16]--[2022-04-06 Wed 22:41] =>  0:25
CLOCK: [2022-04-06 Wed 21:42]--[2022-04-06 Wed 22:07] =>  0:25
CLOCK: [2022-04-06 Wed 09:45]--[2022-04-06 Wed 10:10] =>  0:25
CLOCK: [2022-04-06 Wed 00:19]--[2022-04-06 Wed 00:44] =>  0:25
CLOCK: [2022-04-05 Tue 23:34]--[2022-04-05 Tue 23:59] =>  0:25
CLOCK: [2022-04-05 Tue 09:15]--[2022-04-05 Tue 09:40] =>  0:25
CLOCK: [2022-04-05 Tue 00:21]--[2022-04-05 Tue 00:46] =>  0:25
CLOCK: [2022-04-04 Mon 23:56]--[2022-04-05 Tue 00:21] =>  0:25
CLOCK: [2022-04-04 Mon 23:13]--[2022-04-04 Mon 23:38] =>  0:25
CLOCK: [2022-04-04 Mon 22:48]--[2022-04-04 Mon 23:13] =>  0:25
CLOCK: [2022-04-04 Mon 22:07]--[2022-04-04 Mon 22:32] =>  0:25
CLOCK: [2022-04-04 Mon 21:42]--[2022-04-04 Mon 22:07] =>  0:25
CLOCK: [2022-04-04 Mon 21:16]--[2022-04-04 Mon 21:16] =>  0:00
CLOCK: [2022-04-04 Mon 20:51]--[2022-04-04 Mon 21:16] =>  0:25
CLOCK: [2022-04-03 Sun 22:32]--[2022-04-03 Sun 22:57] =>  0:25
CLOCK: [2022-04-03 Sun 22:07]--[2022-04-03 Sun 22:32] =>  0:25
CLOCK: [2022-04-03 Sun 21:42]--[2022-04-03 Sun 22:07] =>  0:25
CLOCK: [2022-04-03 Sun 21:04]--[2022-04-03 Sun 21:29] =>  0:25
CLOCK: [2022-04-03 Sun 20:25]--[2022-04-03 Sun 20:50] =>  0:25
CLOCK: [2022-04-03 Sun 20:00]--[2022-04-03 Sun 20:25] =>  0:25
CLOCK: [2022-04-03 Sun 19:35]--[2022-04-03 Sun 20:00] =>  0:25
CLOCK: [2022-04-03 Sun 19:10]--[2022-04-03 Sun 19:35] =>  0:25
CLOCK: [2022-04-03 Sun 16:30]--[2022-04-03 Sun 16:55] =>  0:25
CLOCK: [2022-04-03 Sun 15:37]--[2022-04-03 Sun 16:02] =>  0:25
CLOCK: [2022-04-03 Sun 15:06]--[2022-04-03 Sun 15:31] =>  0:25
CLOCK: [2022-04-03 Sun 14:41]--[2022-04-03 Sun 15:06] =>  0:25
CLOCK: [2022-04-03 Sun 14:00]--[2022-04-03 Sun 14:25] =>  0:25
CLOCK: [2022-04-03 Sun 13:35]--[2022-04-03 Sun 14:00] =>  0:25
CLOCK: [2022-04-03 Sun 12:08]--[2022-04-03 Sun 12:33] =>  0:25
CLOCK: [2022-04-03 Sun 11:30]--[2022-04-03 Sun 11:55] =>  0:25
:END:
接触したときにフラグを立てて、stateに入る。
wants_to_{}系か。
直にstateを変更するというより、フラグを使ってstateを間接的に移動する。
wants_to_meleeの個別要素にアクセスできない。

wants_to_attackを入れておいて、systemを一度回せばいいかな。
一度実行するたびにメッセージを表示して、enterの入力待ちにする。
** DONE GitHub Pagesにデプロイ
CLOSED: [2022-04-07 Thu 10:33]
