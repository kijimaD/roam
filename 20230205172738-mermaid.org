:PROPERTIES:
:ID:       5e514773-5808-4a6c-a271-e4de4cfe6f1a
:END:
#+title: Mermaid
* 概要
Mermaidはテキストで作図するためのライブラリ。[[id:a6980e15-ecee-466e-9ea7-2c0210243c0d][JavaScript]]で実装されている。
* Memo
** 例
#+begin_src mermaid :file images/mj7c6u19ug.png
flowchart LR

A[Hard] -->|Text| B(Round)
B --> C{Decision}
C -->|One| D[Result 1]
C -->|Two| E[Result 2]
#+end_src

#+RESULTS:
[[file:images/mj7c6u19ug.png]]

#+begin_src mermaid :file images/9mwcl8ekjv.png
flowchart RL

  A[Hard] -->|Text| B(Round)
  B --> C{Decision}
  C -->|One| D[Result 1]
  C -->|Two| E[Result 2]
#+end_src

#+RESULTS:
[[file:images/9mwcl8ekjv.png]]

#+begin_src mermaid :file images/mksef87bio.png
sequenceDiagram
    Alice->>John: Hello John, how are you?
    John-->>Alice: Great!
    Alice-)John: See you later!
#+end_src

#+RESULTS:
[[file:images/mksef87bio.png]]

#+begin_src mermaid :file images/avch4p53q1.png
  flowchart TB
    subgraph GHA
    a1(ビルド)
    end
    subgraph GHP
    p1(HTML)
    end
    subgraph GHCR
    cr1(image)
    end
    GHCR -- Image Pull --> GHP
    GHA -- Image Push --> GHCR
#+end_src

#+RESULTS:
[[file:images/avch4p53q1.png]]

#+caption: https://dev.classmethod.jp/articles/workflow-tips-with-mermaid/
#+begin_src mermaid :file images/s4p5rcy6pz.png
  sequenceDiagram
      autonumber
      actor お客様
      participant form as 申し込みフォーム
      participant s3 as 申込書補保管S3
      participant admin as 管理システム
      お客様->>form: サービス申し込み
      Note left of form: 申込書
      form->>s3: 申込書保存
      Note left of s3: 申込書
      form->>お客様: 受付処理中連絡
      s3->>s3: FSSによる申込書マルウェアチェック
      s3->>admin: 申込書マルウェアチェック完了通知
      admin->>s3: 申込書取得リクエスト
      s3->>admin: 申込書取得レスポンス
      Note left of admin: 申込書
      admin->>admin: 申込書バリデーションチェック
      admin->>admin: 申込情報登録
      admin->>お客様: 受付完了連絡
#+end_src

#+RESULTS:
[[file:images/s4p5rcy6pz.png]]

#+caption: https://zenn.dev/yasuhiroki/articles/dd0feae790ba41
#+begin_src mermaid :file images/b6ac1wzf2u.png
  sequenceDiagram
  autonumber
  Client->>+Server: GET /issues
  Server--)Server2: 非同期リクエスト
  Server-->>-Client: response
  loop
    Server2-->Server2: なにかしら
    Note right of Server2: 処理が完了しなくても<br/>10秒で強制終了する
  end
#+end_src

#+RESULTS:
[[file:images/b6ac1wzf2u.png]]

* Tasks
* Reference
* Archives
