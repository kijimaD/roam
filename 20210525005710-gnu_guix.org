:PROPERTIES:
:ID:       d694ecaa-6a8b-4669-a95c-f76de6dcbd2c
:END:
#+title: GNU Guix

[[id:a9fab970-2057-48ce-95ee-19964d639a38][Project]]
パッケージ管理システム。
- システム設定をリポジトリで管理できる
- ロールバックできる
- マシンによって設定を変えることも可能
* GNU Guix
** 基本のコマンド
#+begin_src shell
  guix pull --news
  guix install {package}
  guix remove {package}
  guix package --list-generations
  guix package --list-installed
  guix package --switch-generation=42
  guix package --roll-back

  guix package --export-manifest
  guix refresh # 更新
#+end_src
** 詳しい設定
usbメモリーからインストールする方法をわかりやすく解説。

#+begin_quote
https://github.com/daviwil/dotfiles/blob/master/Systems.org (動画)
https://www.youtube.com/watch?v=oSy-TmoxG_Y
https://systemcrafters.cc/craft-your-system-with-guix/full-system-install/ (↑メモ)
#+end_quote

- ブートusb用意
- インストール(TTY作業)
- ログイン(以後、GUI)
- パスワード設定
- guix設定ファイル準備(etcから移す)

#+begin_src shell
mkdir -p ~/.config/guix
cd ~/.config/guix
cp /etc/channels.scm .
cp /etc/config.scm ./system.scm
chmod +w channels.scm
#+end_src

- commit削除
- アップデート

#+begin_src shell
guix pull
sudo -E guix system reconfigure ~/.config/guix/system.scm
#+end_src

** 日本語入力
#+begin_quote
https://debbugs.gnu.org/cgi/bugreport.cgi?bug=35610#38
#+end_quote

言語設定を日本語にしただけでは入力や表示ができない。手動で設定する必要がある。
#+begin_src shell
  guix package -i ibus ibus-anthy font-adobe-source-han-sans
#+end_src

~.bash_profile~ などに追加。
#+begin_src emacs-lisp
  export GUIX_GTK2_IM_MODULE_FILE="$HOME/.guix-profile/lib/gtk-2.0/2.10.0/immodules-gtk2.cache"
  export GUIX_GTK3_IM_MODULE_FILE="$HOME/.guix-profile/lib/gtk-3.0/3.0.0/immodules-gtk3.cache"
#+end_src

ibusのキャッシュを削除する(重要)。
#+begin_src shell
  rm -rf ~/.cache/ibus
#+end_src

再起動する。
#+begin_src shell
  ibus-setup
#+end_src
一覧にJapanese(Anthy)が追加されているので、選択する。

- インプットメソッド切り替えはKeyboard Shortcutからできる。
- ibus設定画面はGNOME検索には出てこない。言語選択のJapanese(Anthy)歯車から設定できる。
** vterm
vtermのコンパイルにCmakeが必要。
#+begin_src shell
guix install cmake
#+end_src

#+begin_src sh
guix install nss-certs
export SSL_CERT_DIR="$HOME/.guix-profile/etc/ssl/certs"
export SSL_CERT_FILE="$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt"
export GIT_SSL_CAINFO="$SSL_CERT_FILE"
export CURL_CA_BUNDLE="$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt"
#+end_src
** caps入れ替え
system.scm書き換えでできるはずだが、反映させる方法がわからない。
gnomeのコマンドを1回打って代用する。
#+begin_src shell
  gsettings set org.gnome.desktop.input-sources xkb-options "['ctrl:swapcaps']"
#+end_src
** パッケージを一括インストール
#+begin_src shell
  guix package -m ~/dotfiles/.config/guix/manifests/desktop.scm
#+end_src
** フローメモ
ctrl入れ替え → syncthingインストールと設定 → ssh鍵 → sshインストール。
gitインストール → dotfilesをclone。
** 自動起動
ファイルを配置して自動実行されるようにする。

サービス系の自動起動はguixが利用しているサービスマネージャ[[https://www.gnu.org/software/shepherd/][GNU Shepherd]]で行う。
https://github.com/kijimaD/dotfiles/blob/develop/.config/shepherd/init.scm
このように追加しておくと自動で実行する。
ただし、shepherd自体が自動で起動しないよう。デスクトップ環境に合わせて、自動実行させるようにする。
https://github.com/kijimaD/dotfiles/blob/develop/.config/autostart/gnome.desktop
実行権限をつけること。
** 好みのOSを作る
カスタマイズ性の高いソフトを組み合わせて、再現性の高い最高のシステムを作る。
*** GNU Guix
パッケージ管理システム。
*** GNU Emacs
環境。
*** GNU Stow
設定ファイル管理ツール。
シンボリックリンクを管理してくれる。
*** GNU Shepherd
サービス管理ツール。
*** GNU Make
古代からのビルド用ツールだが、普通にタスク定義に使える。
*** nyxt
完全キーボードでのブラウジングを可能にする。
*** i3-wm
どうしてもEmacsで日本語入力ができない。
ibusが特定アプリで動作しない不具合にあたっている。
gnomeでは完全にできるので、自動でやってくれてるところがあるよう。
Emacs上ではskkを使うようにして解決。Emacs以外では普通に入力すればいい。

ドキュメント
https://i3wm.org/docs/userguide.html#_hiding_vertical_borders
*** polybar
*** compton
Emacs側で透過設定しても字が薄くなって微妙だが、ウィンドウ側でやると綺麗にできる。
また、ほかのどんなソフトも透過できて統一感がある。
かっこいい。
*** feh
背景を設定する。
#+begin_src shell
  feh --bg-fill -Zr ~/dotfiles/backgrounds/4k-Ultra-HD_00330.jpg
#+end_src
** Gnomeで Alt + Shiftが設定されてしまう問題
いつの間にか、Alt+Shiftでinput method切り替えになっていて不便なことになっていた。
いつからかは不明。dotfilesの影響か、そうでないかもよくわからない。
gnome-tweaksをインストールしてAdditional OptionsにAlt+Shiftオプションがあるのでオフにした。(Emacs inputの設定項目があったので選択しておいた。)

https://askubuntu.com/questions/967364/ubuntu-17-10-and-later-cant-change-the-input-switching-shortcut-to-altshift

この辺configにまとめられないのか。
gnome使いたくないな。
** AnthyにC-c C-j を奪われる問題
anthyにC-c C-jが奪われるようになった。設定で変えても変更が反映されない。
まあ、英語に切り替えてからやればいいか。
クリーンインストールすると解決する問題か。
** 参考リンク
わかりやすいPDF。
https://archive.fosdem.org/2016/schedule/event/deployments_with_gnu_guix/attachments/slides/1086/export/events/attachments/deployments_with_gnu_guix/slides/1086/reproducible_deployments_gnu_guix.pdf

よくわからないので実際の例を見てみる。

ビルドしてる。
https://notabug.org/mthl/cuirass
* Todo
** インストールディスクを作成する(いちいち最初からするのが面倒なので)
すべて整備された状態でクリーンインストールできるようにしたい。
どうやってやるのかよくわからない。
またあのインストール作業をやりたくはない。面倒だからな。

情報が見つからない。そういうことではないのかもしれない。
デプロイ用途とかもあるから、合ってると思うんだけどな。
** あるいはそれまでのつなぎで完全クローンを作成しておく
少なくとも今はうまく動いてるので。
** 使えないきーがある
たとえばM+<が使えない。単に ~<~ 入力と判定されてしまう。
** i3のmod keyを変更する
AltとSuperの位置が近すぎて、workspaceを打ち間違う。
* Archive
** DONE キー設定(caps入れ替え)
CLOSED: [2021-08-08 Sun 23:31]
一度Gnomeコマンドを打つ必要がある。
システムレベルで入れ替えたいができてない。
** DONE フォントインストール
CLOSED: [2021-08-08 Sun 23:31]
dotfilesと統合して簡単に。
** DONE git
CLOSED: [2021-08-08 Sun 23:32]
gitをインストール。
** DONE ssh
CLOSED: [2021-08-08 Sun 23:32]
open-sshをインストール。
** DONE .emacs.d
CLOSED: [2021-08-08 Sun 23:32]
セットアップ完了。
** DONE dotfiles
CLOSED: [2021-08-08 Sun 23:32]
stowインストール、セットアップ完了。
** DONE syncthing
CLOSED: [2021-08-08 Sun 23:32]
単にインストールするだけ、コード。
** DONE 日本語入力
CLOSED: [2021-08-08 Sun 23:32]
anthyをインストール、コード化。
** DONE syncthingなどの自動起動
CLOSED: [2021-08-08 Sun 23:32]
shepherdでやるように。コード化。
** DONE vtermのコンパイルができない
CLOSED: [2021-08-08 Sun 23:36]
guixインストールした。
** DONE emacsqlが利用できない
CLOSED: [2021-08-08 Sun 23:35]
guixインストールするように。
** DONE migemoが使えない
CLOSED: [2021-08-09 Mon 11:02]
インストールされてない環境では読み込まない、などの対応が必要。
コピペしたぽいコードはちゃんと対応されてたが、対応コードの外側でrequireしたためどの環境でも読み込むようになっていた。修正した。
** DONE パッケージリストから一気にインストールできるようにする。
CLOSED: [2021-08-09 Mon 13:28]
desktop.scmを作成した。これで必要なパッケージを一気に導入できる。
** DONE システムビルド時にインストールさせたい
CLOSED: [2021-08-10 Tue 00:09]
パッケージ群をまとめてインストールするにはdotfileをcloneして実行すればいい。が、それをするためにsyncthingやgitをインストールする必要がある。
ビルド時にインストールさせたい。
よくわからんのでmakefileを作成した。
** DONE org-roamが使えない
CLOSED: [2021-08-11 Wed 23:26]
org-roamのバージョンが上がったためだった。コマンドが変わっていた。
逆にMintの方が古いままになっているので、そっちを直す必要がある。
もう大体同じことができるので乗り換えてもいい。
