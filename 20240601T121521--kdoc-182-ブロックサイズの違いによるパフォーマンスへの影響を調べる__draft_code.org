:properties:
:ID: 20240601T121521
:end:
#+title:      KDOC 182: ブロックサイズの違いによるパフォーマンスへの影響を調べる
#+date:       [2024-06-01 Sat 12:15]
#+filetags:   :draft:code:
#+identifier: 20240601T121521

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

# ====永久保存メモのルール。
# 自分の言葉で書く。
# 後から読み返して理解できる。
# 他のメモと関連付ける。
# ひとつのメモにひとつのことだけを書く。
# メモの内容は1枚で完結させる。
# 論文の中に組み込み、公表できるレベルである。

# ====価値があるか。
# その情報がどういった文脈で使えるか。
# どの程度重要な情報か。
# そのページのどこが本当に必要な部分なのか。

* この文書のステータス
- 作成
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
# 本文(タイトルをつける)。

すべてのディスクI/Oは、ブロックごとに処理される。本だけ見てもあまりわからないので、コマンドでミニマルに試して理解を深める。

* 方法

- ~dd~ はファイルをコピーするコマンド。オプションを細かく指定できる
- ~/dev/zero~ は、0を無限に返す仮想デバイス

まず、ブロックサイズ1で保存してみる。8秒かかった。

#+begin_src shell
  dd bs=1 count=2097152 if=/dev/zero of=tmp
#+end_src

#+RESULTS:
#+begin_src
2097152+0 records in
2097152+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 8.1858 s, 256 kB/s
#+end_src

ブロックサイズ1024にして、コピーしてみる。↑と同じサイズだが、とても早い。

#+caption: アラインメントされているブロックサイズ
#+begin_src shell
  dd bs=1024 count=2048 if=/dev/zero of=tmp
#+end_src

#+RESULTS:
#+begin_src
2048+0 records in
2048+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.0131229 s, 160 MB/s
#+end_src

パフォーマンスが改善した理由。

- ブロックサイズである1024の倍数である
- システムコールの回数が減った

#+caption: システムコールの回数の比較
#+begin_src shell :results raw
  strace dd bs=1 count=2097152 if=/dev/zero of=tmp 2>&1 | wc -l
  strace dd bs=1024 count=2048 if=/dev/zero of=tmp 2>&1 | wc -l
#+end_src

#+RESULTS:
#+begin_src
4194377
4169
#+end_src

* 関連
- [[id:20240225T174224][KDOC 109: 発行システムコールを調べる]]。straceの使い方
- [[id:20240601T120632][KDOC 181: 『Linuxシステムプログラミング』]]。例を試した

# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
