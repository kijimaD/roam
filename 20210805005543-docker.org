:PROPERTIES:
:ID:       1658782a-d331-464b-9fd7-1f8233b8b7f8
:END:
#+title: Docker

* 概要
Dockerはパフォーマンスに優れた仮想環境を作るプログラム。
* 各種コマンド
** dockerfile/runでbundle installするのは何が違うか
runは新しいコンテナを作成するため永続しない。
** dockerfile
Dockrfileはイメージを作る。(image build)

docker-composeは↑で作られたコンテナを作り操作する(不正確な可能性がある)。
コンテナには2種類ある。
- 自作する必要があるものは↑Dockerfileで作られたイメージを使う
- 既存コンテナ([[id:7dab097c-60ba-43b9-949f-c58bf3151aa8][MySQL]]とか)はコンテナをダウンロードする
** アタッチ
** コマンド実行
コンテナ内部で実行する。
#+begin_src shell
  docker-compose run {コンテナ} {shellコマンド}
#+end_src
** キャッシュを使わずにbuild
#+begin_src shell
  docker-compose build --no-cache
#+end_src
** 立ち上げと停止
#+begin_src shell
docker-compose up --build -d
docker-compose down
#+end_src
** docker外に公開
[[id:e04aa1a3-509c-45b2-ac64-53d69c961214][Rails]]
Dockerfileで。
#+begin_src shell
  CMD bundle exec rails server -b 0.0.0.0
#+end_src

などと書いておくと、外部(Docker外)からアクセスできるようになる。
左が公開、右がコンテナ内。だからブラウザでポート8000アクセスできるようになる。
#+begin_src shell
  docker run -p 8000:3000 -it bdd92ace66ec
#+end_src
** ログ確認
#+begin_src shell
docker ps -a # id確認
docker logs 1111... # idを入れる
#+end_src
** [[id:7dab097c-60ba-43b9-949f-c58bf3151aa8][MySQL]]エラー
- copyしてくるdocker-compose.ymlファイルが間違っていた。なので変更が反映されていなかった。
- docker-compose ps で見ると、mysqlがfailしていた。つまり起動後すぐMysqlがシャットダウンしてるのでアクセスできない。ログを見てみるとたくさんエラーが出ていたがよくわからない。バージョンを変えると起動できた。
** トークンエラー無視
docker内のrailsでtoken errorになった。dockerが1層はさまって、直に公開するわけでないので何かアドレスが異なるために起こるのだろう。
lvh.meからアクセスすると直った。

逐一対応するなら↓だが現実的でない。
#+begin_src ruby
skip_before_action :verify_authenticity_token
#+end_src
** 周辺コンテナとの疎通
エラー内容を確認する。
コンテナ間で通信したいのに、127.0.0.1になっていたらローカルのやつと通信しようとしている。

- redisエラーになった。確かに立ち上がってはいるのだが、railsからはアクセスできていない。
URLを環境変数でコンテナを指定した。

- memcachedエラーになった。特にブラウザにエラーは出ないがサーバでエラーが出てる。
127.0.0.1を見ているよう。ホストが指定できてないんだな。同様に環境変数を設定して接続できるようになった。
** 削除
使ってないイメージを削除する。
#+begin_src shell
  docker images prone
#+end_src

一気に全部削除する。
#+begin_src shell
docker stop $(docker ps -q)
docker rm $(docker ps -aq)
docker rmi $(docker images -q)
#+end_src
** LinuxのDockerで rails new したときの権限がrootになる問題
[[https://docs.docker.com/samples/rails/][If you are running Docker on Linux, the files rails new created are owned by root.]]
* Tasks
** Rails Docker環境化[5/7]
:LOGBOOK:
CLOCK: [2021-12-14 Tue 22:49]--[2021-12-15 Wed 00:40] =>  1:51
:END:
[[id:e04aa1a3-509c-45b2-ac64-53d69c961214][Rails]] + webpackをLinuxで立ち上げられるようにする。
- [ ] テストの実行
#+caption: bin/rspecがポイントか
#+begin_src shell
docker-compose run rails bundle exec bin/rspec spec/requests/top/top_spec.rb
#+end_src

- [X] サーバ立ち上げ
[[id:e04aa1a3-509c-45b2-ac64-53d69c961214][Rails]]部分をDocker化する。表示はまったく問題なさそう。
リロードするとちゃんとローカルの変更が反映される。

TODO: なぜかsudoでないとbundle installで書き込みができずエラーになる。

#+caption: docker-compose.yml
#+begin_src yml
  rails:
    build: .
    environment:
      RAILS_ENV: development
      REDIS_URL: redis://redis:6379
      MEMCACHED_URL: memcached://memcached:11211
      MEMCACHED_HOST: memcached
      MEMCACHED: memcached:11211
      WEBPACKER_DEV_SERVER_HOST: webpack
    container_name: rails
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    command: bash -c "bundle install && rm -f tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - .:/rails
#+end_src

#+caption: 立ち上げる
#+begin_src shell
sudo docker-compose up --build
#+end_src

- [X] gem not found
TODO: dockerfileとdocker-compose両方でbundle installしないとgem not foundになる。
2重にやってるのは何かおかしそう。

- [X] DBのGUIツールとの接続
Linux用のsqlectronがよさそう。が、上手く[[id:7dab097c-60ba-43b9-949f-c58bf3151aa8][MySQL]]と接続できない
docker-compose.ymlで ~MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'~ を追加すると入れるように。
パスワードを指定してるとログインできない。

- [ ] メール関係の動作確認
redisが本当に動いてるかわからない。

- [X] yarnができてない
どうやってwatchして反映できるんだろう。
確かにコマンドはできてるけど、webpack-dev-serverと通信ができてない感じだ。

接続できないけど、8080でサーバが立ち上がっていることは確認した。
portを合わせてやったらできた。
#+caption: docker-compose.yml
#+begin_src yml
  webpack:
    build: .
    environment:
      NODE_ENV: development
      RAILS_ENV: development
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
    command: yarn watch
    volumes:
      - .:/rails
    ports:
      - 8080:8080
    depends_on:
      - rails
#+end_src

ホットリロードができない。
↓をするとエラーは出なくなった。
#+caption: webpack.config.js
#+begin_src json
  devServer: {
    contentBase: path.join(__dirname, 'app/assets/javascripts'),
    host: '0.0.0.0',
    transportMode: 'ws',
    injectClient: false,
  },
#+end_src

- [X] コンソールに入れるように
できた。
#+caption: railsはコンテナ名で、この下を色々変えればいい
#+begin_src shell
  docker-compose run rails bundle exec rails c
#+end_src

#+caption: コンテナ内のshellに入ってみる
#+begin_src shell
  docker-compose run rails /bin/bash
#+end_src
* Archive
* References
**  [[https://docs.docker.jp/pdf-download.html][Docker ドキュメント日本語版 PDF ダウンロード — Docker-docs-ja 19.03 ドキュメント]]
Dockerのドキュメント。
