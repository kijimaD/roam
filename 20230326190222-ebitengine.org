:PROPERTIES:
:ID:       1125139c-d69f-4af0-a564-6b9b399ce976
:mtime:    20241102180218
:ctime:    20230326190222
:END:
#+title: Ebitengine
* 概要
Ebitengineは[[id:7cacbaa3-3995-41cf-8b72-58d6e07468b1][Go]]の2Dゲームエンジン。
* Memo
** 依存関係インストール
表示まわりの依存ライブラリがある。
- [[https://ebitengine.org/en/documents/install.html?os=linux][Install - Ebitengine]]
* Tasks
** TODO pongを読んでみる
:LOGBOOK:
CLOCK: [2023-09-09 Sat 20:37]--[2023-09-09 Sat 21:02] =>  0:25
CLOCK: [2023-09-09 Sat 20:12]--[2023-09-09 Sat 20:37] =>  0:25
CLOCK: [2023-09-09 Sat 19:30]--[2023-09-09 Sat 19:55] =>  0:25
:END:
- [[https://github.com/drpaneas/pong][drpaneas/pong: Make the old-time classic game 'pong' using Go & Ebitenengine]]

どういう感じにするのがいいのかざっくり見てみる。
* Reference
* Archives
** DONE 画像テストを試す
CLOSED: [2023-03-27 Mon 22:19]
:LOGBOOK:
CLOCK: [2023-03-27 Mon 22:07]--[2023-03-27 Mon 22:19] =>  0:12
CLOCK: [2023-03-27 Mon 21:42]--[2023-03-27 Mon 22:07] =>  0:25
CLOCK: [2023-03-27 Mon 00:28]--[2023-03-27 Mon 00:53] =>  0:25
CLOCK: [2023-03-26 Sun 23:31]--[2023-03-26 Sun 23:56] =>  0:25
CLOCK: [2023-03-26 Sun 22:51]--[2023-03-26 Sun 23:16] =>  0:25
CLOCK: [2023-03-26 Sun 22:26]--[2023-03-26 Sun 22:51] =>  0:25
CLOCK: [2023-03-26 Sun 21:51]--[2023-03-26 Sun 22:16] =>  0:25
CLOCK: [2023-03-26 Sun 20:44]--[2023-03-26 Sun 21:09] =>  0:25
CLOCK: [2023-03-26 Sun 20:19]--[2023-03-26 Sun 20:44] =>  0:25
CLOCK: [2023-03-26 Sun 19:54]--[2023-03-26 Sun 20:19] =>  0:25
CLOCK: [2023-03-26 Sun 19:03]--[2023-03-26 Sun 19:28] =>  0:25
:END:

入門のついでにリグレッションテストを試す。できたのだが、テストと実際に起動する用をどう分ければいいのかよくわからないな。

- interface ebiten.Game を満たす構造体、メソッドで分けるのはわかる。そこは分けてよさそう。しかし本質的ロジックはどこに書けばいいのだろう
- UpdateとかDrawに処理があるときは、完全に重複して書かないといけなそうな感じ
- 純粋に画像をいじる関数しかテストできないな
- Updateに関しては、普通のテストでもある程度検証できそうな感じはする
- m.Run()はテスト前に必ず実行されるフック。Update()内で実行することで、テストする前にUpdateまで実行されるようになる。これがないとウィンドウが出ず、画像が保存できなくなる。テストの中で書かれているのはメインテーマの関数から画像を作りだすことだけで、本来の実行の流れとは異なる
- なぜ、テストを先に動かしておくと画像実行できるのか.。テストとウィンドウを立ち上げる処理はコード的に関係ないように見える。わからん
