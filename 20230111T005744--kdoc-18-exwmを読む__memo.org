:properties:
:ID: 20230111T005744
:end:
#+title:      KDOC 18: EXWMを読む
#+date:       [2023-01-11 Wed 00:57]
#+filetags:   :memo:
#+identifier: 20230111T005744

[[id:eb196529-bdbd-48c5-9d5b-a156fe5c2f41][EXWM]]は[[id:1ad8c3d5-97ba-4905-be11-e6f2626127ad][Emacs]]上で動くWindow Managerである。

* X Window Manager
:LOGBOOK:
CLOCK: [2023-01-12 Thu 23:44]--[2023-01-13 Fri 00:09] =>  0:25
CLOCK: [2023-01-12 Thu 23:14]--[2023-01-12 Thu 23:39] =>  0:25
CLOCK: [2023-01-12 Thu 22:49]--[2023-01-12 Thu 23:14] =>  0:25
:END:
EXWMのコードを読む前に、明らかにドメイン知識が足りてない。X Window Managerの仕組みはどうなっているのだろうか。

* X Window System
** 管理しているもの
#+caption: 独自のウィンドウを持つアプリケーションが対象なのがわかる
#+begin_src emacs-lisp
exwm--id-buffer-alist
#+end_src

#+RESULTS:
#+begin_results
((98566146 .  Google-chrome<2>) (98566247 . Google-chrome) (56623148 .  firefox) (56623183 . firefox<2>))
#+end_results

EXWM IDとバッファ名の連想配列になっている。
* exwm.el
多く関数の方針として、共通のものがある。

- xにリクエストして(~xcb:+request-unchecked+reply~)、結果をreplyとして保存する
- replyの情報を使って変数に保存したりする
- updateと書いてある場合は、変数を更新する
- replyが返ってこない場合は処理をしない

* Memo
** xelbとは
:PROPERTIES:
:Effort:   1:00
:END:
:LOGBOOK:
CLOCK: [2023-01-14 Sat 13:58]--[2023-01-14 Sat 14:23] =>  0:25
CLOCK: [2023-01-14 Sat 13:33]--[2023-01-14 Sat 13:58] =>  0:25
CLOCK: [2023-01-14 Sat 13:07]--[2023-01-14 Sat 13:32] =>  0:25
CLOCK: [2023-01-13 Fri 00:10]--[2023-01-13 Fri 00:35] =>  0:25
:END:
xelbが別のライブラリになっている。X Protocolのラッパーのよう。

- X protocol Emacs Binding
- [[https://ja.wikipedia.org/wiki/X_Window_System_%E3%82%B3%E3%82%A2%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB][X Window System コアプロトコル - Wikipedia]]

関数名やファイル名はxcb。
** xim
- X Input Method で日本語入力する
