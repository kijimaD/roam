:properties:
:ID: 20250902T212635
:mtime:    20250910075818
:ctime:    20250902212639
:end:
#+title:      KDOC 435: daysPerYearの値は何か?
#+date:       [2025-09-02 Tue 21:26]
#+filetags:   :permanent:
#+identifier: 20250902T212635

* この文書のステータス
- 作成
  - [X] 2025-09-08 貴島
- レビュー
  - [X] 2025-09-10 貴島

* 概要

Go言語の ~json~ packageには不思議な値がある。これはなにか。

#+caption: 365.2425
#+begin_src git-permalink
https://github.com/golang/go/blob/11f11f2a00aa3149a6ea69a50e7b7b429cf368b7/src/encoding/json/v2/arshal_time.go#L469-L473
#+end_src

#+RESULTS:
#+begin_src
// daysPerYear is the exact average number of days in a year according to
// the Gregorian calender, which has an extra day each year that is
// a multiple of 4, unless it is evenly divisible by 100 but not by 400.
// This does not take into account leap seconds, which are not deterministic.
const daysPerYear = 365.2425
#+end_src

~daysPerYear~ はISO8601の継続時間フォーマットのパースに使われている。

~P3Y6M4DT12H30M5S~ のような文字列をGoのDuration型に変換する。

#+caption: この関数で使われている
#+begin_src git-permalink
https://github.com/golang/go/blob/988a20c8c5e2c9eb49f8749e5ee94ce3c964fe59/src/encoding/json/v2/arshal_time.go#L520
#+end_src

#+RESULTS:
#+begin_src
func parseDurationISO8601(b []byte) (time.Duration, error) {
#+end_src

期間は、うるう年などがあるので開始期間がわからないと正確でない。が、継続時間形式では開始時間指定がなくてもよいので、開始時間なしで丸めるためにこの不思議な値が使われている。

* 関連

- [[id:20250713T090146][KDOC 422: 継続時間形式を見る]]。継続時間に関する話題
