:properties:
:ID: 20250701T193212
:mtime:    20250719081139
:ctime:    20250701193213
:end:
#+title:      KDOC 414: インターフェースがヒープにエスケープされるのを見る
#+date:       [2025-07-01 Tue 19:32]
#+filetags:   :wiki:
#+identifier: 20250701T193212

* この文書のステータス
- 作成
  - [X] 2025-07-01 貴島
- レビュー
  - [X] 2025-07-19 貴島

* 概要

関数を抜けた後も使うようなケースでは、消されないようにスタックからヒープに移す必要がある。インターフェースを返すと、実体を関数から抜けた後も保持しておく必要があるため、ヒープにエスケープされる。

#+caption: 最初スタックにあったローカル変数がヒープにエスケープされる様子を見る
#+begin_src shell :results output
  tmpfile=$(mktemp /tmp/tmpgo.XXXXXX.go)

  cat > $tmpfile <<EOF
  package main

  func main() {}

  func f() any {
    x := "hello"
    return x // ヒープへ
  }

  EOF

  go build -gcflags="-m" -o bin $tmpfile 2>&1
  rm bin
  rm $tmpfile
#+end_src

#+RESULTS:
#+begin_src
/tmp/tmpgo.wTCwGe.go:3:6: can inline main
/tmp/tmpgo.wTCwGe.go:5:6: can inline f
/tmp/tmpgo.wTCwGe.go:7:10: x escapes to heap
#+end_src

* 関連

- [[id:20250630T185540][KDOC 411: スタックは積み重ねて取り出して解放する。ではヒープは?]]。ヒープを調べるきっかけになった
