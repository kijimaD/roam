:PROPERTIES:
:ID:       32295609-a416-4227-9aa9-47aefc42eefc
:END:
#+title: dotfiles
* 概要
Linux系のプログラムでは、dotfileと呼ばれる ~.~ から始まるプレーンテキストで設定を書くことが多い。

- [[id:90c6b715-9324-46ce-a354-63d09403b066][Git]]管理できる
- 別のマシンでも全く同じ環境を作り出すことができる

などのメリットがある。

[[https://github.com/kijimaD/dotfiles][kijimaD/dotfiles: System settings]]

todo: [[id:49971784-7850-4d24-92f2-9c6f29bd332e][system]]とかぶるところが大きいので統合してよさそう。
* Memo
* ビルド手順
すべてクリーンな状況から、システムを構築するまでをまとめておく。
** 基本コマンドインストール
syncthingはディレクトリ同期ツール。
[[id:90c6b715-9324-46ce-a354-63d09403b066][Git]]はあとで[[id:32295609-a416-4227-9aa9-47aefc42eefc][dotfiles]]を[[id:6b889822-21f1-4a3e-9755-e3ca52fa0bc4][GitHub]]からクローンしてくるときに使う。

#+caption: aptからインストールする
#+begin_src shell
  sudo apt-get install syncthing git
#+end_src

ssh鍵を生成する。それから適切な権限を付与する。
#+caption: 権限を付与する
#+begin_src shell
  sudo chmod 600 .ssh/id_rsa
#+end_src

#+caption: ~/.gitconfig を配置する
#+begin_src yaml
[user]
	email = norimaking777@gmail.com
	name = kijimaD
[github]
	user = kijimaD
[http]
	sslVerify = false
#+end_src
これでgit pullできるようになる。
** [[id:32295609-a416-4227-9aa9-47aefc42eefc][dotfiles]] pull・実行
#+caption: ホームディレクトリで実行する
#+begin_src shell
  git clone git@github.com:kijimaD/dotfiles.git
#+end_src

#+caption: makeタスク実行
#+begin_src shell
  make batch
#+end_src

↓をやってくれる。
- 必要パッケージの一括ダウンロード
- メモ用リポジトリのclone
- stowによるdotfilesの配置
** その他インストールの流れ
いくつか手動でやる必要がある。

- Google Chrome
  - ~chrome://flags/#sharing-desktop-screenshots~ でベータ版機能を利用できる。
  - org-protocolを設定する
- DBeaver
  - apt-get版はバージョンが古いらしく起動できなかったので、公式サイトからダウンロードする。
- Dockerのデーモン登録
** docker pullできないとき
インストール確認 + デーモン登録。
guixでインストールしてもよさそうなのだが、サービス起動する方法がわからないので、手軽なapt経由で行った。
[[https://www.trifields.jp/how-to-install-docker-on-ubuntu-2004-4436][Ubuntu 20.04にDockerをインストールする手順 | トライフィールズ]]

docker pull時にproxyエラー。↓で直った。
- [[https://www.s-watanabe.work/2021/09/docker-compose-up-proxyconnect-tcp-dial.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+blogspot/Czhqy+(%E3%81%95%E3%81%99%E3%82%89%E3%81%84%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC%E3%81%AEIT%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0)&m=1][docker-compose up で proxyconnect tcp: dial tcp: lookup proxy.example.com: no such host]]

#+caption: この2行をコメントアウトして、使わないようにする
#+begin_src shell
  sudo cat /etc/systemd/system/docker.service.d/http-proxy.conf

  [Service]
  # Environment="HTTP_PROXY=http://proxy.example.com:8080/"
  # Environment="HTTPS_PROXY=http://proxy.example.com:8080/"
#+end_src

#+caption: デーモン再起動
#+begin_src shell
sudo systemctl daemon-reload
sudo systemctl restart docker
#+end_src
** Spotify
サイトで方法を見てダウンロードする。
#+begin_src shell
  snap install spotify
#+end_src
* Tasks
** TODO [[id:1658782a-d331-464b-9fd7-1f8233b8b7f8][Docker]]でテストする
:LOGBOOK:
CLOCK: [2022-02-19 Sat 11:29]--[2022-02-19 Sat 11:54] =>  0:25
CLOCK: [2022-02-19 Sat 11:02]--[2022-02-19 Sat 11:27] =>  0:25
CLOCK: [2022-02-19 Sat 10:36]--[2022-02-19 Sat 11:01] =>  0:25
CLOCK: [2022-02-19 Sat 10:10]--[2022-02-19 Sat 10:35] =>  0:25
:END:
クリーンな環境で一連のインストール作業ができるかチェックすると安心だろう。
[[id:d694ecaa-6a8b-4669-a95c-f76de6dcbd2c][GNU Guix]]関連をどうするかで詰まっている。使いこなせれば[[id:1658782a-d331-464b-9fd7-1f8233b8b7f8][Docker]]でやる必要はなくなるはずだが。
** DONE dotfilesにSSH設定の例を追加する
CLOSED: [2022-01-09 Sun 10:14] DEADLINE: <2022-01-08 Sat 23:50>

少なくとも例だけのせておくと便利だろう。
環境を楽に選択できるようconfigを設定する。
https://qiita.com/hkak03key/items/3b0c4752bfbcc52e676d
** TODO 実行テストのエラー解消
* Reference
** [[https://gitlab.com/dnsmichi/dotfiles][Michael Friedrich / dotfiles · GitLab]]
dotfilesの例。
** [[https://sachachua.com/dotemacs/][Sacha Chua's Emacs configuration]](Sacha Chua)
Emacsで有名な人のdotfiles。設定が莫大。
** [[https://sqrtminusone.xyz/configs/readme/][My dotfiles]](SqrtMinusOne)
Emacs界隈で見かける人。
グラフ化していて良い。
* Archives
** DONE dotfilesをCIテストする
CLOSED: [2021-10-03 Sun 14:07]
:LOGBOOK:
CLOCK: [2021-10-03 Sun 12:44]--[2021-10-03 Sun 14:06] =>  1:22
CLOCK: [2021-10-03 Sun 11:13]--[2021-10-03 Sun 12:02] =>  0:49
:END:
<2021-10-03 Sun>
- [[https://uu64.me/blog/2020/11/dotfiles][Github Actions を使って dotfiles の CI を Ubuntu/macOS 上で実行する | uu64.me]]

テスト、Lintはセットしたが、実行時エラーが解消できない。guixに依存した ~.bash_profile~ なんだよな。
