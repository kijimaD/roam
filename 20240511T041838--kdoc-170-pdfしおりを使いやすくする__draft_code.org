:properties:
:ID: 20240511T041838
:end:
#+title:      KDOC 170: PDFしおりを使いやすくする
#+date:       [2024-05-11 Sat 04:18]
#+filetags:   :draft:code:
#+identifier: 20240511T041838

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

# ====永久保存メモのルール
# 自分の言葉で書く
# 後から読み返して理解できる
# 他のメモと関連付ける
# ひとつのメモにひとつのことだけを書く
# メモの内容は1枚で完結させる
# 論文の中に組み込み、公表できるレベルである

# ====価値があるか
# その情報がどういった文脈で使えるか
# どの程度重要な情報か
# そのページのどこが本当に必要な部分なのか

* この文書のステータス
- 作成
  - [X] 2024-05-13 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* ブックマーク
Chrome組み込みのPDFビューワや[[https://github.com/mozilla/pdf.js][pdf.js]]では、URLフラグメントで開くページを指定できる。リロードしても、前に指定していたページを開ける。現在ページをURLフラグメントに指定することで、しおり代わりにしている。

URLにページを直入力していたのだが、ボタンでできるようにした。Chrome組み込みのPDFビューワはHTMl要素をいじれなかったので、pdf.jsにボタンを追加した。ブックマークレットでやるのもいいだろう。

[[https://mozilla.github.io/pdf.js/web/viewer.html][pdf.js Online Demo]]でコンソールに入れて試せる。

#+caption: URLフラグメントを現在ページで書き換える
#+begin_src javascript
  const page = PDFViewerApplication.pdfViewer.currentPageNumber;
  window.location.hash = `page=${page}`;
#+end_src

* 関連
- [[id:20240324T120408][KDOC 127: ChromeのPDFビューワでしおりを使う]]をボタンでできるようにした
