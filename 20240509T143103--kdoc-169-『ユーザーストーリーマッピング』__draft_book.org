:properties:
:ID: 20240509T143103
:end:
#+title:      KDOC 169: 『ユーザーストーリーマッピング』
#+date:       [2024-05-09 Thu 14:31]
#+filetags:   :draft:book:
#+identifier: 20240509T143103

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

# ====永久保存メモのルール
# 自分の言葉で書く
# 後から読み返して理解できる
# 他のメモと関連付ける
# ひとつのメモにひとつのことだけを書く
# メモの内容は1枚で完結させる
# 論文の中に組み込み、公表できるレベルである

# ====価値があるか
# その情報がどういった文脈で使えるか
# どの程度重要な情報か
# そのページのどこが本当に必要な部分なのか

* この文書のステータス
:PROPERTIES:
:Effort:   2:00
:END:
:LOGBOOK:
CLOCK: [2024-05-15 Wed 15:14]--[2024-05-15 Wed 15:39] =>  0:25
CLOCK: [2024-05-15 Wed 14:29]--[2024-05-15 Wed 14:54] =>  0:25
CLOCK: [2024-05-15 Wed 13:59]--[2024-05-15 Wed 14:24] =>  0:25
CLOCK: [2024-05-15 Wed 10:42]--[2024-05-15 Wed 11:07] =>  0:25
CLOCK: [2024-05-15 Wed 00:10]--[2024-05-15 Wed 00:35] =>  0:25
CLOCK: [2024-05-14 Tue 15:53]--[2024-05-14 Tue 16:18] =>  0:25
CLOCK: [2024-05-11 Sat 23:59]--[2024-05-12 Sun 00:24] =>  0:25
:END:
- 作成
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
[[https://www.oreilly.co.jp/books/9784873117324/][ユーザーストーリーマッピング]]は、ストーリーマッピングの手法を解説する本である。アジャイルによって分割されたストーリーの全体像を把握するテクニックを解説している。
* メモ
- 火星探査機の話(p4)
- 完璧なドキュメントを書こうとするのを阻止しなければならない、と主張する。何かを書いて、言葉と絵で会話をして、共通理解を築いていく(p6)
- 「ストーリー」の由来は、何を書くべきかではなく、どのように使うか。開発でストーリーを使っても、言葉と絵を使って会話していなければ間違っている、という
- 世界を観察すると、不満、怒り、当惑している人々がいることに気づく。彼らを手助けできそうなアイデアを「要件」とよぶ(p11)
  - タブレットで困り果てながらも練習する祖母を思い出した
- 欲しいのはソフトウェアやアウトプットではない。それを使って得られる成果、だという(p11)
- より多く、早く作ることではなく，より少なく作るのが重要だという(p14)
- ストーリーマップを作るときのスローガンは、「話して記録」だという(p25)
- 膨大な作業が必要なことが明確になる。そこから現実的な量に削り、優先順位をつけていく
- MVPの定義(p57)
  - 望まれる成果を実現できる最小限のソリューション
- 「気に入った」、「使いやすい」と言ってくれた人々も、そう推測しているにすぎない可能性がある、という(p65)。個人でも、買わなきゃよかったものなんてよくある
- プロトタイプに測定手段を埋め込んでいたので、人々が本当にソフトウェアを使っているかどうか、ソフトウェアの中で具体的に何をしたかを調べることができた、という(p67)
- フィードバックには会話から得られた主観的なものもあれば、データから得られた客観的なものもあった、という(p69)
- 学ぶことが目的の、最小限の製品を作る。自転車からバイク、自動車というように進化させていく(p70)
- 目標は、自分が正しいものを作っているかどうかを、できる限り早く学ぶこと(p73)
- 期限内に仕事を追えるために、画家や作家のように、イテレーションで仕事する(p87)
- 日常生活を題材に実践して学ぶ(p92)
- ストーリーカードにおける3つのC(p119)
  - カード: たくさんのカードを書く、またはストーリーマップを書く
  - 会話: 言葉や絵を使って会話を促進する
  - 確認: 開発に入る際は、受け入れ基準を使って合意の記録を残す
- テンプレートゾンビ。無理やりテンプレートに押し込もうとしている人だという(p128)
- ユーザーという言い方はやめよう。具体的のどのユーザなのか言おう、という。音楽ファンとか、バンドマネージャーとか(p131)
- ストーリーを語り、ソリューションについて決定を下そうとしているときの第一の目標は、共通理解を築くこと。そして共通理解を築くのに、ホワイトボードの前で顔を突き合わせて話をする以上の方法はない、という(p145)
- ストーリーの詳細を誰かに渡してソフトウェアを作ってもらおうとしても、決してうまくいかない。ほかの人が見ると、よく伝わっていない(p153)
- アジャイルプロセスでは、学びは目的だ。作るものからどれだけ学びを得られるかを考える。間違いのために時間を使うプランを立てる、という(p157)
- 検証された学習にするためには、作る過程で何を学びたいかを議論し、作った後で結果について考える、という(p159)
- ストーリーと、詳細な各自の仕事(デリバリータスク)は違う。ストーリーについて議論したい(p163)
- ストーリーの適正な大きさは、ロールによって異なる。ビジネスにとっての適正サイズ、ユーザ・顧客にとっての適正サイズ、開発にとっての適正サイズ。適正サイズは ビジネス > ユーザ > 開発 の順になる
- 開発で求めているのは学習すること。「これはどうもただしくなさそう」とか「本当に使うなら、こうだともっとよさそう」という形を取る。逆に「これは素晴らしい」を期待してもいない(p184)
- ベンダー・クライアントの関係はアンチパターン。医者と患者の関係が望ましい、という。医者に、〜の薬を処方してくれとか、〜の手術をしてくれとは言わない。ただ症状を伝える(p196)
- ペルソナの組織版、オーグソナ(p220)
- デザインスタジオは、すばやく行えるアイデア出しの手法(p225)
- 残したアイデアよりも、捨てたアイデアの方が多いくらいであれば、ディスカバリーの仕事をできてない可能性が高い(p232)
- ほとんどの人が犯す優先順位付けの誤りは、まず機能の優先順位を決めようとすることだ、という。機能の優先順位を考える前に、具体的なビジネスゴール、顧客、ユーザ、それから彼らの目標を用いて機能を選ぶ。それから優先順位付けをする(p234)
- デザイン思考アプローチの最初のステップは共感である。製品を開発した結果として大切なことが、「その製品のユーザになると、実際どう感じるものなのか」を理解することだから。ユーザに近い体験をして、できる限り理解しなければならない(p243)
- デザインプロセスの表(p246)
- 『アントレプレナーの教科書』でいっていること。最初に開発する必要のあるものは製品ではなく顧客である。ソリューションに興味を持つ顧客が見つかったかどうかを継続的にチェックする。頭の中にあるソリューションは彼らが買い、使い、他の人に勧めるようなソリューションになっているかをチェックする。構築、測定、学習(p248)
- 従来のデザインプロセスの血管は、学習と設計に非常に時間をかける部分にある。時間をかけるあまり、ソリューションに愛着を持ってしまい、ソリューションが本当に有効化をチェックし損なってしまう(p248)
- ストーリーワークショップのレシピ(p264)
- ワークショップは自発的でやる気がないといけない。無理に参加させる意味はない。オプトインを認めるようにする。希望者が多すぎる場合は、フィッシュボウルコラボレーションの形を取る。関心のある人はいつでも途中参加でき、関心がなければ途中退出してもよい。円に入らなければ、少し遠くから見るだけでもよい(p271)
- 途中で仕事を点検できるのは大切。点検できるから、途中の段階の仕事を評価し軌道修正できる(p274)
- グッド・ベター・ベストゲーム(p274)
- ストーリーは、アステロイドゲームに似ている、という。大きい岩を撃つと小さい岩に分解する。欠片が飛んできて危険だ。小さい岩を撃つとなくなる。アステロイドの戦い方でよくないのは、すべての大きな岩を撃ってそれを小さな岩に分解してしまうことだ。同様に、すべての大きいストーリーを分解してはならない。バックログはあちこちに飛んでいく無数の小さな欠片でいっぱいになる(p288)
- ストーリーを分解する手順(p288)
  - オポチュニティ
  - ディスカバリー
  - 開発戦略のプランニング
  - 次の開発サイクルのプランニング
- バックログに数百もの項目を抱えている製品チームを見かける、バックログの優先順位づけに苦労していると言う。バックログを覗くと、小さなストーリーが無数にあることが多い、という。カードに書き出し、並び替え、大きなストーリ、複数のストーリーにまとめる(p290)
- ストーリーマップはユーザと製品のアイデアについての会話をサポートするもの。議論する必要がなければその部分のマップを作る必要もない(p292)
- ユーザにデモを見せ、使ったところを想像してもらい、気に入ったところを判断してもらう方法ではユーザから多くを学ぶことはできない、という。ユーザに実際に使ってもらうと、ソフトウェアがユーザの抱えている問題を解決できるかどうか評価するのに役立つだろう。そして、ユーザが使っているところを観察すれば、チームとしてより多くのことを学べる。製品をユーザがそう評価するのはなぜか、どのように使っているか。時間を割いて、ユーザがソフトウェアを使って現実の作業をしているところを観察する(p304)

* 感想
- ボードまわりで、文字で書いてあるとよくわからないところがあった。たぶん画像や動画で見ると一発なのだが
  - 調べてみよう
  - [[https://www.youtube.com/watch?v=KA88WxE3Zyc][ユーザーストーリーマッピングの作り方 - YouTube]]。監訳者による解説。5章だけでテクニカルなところはかなり入っている、とのこと
  - [[https://www.youtube.com/watch?v=e_SQ9oJGOGw][書籍「ユーザーストーリーマッピング」の内容を監訳者本人が紹介します - YouTube]]
- よく出てくる言葉ショーアンドテルの意味がわからなかったので調べた。[[https://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%BB%E3%82%A2%E3%83%B3%E3%83%89%E3%83%BB%E3%83%86%E3%83%AB][ショー・アンド・テル - Wikipedia]]。そういう発表をする教育科目
- 個人的の長期的プロジェクトに使えないだろうか。アジャイルで短期的なことに切り刻まれている感じというのは、個人の生活にもあてはまる
- 著者による発表。[[https://www.youtube.com/watch?v=AorAgSrHjKM][User Story Mapping with Jeff Patton - YouTube]]
  - カードである理由は、小さく、あまり多くを書き留められないから。話すきっかけにすぎない
* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
