:properties:
:ID: 20241119T231512
:mtime:    20241122222834
:ctime:    20241119231519
:end:
#+title:      KDOC 300: スライスのcapacityが伸長する様子をデバッガで見る
#+date:       [2024-11-19 Tue 23:15]
#+filetags:   :permanent:
#+identifier: 20241119T231512

* この文書のステータス
- 作成
  - [X] 2024-11-19 貴島
- レビュー
  - [X] 2024-11-22 貴島

* 概要

Go言語でスライスが伸長する様子をデバッガで確認する。

#+caption: main.go
#+begin_src go
  func main() {
          // 要素数0, 容量1
          s := make([]string, 0, 1)
          for i := 0; i < 100; i++ {
                  print("for break")
                  s = append(s, "a")
          }
  }
#+end_src

#+RESULTS:
#+begin_src
#+end_src

↑このコードは要素数が0、capacityが1なのでループの2回めでcapacityの増加処理が発生するはずである。

Goのデバッガdlvを使って、見る。

#+caption: dlvでの操作。途中の出力は省略している
#+begin_src shell
  $ dlv debug main.go
  # 初期化処理でのgrowsliceにブレークするので、printまで飛ばす

  # 組み込み関数printはコンパイル後はprintstringになっている
  (dlv) b runtime.printstring

  # 飛ばす
  (dlv) n

  # printまで飛ばした時点で仕掛ける
  (dlv) b runtime.growslice

  # cap1のスライスなので、ループの最初の1回は引っかからない
  # ループの2回目ではgrowsliceで止まる
#+end_src

要素数がcapacityを超えた2回目のループでは、growsliceが呼ばれてcapacityの伸長が行われることを確認できた。

* 関連
- [[id:20241119T084548][KDOC 299: appendはコンパイルすると消える]]。growsliceが確かに呼ばれているのを確認した
