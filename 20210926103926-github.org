:PROPERTIES:
:ID:       6b889822-21f1-4a3e-9755-e3ca52fa0bc4
:mtime:    20241102180353 20241028101410
:ctime:    20210926103926
:END:
#+title: GitHub
* 概要
GitHubは[[id:90c6b715-9324-46ce-a354-63d09403b066][Git]]のコードホスティングサービス。
* Memo
** 一括でリポジトリのwatch状態を変更する
:LOGBOOK:
CLOCK: [2023-07-30 Sun 23:14]--[2023-07-30 Sun 23:39] =>  0:25
:END:
フォーク用のorganizationアカウントを使っている。最近自動fetchをするようにしたところ、GitHub Actionsの失敗通知が非常にうるさい。トークンなどが入ってないとエラーになるジョブが多くあるようだ。並列 + 長時間でいくつも実行するので、数が多い。1つのリポジトリを1日放置で200件くらい来る。

メールは設定項目があるし無視すればいいのだが、自作した通知ツールの動作が阻害されてしまうのが問題だった。workflowの失敗もnotificationなので、それだけでページを埋め尽くしてしまう。そんなに大量のページをたどる設定になっていない。

ユーザ所有のリポジトリについてはブラウザでリスト表示して設定できるようだ[fn:1]。しかしorganizationのリポジトリは一覧設定に出てこない。設定がないようだ。1件1件開いて、watchingをignoreにするしかない。なので、コマンドでやることにした。

watching状態の変更エンドポイントの説明は[[https://docs.github.com/ja/rest/activity/watching?apiVersion=2022-11-28#set-a-repository-subscription][Watch中 - GitHub Docs]]にある。

[fn:1]それでも400件は大変だ。

#+caption: トークンやorganization名を入れる
#+begin_src shell
  curl -L \
    -H "Accept: application/vnd.github+json" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    "https://api.github.com/orgs/kd-collective/repos?per_page=100&page=1" | \
      jq .[].name | \
      xargs -i -n 1 curl -L -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer <TOKEN>" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/kd-collective/{}/subscription \
            -d '{"subscribed":false,"ignored":true}'
#+end_src

organizationのリポジトリを一覧してから、順にignoreを実行していく。

** Readmeでの画像の揃え方

- [[https://gist.github.com/DavidWells/7d2e0e1bc78f4ac59a123ddf8b74932d][Guide to aligning images in github readme.md files.]]

GitHub Readmeでの、画像の揃え方。理解しやすい。
** CODEOWNERS
.github/CODEOWNERSファイルを配置すると、特定のパターンで特定の人にレビュー必須にできる。
例えば.rbの変更が含まれていた場合は@backend-team、.tsの場合は@Aさん、など。
** コンテナレジストリ
DockerHubのように、[[id:1658782a-d331-464b-9fd7-1f8233b8b7f8][Docker]]コンテナをホストするサービスとして利用できる。

- GitHubトークンを発行する
- シェル上でログインする
- タグをつけてビルドする
- pushする

[[https://docs.github.com/ja/packages/working-with-a-github-packages-registry/working-with-the-container-registry][コンテナレジストリの利用 - GitHub Docs]]
** リポジトリで特定の言語をignoreするとき
リポジトリ内にライブラリなどが入っていると、GitHub上で意図しない言語のリポジトリとみなされることがある。
~.gitattributes~ ファイルを作って↓のように入力すると、public内のファイルが言語統計から無視される。
#+begin_src
public/* linguist-vendored
public/*/* linguist-vendored
#+end_src
* Tasks
** TODO [[https://www.oreilly.co.jp/books/9784873117959/][O'Reilly Japan - GitHubツールビルディング]]
:LOGBOOK:
CLOCK: [2022-09-25 Sun 15:02]--[2022-09-25 Sun 15:27] =>  0:25
CLOCK: [2022-09-25 Sun 14:21]--[2022-09-25 Sun 14:46] =>  0:25
:END:
GitHubでのメタツールの作り方を解説している。

- 条件付きリクエストはレートを消費しない。変更がない場合は何も返さない
* Reference
** [[https://anvaka.github.io/map-of-github/#2/0/0][Map of GitHub]]
有名なGitHubプロジェクトの可視化。
** [[https://github.com/eggplants/ghcr-badge][eggplants/ghcr-badge: Generate ghcr.io (GitHub Container Registory) container's status badge]]
バッジの作り方を見る。
** [[https://docs.github.com/ja][GitHub Documentation]]
GitHubのドキュメント。
* Archives
** DONE フォークしたリポジトリを一括更新する
CLOSED: [2023-07-23 Sun 23:46]
:LOGBOOK:
CLOCK: [2023-07-23 Sun 23:12]--[2023-07-23 Sun 23:37] =>  0:25
CLOCK: [2023-07-23 Sun 22:43]--[2023-07-23 Sun 23:08] =>  0:25
CLOCK: [2023-07-23 Sun 21:52]--[2023-07-23 Sun 22:17] =>  0:25
CLOCK: [2023-07-23 Sun 20:53]--[2023-07-23 Sun 21:18] =>  0:25
CLOCK: [2023-07-23 Sun 20:25]--[2023-07-23 Sun 20:51] =>  0:26
CLOCK: [2023-07-23 Sun 20:00]--[2023-07-23 Sun 20:25] =>  0:25
CLOCK: [2023-07-23 Sun 19:28]--[2023-07-23 Sun 19:53] =>  0:25
CLOCK: [2023-07-23 Sun 18:43]--[2023-07-23 Sun 19:08] =>  0:25
:END:
不便なので。

[[https://zenn.dev/mtmatma/articles/893832750ad9a7][GitHub CLI で fork を最新にする]]を参考にして作成した。

フォークリポジトリはorganizationにまとめている。

#+begin_src shell
  gh auth refresh -s workflow # workflowの変更があると、この操作が必要と出る
  gh repo list kd-collective --limit 1000 --fork --json nameWithOwner --jq '.[].nameWithOwner' | xargs -n1 gh repo sync
#+end_src

- [[id:2d35ac9e-554a-4142-bba7-3c614cbfe4c4][GitHub Actions]]で定期実行したい
  - [[https://github.com/kijimaD/ghfetcher][kijimaD/ghfetcher]]で定期実行するようにした
- すべてのリポジトリをgit pullしたい
  - [[https://github.com/kijimaD/gclone][kijimaD/gclone]]をpullに対応させた
