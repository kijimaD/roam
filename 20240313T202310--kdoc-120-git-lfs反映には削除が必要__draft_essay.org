:properties:
:ID: 20240313T202310
:end:
#+title:      KDOC 120: Git LFS反映には削除が必要
#+date:       [2024-03-13 Wed 20:23]
#+filetags:   :draft:essay:
#+identifier: 20240313T202310

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (org-roam-tag-remove)
# (org-roam-tag-add)

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 自分の考えを加える。
# 構造を気にしない。
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

* この文書のステータス
- 作成
  - [X] 2024-03-13 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
100MBを超えるファイルを[[id:6b889822-21f1-4a3e-9755-e3ca52fa0bc4][GitHub]]にpushしたくなったので、Git LFSを使ってみた。最初に少し設定するだけで[[id:90c6b715-9324-46ce-a354-63d09403b066][Git]]コマンドが普通に使えるのに驚いた。

最初反映されず、サイズでgit pushに失敗している表示がでて困った。ヒントはドキュメントの一番最初にちゃんと書かれていた。

- [[https://docs.github.com/ja/repositories/working-with-files/managing-large-files/configuring-git-large-file-storage][Git Large File Storage を設定する - GitHub Docs]]

#+begin_quote
GitHub で利用したいファイルがリポジトリにある場合、まずリポジトリからそれらのファイルを削除し、それからローカルで Git LFS に追加する必要があります。 詳しくは、「リポジトリのファイルを Git Large File Storage に移動する」を参照してください。
#+end_quote

一度削除する必要がある。
