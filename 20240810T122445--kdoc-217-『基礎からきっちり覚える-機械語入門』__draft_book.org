:properties:
:ID: 20240810T122445
:end:
#+title:      KDOC 217: 『基礎からきっちり覚える 機械語入門』
#+date:       [2024-08-10 Sat 12:24]
#+filetags:   :draft:book:
#+identifier: 20240810T122445

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

# ====永久保存メモのルール。
# 自分の言葉で書く。
# 後から読み返して理解できる。
# 他のメモと関連付ける。
# ひとつのメモにひとつのことだけを書く。
# メモの内容は1枚で完結させる。
# 論文の中に組み込み、公表できるレベルである。

# ====価値があるか。
# その情報がどういった文脈で使えるか。
# どの程度重要な情報か。
# そのページのどこが本当に必要な部分なのか。

* この文書のステータス
:LOGBOOK:
CLOCK: [2024-09-24 Tue 17:38]--[2024-09-24 Tue 18:03] =>  0:25
CLOCK: [2024-09-22 Sun 23:49]--[2024-09-23 Mon 00:14] =>  0:25
CLOCK: [2024-09-21 Sat 16:42]--[2024-09-21 Sat 17:07] =>  0:25
CLOCK: [2024-09-21 Sat 16:12]--[2024-09-21 Sat 16:37] =>  0:25
CLOCK: [2024-09-19 Thu 21:18]--[2024-09-19 Thu 21:44] =>  0:26
CLOCK: [2024-09-19 Thu 19:47]--[2024-09-19 Thu 20:12] =>  0:25
CLOCK: [2024-09-19 Thu 19:17]--[2024-09-19 Thu 19:42] =>  0:25
CLOCK: [2024-09-19 Thu 18:42]--[2024-09-19 Thu 19:07] =>  0:25
CLOCK: [2024-09-18 Wed 23:55]--[2024-09-19 Thu 00:20] =>  0:25
CLOCK: [2024-08-11 Sun 09:34]--[2024-08-11 Sun 09:59] =>  0:25
CLOCK: [2024-08-11 Sun 00:50]--[2024-08-11 Sun 01:15] =>  0:25
CLOCK: [2024-08-10 Sat 14:36]--[2024-08-10 Sat 15:01] =>  0:25
CLOCK: [2024-08-10 Sat 12:27]--[2024-08-10 Sat 12:52] =>  0:25
:END:
- 作成
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
# 本文(タイトルをつける)。
[[https://www.amazon.co.jp/gp/product/B00JXBRF5U/ref=ppx_yo_dt_b_d_asin_title_351_o00?ie=UTF8&psc=1][基礎からきっちり覚える 機械語入門]]は、機械語を一般の人向けに解説する本。
* メモ
- コンピュータがどのように動作するかというイメージを掴むためには、実は機械語を見てみるのが一番の早道である。機械語の動作が理解できれば、その上で動く高級言語やOSなどの動作も非常にわかりやすくなる、という
- 10進2進16進対応表(p44)
- 除算というのは負荷の大きな演算であり、加算などの演算に比べると、実行に要する時間がはるかに長い(p51)
- CPUの処理がもっとも効率よく行われるのはバイト、ワード、ダブルワードの各データ型に対してである(p55)
- 説明用の機械語を定義している。レジスタはなく、すべてメモリで制御する
- 値ではなく、そのアドレスの値を参照する命令がある。なぜ間接参照が必要なのかというと、この機能がないとあらかじめ分かっている番地にしかデータを書けないから。たとえば、ユーザの入力はあらかじめわからない。間接参照があると、入力した値をメモリに保管しておけば、あとはそのメモリを参照して使える(p136)
- 値X、X番地の値、X番地が指す値(X番地にある値をアドレスとみなし、その番地の中身に書かれている値)の3つ
  - 即値、直接参照、間接参照
- 排他的論理和は片方だけが真のときのみ全体が真になる論理演算。「私はAまたはBどちらかと結婚します」というような場合。両方は犯罪となる

* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
