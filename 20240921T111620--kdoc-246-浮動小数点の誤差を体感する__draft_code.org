:properties:
:ID: 20240921T111620
:end:
#+title:      KDOC 246: 浮動小数点の誤差を体感する
#+date:       [2024-09-21 Sat 11:16]
#+filetags:   :draft:code:
#+identifier: 20240921T111620

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

# ====永久保存メモのルール。
# 自分の言葉で書く。
# 後から読み返して理解できる。
# 他のメモと関連付ける。
# ひとつのメモにひとつのことだけを書く。
# メモの内容は1枚で完結させる。
# 論文の中に組み込み、公表できるレベルである。

# ====価値があるか。
# その情報がどういった文脈で使えるか。
# どの程度重要な情報か。
# そのページのどこが本当に必要な部分なのか。

* この文書のステータス
- 作成
  - [X] 2024-09-21 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
# 本文(タイトルをつける)。

本を読んでいて、浮動小数点数で数値比較してはいけない、とあった。代数的に等しくても、誤差によってビット全体を比較すると等しくならないことがある。確かめてみる。

#+caption: 誤差を確かめる
#+begin_src C
  void calc(double original, double d1, char ope, double d2) {
    double result;
    switch (ope) {
    case '+':
      result = d1 + d2;
      break;
    case '-':
      result = d1 - d2;
      break;
    case '*':
      result = d1 * d2;
      break;
    case '/':
      result = d1 / d2;
      break;
    };

    printf("%s", "┏ ─────────────────────────────────────────────────────────────────── ┓\n");
    printf("original: \t%.55f\nresult: \t%.55f\n  - d1: \t%.55f\n  - ope: \t%c\n  - d2: \t%.55f\n", original, result, d1, ope, d2);
    printf("equal? => %d\n", (original == result));
    printf("%s", "┗ ─────────────────────────────────────────────────────────────────── ┛\n\n");
  };

  calc(0.1, 0.05, '+', 0.05);
  calc(1, 0.5, '+', 0.5);
  calc(0.3, 0.1, '+', 0.2);
  calc(0.1, 0.09, '+', 0.01);
  calc(0.01, 0.23, '-', 0.22);
  calc(0.1, 1.0, '-', 0.9);
#+end_src

#+RESULTS:
#+begin_src
┏ ─────────────────────────────────────────────────────────────────── ┓
original: 	0.1000000000000000055511151231257827021181583404541015625
result: 	0.1000000000000000055511151231257827021181583404541015625
  - d1: 	0.0500000000000000027755575615628913510590791702270507812
  - ope: 	+
  - d2: 	0.0500000000000000027755575615628913510590791702270507812
equal? => 1
┗ ─────────────────────────────────────────────────────────────────── ┛

┏ ─────────────────────────────────────────────────────────────────── ┓
original: 	1.0000000000000000000000000000000000000000000000000000000
result: 	1.0000000000000000000000000000000000000000000000000000000
  - d1: 	0.5000000000000000000000000000000000000000000000000000000
  - ope: 	+
  - d2: 	0.5000000000000000000000000000000000000000000000000000000
equal? => 1
┗ ─────────────────────────────────────────────────────────────────── ┛

┏ ─────────────────────────────────────────────────────────────────── ┓
original: 	0.2999999999999999888977697537484345957636833190917968750
result: 	0.3000000000000000444089209850062616169452667236328125000
  - d1: 	0.1000000000000000055511151231257827021181583404541015625
  - ope: 	+
  - d2: 	0.2000000000000000111022302462515654042363166809082031250
equal? => 0
┗ ─────────────────────────────────────────────────────────────────── ┛

┏ ─────────────────────────────────────────────────────────────────── ┓
original: 	0.1000000000000000055511151231257827021181583404541015625
result: 	0.0999999999999999916733273153113259468227624893188476562
  - d1: 	0.0899999999999999966693309261245303787291049957275390625
  - ope: 	+
  - d2: 	0.0100000000000000002081668171172168513294309377670288086
equal? => 0
┗ ─────────────────────────────────────────────────────────────────── ┛

┏ ─────────────────────────────────────────────────────────────────── ┓
original: 	0.0100000000000000002081668171172168513294309377670288086
result: 	0.0100000000000000088817841970012523233890533447265625000
  - d1: 	0.2300000000000000099920072216264088638126850128173828125
  - ope: 	-
  - d2: 	0.2200000000000000011102230246251565404236316680908203125
equal? => 0
┗ ─────────────────────────────────────────────────────────────────── ┛

┏ ─────────────────────────────────────────────────────────────────── ┓
original: 	0.1000000000000000055511151231257827021181583404541015625
result: 	0.0999999999999999777955395074968691915273666381835937500
  - d1: 	1.0000000000000000000000000000000000000000000000000000000
  - ope: 	-
  - d2: 	0.9000000000000000222044604925031308084726333618164062500
equal? => 0
┗ ─────────────────────────────────────────────────────────────────── ┛

#+end_src

末尾付近にある数値によって桁上がりした場合に、大きな誤差となることがあるのだが、末尾の数値はなぜ出てくるのだろうか。2進数で表現できないというのはわかるのだが、小数第20位まで辿らないと見えないような値なのはなぜなのだろう。

0.5は2^(-1)なので、正確に表現できる。小数以下の数字は現れない。

* 関連
- [[id:20240617T152502][KDOC 192: 『Write Great Code Vol.1』]]。例を確かめた
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
