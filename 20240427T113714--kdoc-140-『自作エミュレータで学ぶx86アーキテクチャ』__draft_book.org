:properties:
:ID: 20240427T113714
:end:
#+title:      KDOC 140: 『自作エミュレータで学ぶx86アーキテクチャ』
#+date:       [2024-04-27 Sat 11:37]
#+filetags:   :draft:book:
#+identifier: 20240427T113714

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 自分の考えを加える。
# 構造を気にしない。
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

* この文書のステータス
:LOGBOOK:
CLOCK: [2024-05-07 Tue 00:36]--[2024-05-07 Tue 01:01] =>  0:25
CLOCK: [2024-04-29 Mon 12:53]--[2024-04-29 Mon 13:18] =>  0:25
:END:
読んでる途中。

- 作成
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
[[https://tatsu-zine.com/books/my-emulator-x86-architecture][自作エミュレータで学ぶx86アーキテクチャ コンピュータが動く仕組みを徹底理解]]は、CPUまわりを詳しく説明する本。

* メモ

- プログラマの視点では変数はレジスタではなくメモリに置かれることになっているが、コンパイラからするとどちらもある。最適化のためにレジスタに置くこともある
- カウンタ変数をレジスタに置くことでカウンタの更新が早くなり、ループの実行速度が改善する
- ポインタ変数に範囲外の値を書き込む実験がおもしろい(57ページ)

添字は加算の糖衣構文にすぎない。加算は入れ替えられる。

#+caption:
#+begin_src C
  // 2つの記法は等しい
  // arr[0]
  // *(0 + arr)
#+end_src

#+begin_src C
  int arr[2];
  0[arr] = 1;
  1[arr] = 2;
  /* arr : {1, 2} */
#+end_src

- ローカル変数のポインタを返せてしまう。関数を抜けたときに破棄されるので、「宙に浮いたポインタ」となる(59ページ)
- ~X->Y~ は ~(*X).Y~ の糖衣構文
- ある型の変数を定義するときは、その型の大きさをわかっている必要がある。大きさがわからないと、コンパイラがどれくらいのメモリを割り当てるか判断できないから
- サイズがわからない型のことを不完全型という
  - void型も不完全型の一種
- 何らかの型へのポインタ型とvoidへのポインタ型は相互に変換できるとCの規格で保証されている
- 関数ポインタの箇所がよくわからなかった(68ページ)
- CPUが機械語プログラムを実行するためにはそのプログラムをメインメモリに配置する必要がある
- 80ページの汎用レジスタの表。

| 名前 | 別名                       | 主な役割                       |
| --- |                           |                              |
| eax | アキュムレータ               | 値を累積する                   |
| ebx | ベース                     | メモリ番地を記憶する             |
| ecx | カウンタ                    | 文字列の添字やループの回数を数える |
| edx | データ                     | I/O装置の番地を記憶する          |
| esi | ソースインデックス           | 入力データの添字を記憶する        |
| edi | デスティネーションインデックス | 出力データの添字を記憶する        |
| esp | スタックポインタ             | スタックの先頭を指す             |
| ebp | ベースポインタ               | スタック上の何らかのデータを指す                               |

- 82ページのレジスタの由来が面白い

* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。
- [[id:20231014T171444][KDOC 46: Goの宣言構文がCと異なる理由]]。関数ポインタつながり
