:properties:
:ID: 20250213T222855
:mtime:    20250214232134
:ctime:    20250213222855
:end:
#+title:      KDOC 341: Quick overview of Go1.24
#+date:       [2025-02-13 Thu 22:28]
#+filetags:   :draft:code:
#+identifier: 20250213T222855

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか。それで本を書けと言われて書けるか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。
# 個人の感想・意思表明ではない。事実や書籍情報に基づいている

# ====永久保存メモのルール。
# 自分の言葉で書く。
# 後から読み返して理解できる。
# 他のメモと関連付ける。
# ひとつのメモにひとつのことだけを書く。
# メモの内容は1枚で完結させる。
# 論文の中に組み込み、公表できるレベルである。

# ====水準を満たす価値があるか。
# その情報がどういった文脈で使えるか。
# どの程度重要な情報か。
# そのページのどこが本当に必要な部分なのか。
# 公表できるレベルの洞察を得られるか

# ====フロー。
# 1. 「走り書きメモ」「文献メモ」を書く
# 2. 1日1回既存のメモを見て、自分自身の研究、思考、興味にどのように関係してくるかを見る
# 3. 追加すべきものだけ追加する

* この文書のステータス
- 作成
  - [X] 2025-02-14 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# チェックリスト ================
# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
# 本文(見出しも設定する)

リリースされたので重要な変更だけ一読する。

- ブログ: [[https://go.dev/blog/go1.24][Go 1.24 is released! - The Go Programming Language]]
- リリースノート: [[https://go.dev/blog/go1.24][Go 1.24 is released! - The Go Programming Language]]

メモ。

- パフォーマンス改善
- go vetにtestアナライザが追加された。テストにまつわるありがちなミスを報告する
- FIPS 140-3に準拠して動作できるようになった。デフォルトではオフ
  - 暗号に関する規格。米国政府の調達基準
  - [[https://go.dev/doc/security/fips140][FIPS 140-3 準拠 - Go プログラミング言語]]
- os.Root型の追加。単一のディレクトリツリーのアクセスに限定させるのに使う
  - ディレクトリの外に出るのを制限する
  - OSによって異なる挙動
- ランタイムがfinalization mechanismを提供する
  - [[https://qiita.com/umisama/items/c73aaa7fc6f50b4c3cd4][golangでデストラクタ的なことをする #Go - Qiita]]
  - GCに回収されるとき紐付けられたfinalizerが呼ばれる
  - [[https://pkg.go.dev/runtime#SetFinalizer][runtime package - runtime - Go Packages]]
  - 追加されたAddCleanupは従来のSetFinalizerよりエラーが少ない、とのこと
- ~go:wasmexport directive~ が追加された
  - 関数をエクスポートする

率直に言って、よくわからない。あまり普段使えそうな機能はなさそうである。

* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
なし。
