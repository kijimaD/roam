:properties:
:ID: 20240324T122926
:end:
#+title:      KDOC 128: 『Goならわかるシステムプログラミング』
#+date:       [2024-03-24 Sun 12:29]
#+filetags:   :book:
#+identifier: 20240324T122926

* この文書のステータス
- 作成
  - [X] 2024-03-24 貴島
- レビュー
  - [X] 2024-04-27 貴島

* 概要
[[https://amzn.to/3INZOjc][Goならわかるシステムプログラミング]]はその名の通りGoで、Cを使わずにシステムプログラミングを解説した本。

* メモ
あまりメモしてない。

- システムコールで引数が数値なのはレジスタで渡せるのが数値だけだから
- 返り値もレジスタで返ってくるので数値
- ソケットが他のプロセス間通信と違うのは、アドレスとポート番号がわかればローカルのコンピュータ内だけではなく外部のコンピュータとも通信が行える点
- ソケットの3種類...TCP, UDP, Unixドメインソケット
- プロセスグループ :: ~cat example.go | echo~ パイプでつなげられたコマンドをまとめてプロセスグループという。プロセスグループに対するIDがコマンドの代表のプロセスIDとなる
- セッショングループ :: 同じターミナルから起動したアプリケーションであれば同じセッショングループ
- すべてのプロセスは、3つの入出力データを持つ。
  - 入力: コマンドライン引数
  - 入力: 環境変数
  - 出力: 終了コード
- プログラムから見たスレッドは、メモリにロードされたプログラムの現在の実行状態を持つ仮想CPU。仮想CPUのそれぞれにスタックメモリが割り当てられている
- OSやCPUから見たスレッドは時間が凍結されたプログラムの実行状態
- OSの仕事は凍結状態のプログラムの実行状態を復元して各スレッドを順番に短時間ずつ処理を再開させること
- スレッドがCPUコアに対してマッピングされるのに対して、goroutineはOSのスレッドにマッピングされる
- goroutineはOSスレッドの1~2MBと比べると初期スタックメモリのサイズが小さく(2KB)、起動処理が軽い
* 関連
- [[id:20240219T221805][KDOC 99: 『詳解UNIXプログラミング』]]。これを読んでわけわからなかったので、より易しい本で勉強しようと考えた
