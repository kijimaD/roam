:properties:
:ID: 20241123T022106
:mtime:    20241123085459
:ctime:    20241123022107
:end:
#+title:      KDOC 306: カタカナで認識していると定着しない
#+date:       [2024-11-23 Sat 02:21]
#+filetags:   :draft:essay:
#+identifier: 20241123T022106

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか。それで本を書けと言われて書けるか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。
# 個人の感想・意思表明ではない。事実や書籍情報に基づいている

# ====永久保存メモのルール。
# 自分の言葉で書く。
# 後から読み返して理解できる。
# 他のメモと関連付ける。
# ひとつのメモにひとつのことだけを書く。
# メモの内容は1枚で完結させる。
# 論文の中に組み込み、公表できるレベルである。

# ====水準を満たす価値があるか。
# その情報がどういった文脈で使えるか。
# どの程度重要な情報か。
# そのページのどこが本当に必要な部分なのか。
# 公表できるレベルの洞察を得られるか

# ====フロー。
# 1. 「走り書きメモ」「文献メモ」を書く
# 2. 1日1回既存のメモを見て、自分自身の研究、思考、興味にどのように関係してくるかを見る
# 3. 追加すべきものだけ追加する

* この文書のステータス
- 作成
  - [X] 2024-11-23 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# チェックリスト ================
# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
# 本文(見出しも設定する)

「コールバック関数」をそのままカタカナの用語として認識していた。「関数オブジェクト」「無名関数」などの類似した概念の名前と比べて、直感的に感じていなかった。電話をあとでかけ直すという意味があることは知っていたが、例えがあまり腑に落ちないように感じていた。

最近気づいたのは、コールバック関数でいう「コール」は例えではなく直接的な説明だと考えればよいということである。コールは電話の呼び出しでもあるが、関数呼び出しのコールでもある。「あとから(back)、関数呼び出し(call)をする関数だからコールバック関数」という名前になっているのに気づいて、違和感なく直感的に考えられるようになった。

どうしてこういうことになったのだろうか。

まだ職業プログラマーではないころ、コードを書き始めたころに「コールバック関数」を知った。そのときコールに関数呼び出しの意味もあることを知らない。「そういうもの」として、意味を考えずにカタカナで認識して覚えたために、意味が腑に落ちない言葉として残ったのだろうと考えた。

* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
- [[id:20241121T225809][KDOC 301: なぜReact Queryを挟むのか?]]。調べている中で気づいた
