:properties:
:ID: 20240601T121521
:mtime:    20241103085920
:ctime:    20241028101410
:end:
#+title:      KDOC 182: ブロックサイズの違いによるパフォーマンスへの影響を調べる
#+date:       [2024-06-01 Sat 12:15]
#+filetags:   :wiki:
#+identifier: 20240601T121521

* この文書のステータス
- 作成
  - [X] 2024-06-06 貴島
- レビュー
  - [X] 2024-06-10 貴島

* 概要

すべてのディスクI/Oは、ブロックごとに処理される。本だけ見てもあまりわからないので、コマンドでミニマルに試して理解を深める。

* 方法

- ~dd~ はファイルをコピーするコマンド。オプションを細かく指定できる
- ~/dev/zero~ は、0を無限に返す仮想デバイス

↓まず、ブロックサイズ1で保存してみる。8秒かかった。

#+begin_src shell
  dd bs=1 count=2097152 if=/dev/zero of=tmp
#+end_src

#+RESULTS:
#+begin_src
2097152+0 records in
2097152+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 8.1858 s, 256 kB/s
#+end_src

↓ブロックサイズ1024にして、コピーしてみる。↑と同じサイズだが、とても早い。

#+caption: アラインメントされているブロックサイズ
#+begin_src shell
  dd bs=1024 count=2048 if=/dev/zero of=tmp
#+end_src

#+RESULTS:
#+begin_src
2048+0 records in
2048+0 records out
2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.0131229 s, 160 MB/s
#+end_src

↓アラインメントしないバージョン。これで遅くなるはずなのだが、↑とあまり変わらなかった。サイズの問題だろうか。もっと大きなサイズにすると差が見えてくるとか。

#+caption: アラインメントしないブロックサイズ
#+begin_src shell
  dd bs=1025 count=2048 if=/dev/zero of=tmp
#+end_src

#+RESULTS:
#+begin_src
2048+0 records in
2048+0 records out
2099200 bytes (2.1 MB, 2.0 MiB) copied, 0.0131522 s, 160 MB/s
#+end_src

というわけで、パフォーマンスが改善した理由。

- システムコールの回数が減った

#+caption: システムコールの回数の比較
#+begin_src shell :results raw
  strace dd bs=1 count=2097152 if=/dev/zero of=tmp 2>&1 | wc -l
  strace dd bs=1024 count=2048 if=/dev/zero of=tmp 2>&1 | wc -l
#+end_src

#+RESULTS:
#+begin_src
4194377
4169
#+end_src

確かめられた。

* 関連
- [[id:20240225T174224][KDOC 109: 発行システムコールを調べる]]。straceの使い方
- [[id:20240601T120632][KDOC 181: 『Linuxシステムプログラミング』]]。例を試した
