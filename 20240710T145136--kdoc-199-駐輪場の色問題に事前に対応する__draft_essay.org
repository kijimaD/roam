:properties:
:ID: 20240710T145136
:end:
#+title:      KDOC 199: 駐輪場の色問題に対応する
#+date:       [2024-07-10 Wed 14:51]
#+filetags:   :draft:essay:
#+identifier: 20240710T145136

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
# ツェッテルカステンの議論に寄与するか
# 頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

# ====永久保存メモのルール。
# 自分の言葉で書く。
# 後から読み返して理解できる。
# 他のメモと関連付ける。
# ひとつのメモにひとつのことだけを書く。
# メモの内容は1枚で完結させる。
# 論文の中に組み込み、公表できるレベルである。

# ====価値があるか。
# その情報がどういった文脈で使えるか。
# どの程度重要な情報か。
# そのページのどこが本当に必要な部分なのか。

* この文書のステータス
- 作成
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 文書仕事の難しさ
- 範囲が明確でない仕事
- 常識が全く異なる会社間の仕事
- 誰でも簡単に理解できる仕事

は、トラブルになりやすい。提出した文書に対する、無限の些細な修正依頼、作業範囲の拡大・・・を体験した。最初に決めていたのだがその内容が甘かった。詰めの甘い内容で合意はしていたので、あとから駄々をこねるわけにもいかなかった。

[[https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%BD%E3%83%B3%E3%81%AE%E5%87%A1%E4%BF%97%E6%B3%95%E5%89%87][パーキンソンの凡俗法則]]のお手本ともいうべき現象だった。「組織は些細な物事に対して、不釣り合いなほど重点を置く」というものだが、まさに本質的でない仕事をすることとなった。

これは効果のある合意ができなかっために起こったことであり、うまくやっていれば避けられたように見える。
* 概要
# 本文(タイトルをつける)。

事前によいとする方向性を合意しておく。

- 冗長性 ----- 簡潔
- ローコンテキスト ----- ハイコンテキスト
- ラフ ----- フォーマル

前提。

- 文書作成が誰にとっても生産的なプロセスでなければならない
- 文書に対するポリシーは、会社や個人、あるいはユースケースによって全く異なるものであるが、その割に認識することは少なく、トラブルの原因になりやすい
- どちらが「正しい」か、明らかな根拠を持てない点については、宗教論争になるので議論しない
  - 統一する必要のある項目は、事前にルールとして合意しておく必要がある
  - 議論の必要がないものはセルフで編集する
  - 表記ゆれに対するポリシー
  - 文章表記に対してどこまで厳格にするか(コストをかけるか)

どうやるか。

- 誰でも書ける
- どのソフトウェアでやるか
- どうレビューするか
- 誰がレビューするか

範囲。

- 何を目的にした文書なのか、明確にする。ユースケース例を上げ、カバーする
- 誰を目的にした文書なのか、明確にする
  - 業務知識レベル
  - 技術知識レベル
- 提供する機能と優先順位を明確にする
  - 例
  - システムの概要や構造を把握したい
  - コードの詳細を理解し、追加修正を簡単にしたい
  - ソフトウェアの品質を保証したい
  - プロジェクトを円滑に進めたい
  - ソフトウェアを適切に使用させたい
- やらないことを明確にする
- コストの優先順位を合意する
  - 機能性 > メンテナンスコスト > フォーマット
- スナップショットか、常に最新とする類の文章か
  - 一般に、常に最新とする文書は非常にコストがかかる
  - 常に最新とする場合、複数の人が同じ文書に対して手を加えていく。共通のルールが必要
- 意味がわかればいい種類の文章なのか、ニュアンスとフォーマットが必要な文章か

プロセス。

- 誰が草稿を書くか
  - 時系列を考慮する
- メンテナンスをどうするか

問題意識。

文書作成は実際に動作するソフトウェアと比べて、形のないものである。何をもって完了とするかは人によって大きく異なる。そして誰でも理解しやすいものなので、些細なことに対して無限に議論・指摘できる。プロセス全体で見たときのコストパフォーマンスを悪化させ、本質的な議論を覆い隠す。それを避けるため、まず目的や受け入れ基準を明確にし、さらに文書作成プロセスについてもいくつかの合意と制限を加えることが必要であると考えた。

細かいフォーマット > コスト という組織も中にはあるだろう。それを明確にして、合意を取っておく。

フォーマット。

- 段落の使い方。階層を多用するか、フラットにするか
- 表記ゆれ対策
- 番号無し/付きリストの使い分け

* 参考
- [[https://inside.dmm.com/articles/software-documentation-challenges/][なぜソフトウェア開発のドキュメント管理は難しいのか - DMM inside]]
- [[https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%BD%E3%83%B3%E3%81%AE%E5%87%A1%E4%BF%97%E6%B3%95%E5%89%87][パーキンソンの凡俗法則 - Wikipedia]]

#+begin_quote
組織は些細な物事に対して、不釣り合いなほど重点を置く
#+end_quote
* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# この事実は自分のこのアイデアとどう整合するか。
# この現象はあの理論でどう説明できるか。
# ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# いま聞いた内容は以前に聞いたことがなかったか。
# メモ y についてメモ x はどういう意味か。
