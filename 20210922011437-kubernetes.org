:PROPERTIES:
:ID:       81b73757-21b3-438c-ab65-680b5ad88a1b
:header-args+: :wrap :results raw
:END:
#+title: Kubernetes
* 概要
Kubernetesは複数の[[id:1658782a-d331-464b-9fd7-1f8233b8b7f8][Docker]]コンテナを連携させるためのシステム。
* Memo
** minikubeでlocalhost8080エラーが出たときの対応
kubectl runを実行すると実行できないときがある。
#+begin_src
$ kubectl run ...
The connection to the server localhost:8080 was refused - did you specify the right host or port?
#+end_src

落ち着いてstatusを確認する。
#+caption: statusで確認する。動いてなかった
#+begin_src
$ kubectl status

minikube
type: Control Plane
host: Stopped
kubelet: Stopped
apiserver: Stopped
kubeconfig: Stopped
#+end_src

単に動いてないことがわかったので、起動する。
#+caption: 起動する
#+begin_src shell
$ minikube start
#+end_src

再度kubectl runする。
#+caption: 無事podが作成される
#+begin_src shell
$ kubectl run ...
pod/demo created
#+end_src

** kubectlでcontextを確認する
kubectlが、どのコンテキストにいるか確認できる。
#+begin_src shell
kubectl config current-context
#+end_src

#+RESULTS:
#+begin_results
minikube
#+end_results

これは、minikube、つまりローカル環境のcontextにいて、Kubernetesとの通信のcontextにはなっていないことを示す。
** 基本コマンド類
#+caption: 起動しているIPアドレスを調べる
#+begin_src shell
minikube ip
#+end_src

#+RESULTS:
#+begin_results
172.17.0.2
#+end_results

#+caption: 起動状況確認
#+begin_src shell
minikube dashboard
#+end_src

#+caption: 作ったPod(postgres)を確認
#+begin_src shell
kubectl describe deployment postgres
#+end_src

#+caption: podsの情報確認
#+begin_src shell
kubectl get Pods
#+end_src

#+caption: 起動サービスを開く。webappはサービス名
#+begin_src shell
minikube service webapp
#+end_src

#+caption: 詳細情報
#+begin_src shell
kubectl describe service webapp
#+end_src

#+RESULTS:
#+begin_results
Name:                     webapp
Namespace:                default
Labels:                   app=webapp
Annotations:              <none>
Selector:                 app=webapp,tier=frontend
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.109.7.196
IPs:                      10.109.7.196
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  30020/TCP
Endpoints:                172.18.0.6:80,172.18.0.7:80,172.18.0.8:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
#+end_results

チェックしたIPアドレスにpostしてみて、データベースに値を保存・登録できるのを確認する。
** minikubeで試す
Kubernetesをローカルで動かすことは難しいので、代替手段が必要。
minikubeによってローカルで試したり、開発に使うことができる。

[[https://github.com/kubernetes/minikube][kubernetes/minikube: Run Kubernetes locally]]

導入手順。
[[https://minikube.sigs.k8s.io/docs/start/][minikube start | minikube]]

kubectlも動かすために必要。
[[https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-kubectl-binary-with-curl-on-linux][Install and Set Up kubectl on Linux | Kubernetes]]

#+caption: 実行
#+begin_src shell
minikube start
#+end_src

#+caption: これが出れば成功
#+begin_quote
🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
#+end_quote

AWS上で動かすためにはまた別のインストールが必要。
#+begin_src shell
export KUBERNETES_PROVIDER=aws; curl -sS https://get.k8s.io | bash
#+end_src
* Tasks
** WIP [[https://www.oreilly.co.jp/books/9784873119014/][O'Reilly Japan - Kubernetesで実践するクラウドネイティブDevOps]]
:LOGBOOK:
CLOCK: [2022-02-12 Sat 18:49]--[2022-02-12 Sat 19:14] =>  0:25
CLOCK: [2022-02-12 Sat 18:11]--[2022-02-12 Sat 18:36] =>  0:25
CLOCK: [2022-02-12 Sat 17:45]--[2022-02-12 Sat 18:10] =>  0:25
CLOCK: [2022-02-11 Fri 09:05]--[2022-02-11 Fri 09:30] =>  0:25
:END:

- (all) 60

#+caption: 説明に使うデモアプリをcloneする
#+begin_src shell
git clone git://github.com/cloudnativedevops/demo.git
#+end_src
** TODO [[https://tech.drecom.co.jp/migrate-rails-app-to-container/][古き良きRailsアプリケーションをコンテナ化してKubernetes上で動かす - Tech Inside Drecom]]
* Reference
** [[https://kubernetes.io/ja/docs/home/][Kubernetesドキュメント | Kubernetes]]
公式ドキュメント。
** [[https://ja.wikipedia.org/wiki/Kubernetes][Kubernetes - Wikipedia]]
* Archives
