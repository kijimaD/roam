:PROPERTIES:
:ID:       afccf86d-70b8-44c0-86a8-cdac25f7dfd3
:mtime:    20241102180359
:ctime:    20210831223434
:END:
#+title: RSpec
* 概要
RSpecは[[id:cfd092c4-1bb2-43d3-88b1-9f647809e546][Ruby]]のテストフレームワーク。[[id:e04aa1a3-509c-45b2-ac64-53d69c961214][Rails]]開発でよく使われる。
* Memo
** within
セレクトボックスをクリックしてから選択、というような場合capybaraは不安定になることがある。
まだ表示されてないのに、クリックするためにクリックするポイントがずれたりする。

安直なのはsleepすることだが、いい方法もある。
親要素全体が表示されてから、クリックする。

#+caption: withinで親要素が表示されるのを待つ
#+begin_src ruby
within '親要素' do
  find('li', text: 'セレクトボックスの中身').click
end
#+end_src

[[https://koheisg.dreamin.cc/system_spec/random-failures][system specとそのrandom落ち (flaky test) との戦い]]
** ENVをテストするためのヘルパー
ENVを変えてテストしたいときがある。
https://github.com/rspec/rspec-rails/issues/1279#issuecomment-70275896
ヘルパーを追加する。

#+caption: helper
#+begin_src ruby
module EnvHelpers
  def with_env_vars(vars)
    original = ENV.to_hash
    vars.each { |k, v| ENV[k] = v }

    begin
      yield
    ensure
      ENV.replace(original)
    end
  end
end
#+end_src

#+caption: rails_helper
#+begin_src ruby
RSpec.configure do |c|
  c.include EnvHelpers
end
#+end_src

#+caption: rspec
#+begin_src ruby
it 'does something with the FOO environment variable' do
  with_env_vars 'FOO' => 'bar' do
    # logic that depends upon ENV['FOO'] goes here
  end
end
#+end_src
** テスト結果にSQLを出力する
どのようなSQLが発行されるか確認できると便利。

#+caption: 発行クエリを出力する
#+begin_src ruby
RSpec.describe do
  before do
    ActiveRecord::Base.logger = Logger.new(STDOUT)
  end

  it do
    ...
  end
end
#+end_src
** request specでsessionメソッドを使う
#+begin_src ruby
allow_any_instance_of(ActionDispatch::Request).to receive(:session).and_return({})
#+end_src
** simplecovカバレッジ
#+begin_src shell
  COVERAGE=true bundle exec rspec spec/requests/user_spec.rb
  open coverage/index.html
#+end_src
* たまに失敗するパターン
system specではよくある。
** 読み込み前に検証して失敗する
#+begin_src ruby
  expect(page).to have_text 'aaa', wait: 5 #発見できなかったときの最大待ち時間を伸ばす
#+end_src
** 並び順に依存したテスト
同じ秒数に作成されたとき、createした順番に並ばない可能性がある。
#+begin_src ruby
  model1 = create(:model)
  model2 = create(:model)
#+end_src
created_atでソートして表示しているとして、この作成順にソートされるわけではない。
秒数が同じときはidなどがソートに使われるだろう。
1つcreateするのにはわずかな時間なので、たまに失敗するだけで気づきにくい。
** チェックボックス
チェックに少し時間がかかるのでたまにチェックせずに送信して失敗する。
#+begin_src ruby
  check aaa
  expect(page).to have_checked_field(aaa), wait 5 # チェックを確認する
#+end_src
* Tasks
* Archives
* Reference
** [[https://stackoverflow.com/questions/38573131/what-is-the-purpose-of-a-transient-do-block-in-factorybot-factories][ruby on rails - What is the purpose of a `transient do` block in FactoryBot factories? - Stack Overflow]]
FactoryBotのtransientの使い方。
** [[https://stackoverflow.com/questions/20196146/check-the-dimensions-of-an-img-with-rspec-capybara][ruby on rails - Check the dimensions of an img with RSpec/Capybara? - Stack Overflow]]
jQueryを使って存在チェックする方法。
** [[https://www.betterspecs.org/][Better Specs. Testing Guidelines for Developers.]]
RSpecのベストプラクティス集。
** [[https://qian-dao-zhen-yi.gitbook.io/rspec-style-guide/][Introduction - rspec-style-guide]]
可読性の高いテストコードを書くためのRSpecのスタイルガイド。
** [[https://dev.classmethod.jp/articles/rspec-recipe/][[Ruby] よく使うRspecのレシピ集（Rspec3.3） | DevelopersIO]]
RSpec。
