:PROPERTIES:
:ID:       007116d4-5023-4070-95ee-0a463b4bd983
:END:
#+title: Inbox
* 概要
とりあえず入れておくページ。
* Memo
* Tasks
* Reference
* Inbox
** [[https://gcc.godbolt.org/][Compiler Explorer]]
アセンブラに変換して確認できるサイト。
** TODO [[https://www.youtube.com/watch?v=TOUkp_Dxb9w][(4) 列挙型の作り方を再考する - Go Conference 2023 Online - YouTube]]
iotaで作るのがデフォルトではあるけれど。
** [[https://github.com/h-ohsaki/asm][h-ohsaki/asm: 「独習アセンブラ 新版」(翔泳社) サポートページ]]
サンプルコード。
** [[https://ja.wikipedia.org/wiki/IEEE_754][IEEE 754 - Wikipedia]]
浮動小数点に関する標準仕様。
** [[https://www.intel.com/content/www/us/en/developer/articles/technical/intel-sdm.html#combined#combined][Intel® 64 and IA-32 Architectures Software Developer Manuals]]
5000ページあるマニュアル。
** [[https://makenowjust-labs.github.io/blog/post/2023-08-06-pike-earley][Pike VMとEarley法の関係についてRubyで実装して考えてみる | makenowjust-labs/blog]]
正規表現の実装。
** [[https://maps.qchizu.xyz/#6/37.900865/138.449707/&base=pale&ls=pale%7Cmlit_road2019_bridge_01&disp=11&lcd=mlit_road2019_bridge_01&vs=c1j0h0k0l0u0t0z0r0s0m0f2&d=m][全国Ｑ地図｜各種地形図・地図情報の統合閲覧サイト]]
橋の地図。
** [[https://www.kanzennirikaisita.com/posts/linux-learning-roadmap][Linux について学ぶおすすめの流れ【書籍を中心に紹介】 - 完全に理解した.com]]
おすすめの本の紹介記事。
** [[https://blog.foresta.me/posts/view_assembly_code/][アセンブリコードを眺めてみる]]
簡潔な解説。
** TODO [[https://www.sigbus.info/compilerbook][低レイヤを知りたい人のためのCコンパイラ作成入門]]
:LOGBOOK:
CLOCK: [2023-08-12 Sat 13:07]
CLOCK: [2023-08-12 Sat 12:18]--[2023-08-12 Sat 12:43] =>  0:25
:END:
コンパイラの作り方の本。作り方だけでなく、インクリメンタルに大きなソフトウェアを作っていくことを体験できるのが良い。

- コンパイラが動作するマシンのことを「ホスト」、コンパイラが出力したコードが動作するマシンのことを「ターゲット」という
- 仮に関数呼び出しが1段しかなければ、リターンアドレスはCPUの適当なレジスタに保存しておけばいいが、関数呼び出しはいくらでも深くできるのでリターンアドレスはメモリ(上にあるスタック)に保存する必要がある
