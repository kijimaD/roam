:properties:
:ID: 20240430T183500
:end:
#+title:      KDOC 147: GITHUB_TOKENを使ってgit pushするとトリガーされない
#+date:       [2024-04-30 Tue 18:35]
#+filetags:   :draft:code:
#+identifier: 20240430T183500

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (save-excursion (while (re-search-backward ":draft" nil t) (replace-match "")))
# (flush-lines "^\\#\s.+?")

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 自分の考えを加える。
# 構造を気にしない。
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

* この文書のステータス
- 作成
  - [X] 2024-05-01 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
[[id:2d35ac9e-554a-4142-bba7-3c614cbfe4c4][GitHub Actions]]において、 ~GITHUB_TOKEN~ はワークフローにデフォルト設定されるシークレットトークンである。これを使うといちいちトークンを登録しなくてよく、便利。しかしデフォルトだけあって権限は強くなく、書き込みがあるアクションをするとハマるポイントがある。
* 実行されない

[[id:2d35ac9e-554a-4142-bba7-3c614cbfe4c4][GitHub Actions]]上でリポジトリにコミットをpushしたいときがあって、それで ~GITHUB_TOKEN~ を使ってpushした。pushはすぐできたのだが、それによるワークフローが発火しない。

↓これは、ちゃんと公式ドキュメントに記載があった。

#+begin_quote
リポジトリGITHUB_TOKENを使用してタスクを実行する場合、 GITHUB_TOKEN によってworkflow_dispatchトリガーされるイベント (例外) と repository_dispatch、 は新しいワークフロー実行を作成しません。 これによって、予想外の再帰的なワークフローの実行が生じないようになります。たとえば、ワークフロー実行でリポジトリの GITHUB_TOKEN を使用してコードがプッシュされた場合、push イベントの発生時に実行するように構成されたワークフローがリポジトリに含まれている場合でも、新しいワークフローは実行されません。
https://docs.github.com/ja/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
#+end_quote

簡単にできたら無限にコミットが実行されるので、それを防ぐためというわけ。

* 参考
- [[https://docs.github.com/ja/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow][自動トークン認証 - GitHub Docs]]
* 関連
なし。
