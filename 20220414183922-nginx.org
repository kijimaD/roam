:PROPERTIES:
:ID:       df013984-822e-439c-bffd-06a5a67ff945
:END:
#+title: Nginx
* 概要
Nginxは、[[id:bb71747d-8599-4aee-b747-13cb44c05773][OSS]]の[[id:59d0554c-f2fa-4ca1-8c7a-774c68bdb036][Web Server]]。
本番環境のWebサービスで、Nginx(Webサーバ) + Unicorn(アプリケーションサーバ) + [[id:e04aa1a3-509c-45b2-ac64-53d69c961214][Rails]](アプリケーション)のように組み合わせて用いられる。

[[https://qiita.com/jnchito/items/3884f9a2ccc057f8f3a3][Rails開発におけるwebサーバーとアプリケーションサーバーの違い（翻訳） - Qiita]]
* Memo
** リバースプロキシ
リバースプロキシによって、サイトURLはそのままで違うURLのサイトを表示できる。
[[https://shiro-secret-base.com/?p=573][Nginx：proxy_passを使ってURLはそのままで違うサイトを表示する | Shiro's secret base]]
** コンテナ設定
nginx.confに各サイトごとの設定ファイルを読み込む記述を追加する。

#+caption: Dockerfile
#+begin_src shell
  FROM nginx:1.22

  RUN rm /etc/nginx/conf.d/default.conf # localhostを使う場合は競合するので消す
  COPY nginx.conf /etc/nginx/ # sites-enabled以下を読み込む設定を追加したnginx.conf
  COPY sample.conf /etc/nginx/sites-enabled/ # サイトごとの設定
#+end_src

#+caption: nginx.confに追加する設定
#+begin_src
include /etc/nginx/sites-enabled/*.conf;
#+end_src

** 静的ファイルの配信
たとえばjsをビルドしたものを配信する場合、必要なこと。

*パスが何であれ常にindex.htmlを読むこむ* ため、自前でサーバを用意する場合、サーバ側で設定が必要になる。GitHub Pagesなどホスティングサービスを利用した場合、自動で設定してくれるため気づきにくい。

- リンクしたリソースへのパスが絶対パスであること
- Webサーバがどのパスであれ、最終的にindex.htmlを読むこむこと

これらはyarn start(内部的にexpressを使っていたりする)で準備されてる場合など、開発環境では動作が異なるためチェックする。実際にbuildしたhtmlと、yarn startで描画したhtmlを比較するとわかりやすい。

#+begin_src
server {
    listen 80;
    server_name localhost; # localhostはデフォルトの設定ファイルと競合するので予め消しておくこと

    location / {
      root /var/www/html; # 配信対象の静的ファイルが入ったディレクトリ
      try_files $uri /index.html; # すべてのURLを/index.htmlへ
      index index.html;
    }
}
#+end_src
* Tasks
* Reference
** [[https://ja.wikipedia.org/wiki/Nginx][nginx - Wikipedia]]
説明。
** [[https://hotch-potch.hatenadiary.jp/entry/2022/02/22/222200_1#3pdAdmin%E3%82%92nginx%E3%81%A7%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B9%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7][PostgreSQL, Note to self - hotch-potch, Note to self]]
[[id:df013984-822e-439c-bffd-06a5a67ff945][Nginx]]でリバースプロキシするときの設定。
* Archives
