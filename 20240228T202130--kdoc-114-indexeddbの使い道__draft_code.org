:properties:
:ID: 20240228T202130
:end:
#+title:      KDOC 114: IndexedDBの使い道
#+date:       [2024-02-28 Wed 20:21]
#+filetags:   :draft:code:
#+identifier: 20240228T202130

# (denote-rename-file-using-front-matter (buffer-file-name) 0)
# (org-roam-tag-remove)
# (org-roam-tag-add)

# ====ポリシー。
# 1ファイル1アイデア。
# 1ファイルで内容を完結させる。
# 常にほかのエントリとリンクする。
# 自分の言葉を使う。
# 参考文献を残しておく。
# 自分の考えを加える。
# 構造を気にしない。
# エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
# アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
# エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
# 恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。

* この文書のステータス
- 作成
  - [X] 2024-02-28 貴島
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
IndexDBにふれる機会があって調べた。使い道を書く。
* イントロ
IndexedDBは、ブラウザの機能に備え付けられたキーバリュー型DBである。バリューにはJavascriptオブジェクトを格納する。[[id:a6980e15-ecee-466e-9ea7-2c0210243c0d][JavaScript]]のAPIを使って機能を利用する。
* 使いみち
あまり使う機会がない機能であった。何に使われているのだろうか。

例えば、UnityをWebGLにビルドしたものを配信するのに使われている。Unityはゲームプログラムを作るときによく使われるが、ゲームはファイルサイズが大きい。プログラムというよりは、テクスチャが多くを占める。たくさんのオブジェクトがマップの広さだけあり、それぞれにテクスチャがあるのを考えると、大きくなりそうなことが想像できる。

で、そういった巨大ファイルは通信に時間がかかるのでキャッシュを用いて毎回ダウンロードが走らないようにしたい。しかし、ブラウザのキャッシュには制約があって、サイズの制限があって保存できなかったりする。Unityの場合はそういう背景で、制限の少ないIndexedDBに巨大なキャッシュを保存することでその制限を回避するようだ。

ちなみにIndexDBはブラウザのキャッシュとは別なので、通常の流れでキャッシュを削除しても削除されない。Cookieごと全削除か、開発者ツールのIndexedDBから削除する必要がある。
* 関連
- [[https://developer.mozilla.org/ja/docs/Web/API/IndexedDB_API][IndexedDB API - Web API | MDN]]
