#+title:      クライアントと開発する
#+date:       [2023-01-05 Thu 20:57]
#+filetags:   :essay:
#+identifier: 20230105T205739

* クライアントと開発する
:LOGBOOK:
CLOCK: [2023-01-05 Thu 21:24]--[2023-01-05 Thu 21:49] =>  0:25
CLOCK: [2023-01-05 Thu 20:59]--[2023-01-05 Thu 21:24] =>  0:25
:END:

自社開発のぬるい感じで生きてきた。最近一気に厳しい環境にさらされて嫌でもどうにかせざるを得なかったのでメモ。

- リプレイス案件
- ニッチで特殊な用途の、ローカル環境限定のアプリケーションをリプレイス
- 見知った人は一切いない
- 1人でバックエンド担当
- 要件定義ができてないので、なし崩し的にやることになっている
- リプレイス元のプロダクトの開発者とリプレイス先の開発者は別の人。かつ、別の仕事で忙しいのであまり聞けない

何もやらないとクレームにつながり死ぬ状況。未知の環境で、無から作らないといけない。

** 知ってる人に聞く
このような状況でできることはシンプルで、知ってる人に聞くしかない。

領域ごとに知ってる人を見つける。いちいち質問するとだるいのでまとめておいて、領域ごとに一気に質問を投げる。比較的複雑そうなら、早めに時間を確保して、音声で聞いて追加で疑問を解決する。

- 聞くことを一切ためらってはいけない。ためらっても仕事は進まない
- 聞かないと進められない状況を作っている彼らが悪い
- むしろ聞かないと自分の責任になる。聞いているなら、自分の責任にならない

** テキストにまとめる
なんとなく納得した感じにしない。その場で相手に画面共有しながらメモを取る。ちゃんと理解してれば書ける。理解してなければどこがわからないかを明らかにして聞いて、メモを追加する。

誰がどう言っていたかの証跡にもなる。


- 2種類のメモ
  - タイムラインのメモ
  - 最新の事項
    - 常に更新されるまとめ
    - 未消化のタスク
    - 決定した事項

で記載し、ログと最新事項を区別し、わかりやすいようにしておく。

** 先に時間を決める
会議が必要な場合、準備が十分に終わってから時間を確保しようとしない。先に時間を決めて、間に合わせるようにやる。人に見せることを意識してやったほうがわかりやすいし、制限時間がわかっているので早くやろうと思える。実行とレビューのタイムラグも少なくなる。

自分の性分というか、ついつい人が絡むものは後回し・避けがちだった。きっちり終わらせて、何回も見直して、それから段取りする、ということをしていた。やり切るには何度かの決心と延期が必要で、遅かった。溜めるほどやりたくなくなるので、それを避けるためにも先に時間を決めておくのは役に立つ。
