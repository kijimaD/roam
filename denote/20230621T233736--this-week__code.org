#+title:      今週のメモ
#+date:       [2023-06-21 Wed 23:37]
#+filetags:   :code:
#+identifier: 20230621T233736

* Links

気になったトピックのメモ。

** [[https://www.rfc-editor.org/rfc/rfc9425.html][RFC 9425: JSON Meta Application Protocol (JMAP) for Quotas]]
JMAPは、電子メールの処理に関するインターネット標準の通信プロトコルのセット。メールやカレンダー、連絡先といった一般的なデータの同期するためのプロトコルでもある。

- [[https://ja.wikipedia.org/wiki/JSON_Meta_Application_Protocol][JSON Meta Application Protocol - Wikipedia]]

そのJMAPのQuotaの仕様。

** [[https://www.rfc-editor.org/rfc/rfc9408.html][RFC 9408: A YANG Network Data Model for Service Attachment Points (SAPs)]]
YANGはデータモデル言語の一種。ネットワーク管理用プロトコルによりアクセスされるネットワーク機器の設定や状態、RPC、通知をモデル化するために開発された。

- [[https://ja.wikipedia.org/wiki/YANG][YANG - Wikipedia]]

** [[https://github.com/docker/compose/pull/10552][introduce ability to select service to be stopped by `compose down` by ndeloof · Pull Request #10552 · docker/compose]]

個別にdownできるようになった。これがなかったからややこしいコマンドをやる必要があった。

** TODO [[https://zenn.dev/dqneo/articles/ce9459676a3303][go build を使わずにGoプログラムをビルドする]]
:LOGBOOK:
CLOCK: [2023-06-22 Thu 23:15]--[2023-06-22 Thu 23:40] =>  0:25
:END:

go buildの仕組み。実際に動かして取っ掛かりを見つけるのが面白い。

そういうアプローチもあるのか。

#+begin_quote
私はソースを読むよりもリバースエンジニアリングする方が得意なので、今回もログだけを見て処理内容を推測して自作しました。
#+end_quote

ビルドタグで言及されてたページ。

-[[https://zenn.dev/team_soda/articles/golang-build-tags-history][ Goのビルドタグの書き方が// +buildから//go:buildに変わった理由]]

** [[https://github.com/golang/go/issues/17860][net/url: optimize unescape and escape · Issue #17860 · golang/go]]
URLに関係する関数での高速化の方法。
** [[https://github.com/golang/go/issues/38017][time: add time/tzdata package and timetzdata tag to embed tzdata in program · Issue #38017 · golang/go]]
タイムゾーン情報をシステム依存でなく、プログラム内にもたせる変更。
** [[https://github.com/golang/go/issues/45624][proposal: expression to create pointer to simple types · Issue #45624 · golang/go]]
気になる提案。
** [[http://localhost:8081/golang/go/issues/51317#top][proposal: arena: new package providing memory arenas · Issue #51317 · golang/go · GitHub]]
arenaのproposal。
