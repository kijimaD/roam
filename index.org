:PROPERTIES:
:ID:       2709c815-cd38-4679-86e8-ff2d3b8817e4
:END:
#+title: Insomnia

#+caption: ページ間のリンクを示す
#+BEGIN_EXPORT html
<script defer src='https://cdnjs.cloudflare.com/ajax/libs/d3/7.2.1/d3.min.js' integrity='sha512-wkduu4oQG74ySorPiSRStC0Zl8rQfjr/Ty6dMvYTmjZw6RS5bferdx8TR7ynxeh79ySEp/benIFFisKofMjPbg==' crossorigin='anonymous' referrerpolicy='no-referrer'></script>
<script defer src='js/graph.js'></script>

<div id="main-graph">
  <svg>
  <defs>
    <filter x="0" y="0" width="1" height="1" id="solid">
      <feflood flood-color="#f7f7f7" flood-opacity="0.9"></feflood>
      <fecomposite in="SourceGraphic" operator="xor"></fecomposite>
    </filter>
  </defs>
  <rect id="base_rect" width="100%" height="100%" fill="#ffffff"></rect>
  </svg>
</div>
#+END_EXPORT

ページ間のリンク図[fn:1]。

* 概要
プログラム関連のメモを公開している。

作成者はこんな感じの人。

|----------+------------------------|
| 氏名     | 貴島 大悟 Kijima Daigo |
| 生年月日 | 1998-03-28             |
| 居住地   | 東京                   |
| 最終学歴 | 鹿児島大学 法文学部    |
| GitHub   | [[https://github.com/kijimaD][kijimaD]]                |

- [[id:a0f58a2a-e92d-496e-9c81-dc5401ab314f][経歴]]
- [[https://github.com/kijimaD/central][統計]]

* Repository stat
期間ごとのファイル数を示す[fn:2]。

#+CAPTION: Number of files(.org only)
#+ATTR_HTML: :alt Number of files image :title Files :align right
[[./git-file.png]]

期間ごとの行数を示す。

#+CAPTION: Number of lines(.org only)
#+ATTR_HTML: :alt Number of lines image :title Lines :align right
[[./git-line.png]]
* Recent activity
[[id:1ad8c3d5-97ba-4905-be11-e6f2626127ad][Emacs]] [[id:7e85e3f3-a6b9-447e-9826-307a3618dac8][org-mode]](標準機能)により時刻記録して、clock-tableとorg-agendaで出力した結果を示す。
** Pomodoro
ポモドーロ統計の図。

 #+BEGIN_EXPORT html
 <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
 <script type="text/javascript">
 google.charts.load("current", {packages:["calendar"]});
 google.charts.setOnLoadCallback(drawChart);

 function drawChart() {
  scores = csvToArray("js/pmd.csv").map(function (value) {
   return [new Date(value[0]), Number(value[1])];
  })

  var dataTable = new google.visualization.DataTable();
  dataTable.addColumn({ type: 'date', id: 'Date' });
  dataTable.addColumn({ type: 'number', id: 'Score' });
  dataTable.addRows(scores);

  var chart = new google.visualization.Calendar(document.getElementById('calendar_basic'));

  var options = {
    title: "Pomodoro stats",
  };

  chart.draw(dataTable, options);
 }

 function csvToArray(filename) {

   // CSVファイルを文字列として取得
   var srt = new XMLHttpRequest();
   srt.open("GET", filename, false);
   try {
     srt.send(null);
   } catch (err) {
     console.log(err)
   }

   // 配列を用意
   var csvArr = [];

   // 改行ごとに配列化
   var lines = srt.responseText.split("\n");

   // 1行ごとに処理
   for (var i = 0; i < lines.length; ++i) {
     var cells = lines[i].split(",");
     if (cells.length != 1) {
       csvArr.push(cells);
     }
   }
   return csvArr;
 }
 </script>

 <body>
 <div id="calendar_basic" style="width: 1000px; height: 350px;"></div>
 </body>
 #+END_EXPORT
** This Week by Day
今週の記録。

#+BEGIN: clocktable :maxlevel 3 :scope agenda :tags "" :block thisweek :step day :stepskip0 true :fileskip0 true :link true :maxlevel 2 :timestamp true :indent true
#+END:
** This Month
今月の記録。

#+BEGIN: clocktable :maxlevel 3 :scope agenda :tags "" :block thismonth :step month :stepskip0 true :fileskip0 true :link true :maxlevel 2 :timestamp true :indent true
#+END:
** COMMENT Last 30 days log
# あまり意味がない気がするので非表示にしている。
#+BEGIN_EXPORT html
<iframe src="./agenda.html"
        style="width: 100%;"></iframe>
#+END_EXPORT
** COMMENT columnview
:OUTPUT_CONFIG:
#+COLUMNS: %35ITEM(Goals/Activities) %TODO(Status){C+} %STARTED(Started) %CLOSED(Completed)
:END:

#+BEGIN: columnview :hlines 1 :indent t :id global

#+END:
* Blog
** エッセイ

日々考えたこと。1つのアイデアを表現する。

#+BEGIN: denote-links :regexp "_essay"
- [[denote:20221026T102641][denoteを使う]]
- [[denote:20221027T234844][仕事場]]
- [[denote:20221102T234233][すごい人たち]]
- [[denote:20221119T014132][教育サービス会社を退職した]]
- [[denote:20221119T014335][ドローン・地図関係の会社に入社した]]
- [[denote:20221205T020840][オタク集団]]
- [[denote:20221210T014600][より理解する]]
- [[denote:20221213T005128][理解を試す基準]]
- [[denote:20221225T201727][外に出てなかった頃の自分へのアドバイス]]
- [[denote:20230101T175751][2022年のまとめ]]
- [[denote:20230105T205739][社外の人と開発するコツ]]
- [[denote:20230301T234645][仕事のように集中する]]
- [[denote:20230723T121639][深く知る]]
- [[denote:20231008T023926][意図しないひとり焼肉]]
- [[denote:20231008T024111][イヤーカフ型イヤホン]]
- [[denote:20231008T024245][呪術廻戦]]
- [[denote:20231008T024442][敬語崩し]]
- [[denote:20231008T122341][上京してよかったこと]]
- [[denote:20231008T150508][赤羽歩き]]
#+END:

** 学び

1つのアイデアを表現する。

#+BEGIN: denote-links :regexp "_learning"
- [[denote:20231009T140029][どう達成するか。トップダウンvsボトムアップ]]
- [[denote:20231009T155942][ツェッテルカステンのやり方]]
- [[denote:20231009T163508][ツェッテルカステンとwikiの違い]]
#+END:

** 本の感想

読んだ本のメモ。

#+BEGIN: denote-links :regexp "_book"
- [[denote:20221027T235104][『「ない仕事」の作り方』を読んだ]]
- [[denote:20231008T203658][『TAKE NOTES!』を読んだ]]
#+END:

** コード

コードのメモ。

#+BEGIN: denote-links :regexp "_code"
- [[denote:20221118T002048][fmtを読む]]
- [[denote:20221201T225506][レビューツール メモ]]
- [[denote:20221211T125426][unitcheckerを読む]]
- [[denote:20221217T192846][make2helpを読む]]
- [[denote:20221231T215937][Emacs Caskを読む]]
- [[denote:20230111T005744][EXWMを読む]]
- [[denote:20230114T145247][ertを読む]]
- [[denote:20230218T111643][docker build のログ出力を読む]]
- [[denote:20230302T004627][whitespaceを読む]]
- [[denote:20230304T231103][unusedを読む]]
- [[denote:20230319T130040][ゲームボーイエミュレータを作る]]
- [[denote:20230527T000152][docker progress を読む]]
- [[denote:20230815T231456][Cコンパイラを書く]]
- [[denote:20230909T204817][交通シミュレーションゲームを作る]]
- [[denote:20230910T231044][Simutransのコードを読む]]
#+END:
* Tasks                                                            :noexport:
文書全体、サイトビルドに関するタスクを記述する。

** TODO コミットグラフをd3.jsで書き直す
GNU Plotで描画していてよくわからない、かつださいので変える。
** TODO gitグラフのスクリプトを共通化する
同じ内容が重複しているのでまとめる。共通化すればもっといろんなことに使えるはず。
* Archives                                                         :noexport:
** DONE サイトindexにstatカードを表示する
CLOSED: [2021-09-25 Sat 00:19]
- https://qiita.com/zizi4n5/items/f8076cb25bbf64a9bc1c
** DONE ファイル数グラフを追加する
いい感じに増加しているのを見たい。
[[id:90c6b715-9324-46ce-a354-63d09403b066][Git]]から、各期間での数を抽出すればいい。
** DONE ファイルサイズで並べる
CLOSED: [2021-09-10 Fri 17:49]
ファイルを並べた。
** DONE clock table作成
CLOSED: [2021-09-23 Thu 14:50]
:LOGBOOK:
CLOCK: [2021-09-23 Thu 13:48]--[2021-09-23 Thu 13:56] =>  0:08
CLOCK: [2021-09-23 Thu 12:26]--[2021-09-23 Thu 13:28] =>  1:02
CLOCK: [2021-09-23 Thu 11:29]--[2021-09-23 Thu 11:57] =>  0:28
CLOCK: [2021-09-23 Thu 11:14]--[2021-09-23 Thu 11:17] =>  0:03
:END:
スケジュール表示よりこっちのほうが見やすい。
** CLOSE ファイルサイズの棒グラフを作成する
CLOSED: [2021-09-23 Thu 22:26]
:LOGBOOK:
CLOCK: [2021-09-23 Thu 22:06]--[2021-09-23 Thu 22:26] =>  0:20
CLOCK: [2021-09-23 Thu 21:16]--[2021-09-23 Thu 21:41] =>  0:25
:END:

ファイルごとで棒グラフみたくしたかったのだが、ファイルの数が多すぎてうまくいかなかった。
また、一部の割合が大きくそのほかは0.1%代なのでグラフとしてあまり意味をもたなかった。

#+begin_src shell
set terminal dumb feed 80 50

set datafile separator ","
set noxtics

plot "character-count.dat" using 2:0:ytic(1) with lines notitle
#+end_src
** DONE コマンド整理
CLOSED: [2021-12-28 Tue 20:08]
:LOGBOOK:
CLOCK: [2021-12-28 Tue 18:38]--[2021-12-28 Tue 20:08] =>  1:30
:END:
ディレクトリを移動してrootを綺麗にした。
** DONE ファイルグラフの表示項目を増やす
CLOSED: [2022-01-04 Tue 12:46]
- ページランク, タイトル, 文字数カウント, 変更回数、最終変更日(相対日付)、変更回数
** DONE Docker環境作成する
CLOSED: [2022-01-04 Tue 12:46]
:LOGBOOK:
CLOCK: [2021-12-30 Thu 21:35]--[2021-12-30 Thu 23:01] =>  1:26
:END:
複数の依存環境があり、環境構築が面倒なので。

- Ruby
- Python
- sqlite
- Emacs
** DONE org-roam.dbを使って有用な情報取得
CLOSED: [2022-01-04 Tue 12:46]
:LOGBOOK:
:END:
ファイルの名前、接続してるファイルの数(ページランクができる)を表にできそうな感じ。今はlsでやってる部分。
** CLOSE Write self introduction in English
CLOSED: [2022-01-29 Sat 17:06]
** DONE イメージ作成する
CLOSED: [2022-02-03 Thu 10:02]
:LOGBOOK:
CLOCK: [2022-01-29 Sat 20:20]--[2022-01-29 Sat 20:45] =>  0:25
CLOCK: [2022-01-29 Sat 19:07]--[2022-01-29 Sat 19:32] =>  0:25
:END:
開発・ビルドを[[id:1658782a-d331-464b-9fd7-1f8233b8b7f8][Docker]]でできるようにする。

- [[id:1ad8c3d5-97ba-4905-be11-e6f2626127ad][Emacs]]とsqliteがうまく動かない。GitHub ActionでやっているEmacsイメージ的なのでは起こらない。
- マルチステージビルドがうまくいかない。依存は、主に[[id:1ad8c3d5-97ba-4905-be11-e6f2626127ad][Emacs]], [[id:cfd092c4-1bb2-43d3-88b1-9f647809e546][Ruby]], [[id:a6c9c9ad-d9b1-4e13-8992-75d8590e464c][Python]]の3つ(他にもある)。

[[id:6b889822-21f1-4a3e-9755-e3ca52fa0bc4][GitHub]] Actionがないとビルドできない状態なので、手元で一通り実行できるようにして、同じ方法で本番ビルドも行えるようにしたい。
** DONE デプロイをdockerでやる
CLOSED: [2022-02-03 Thu 10:03]
作ったイメージでデプロイするように。高速。
** DONE イメージ改良
CLOSED: [2022-02-06 Sun 00:31] DEADLINE: <2022-02-05 Sat 23:59>
:LOGBOOK:
CLOCK: [2022-02-05 Sat 10:25]--[2022-02-05 Sat 10:50] =>  0:25
:END:
遅いので改良する。
** DONE テスト追加する
CLOSED: [2022-02-06 Sun 10:52]
ビルドのテストがない。

実行テストが成功したら、タグをつけてpushしたい。
新しいビルド内容でpublishできるか試すようにした。
** DONE lint追加
CLOSED: [2022-02-11 Fri 17:46]
:LOGBOOK:
CLOCK: [2022-02-09 Wed 22:22]--[2022-02-09 Wed 22:47] =>  0:25
CLOCK: [2022-02-06 Sun 10:54]--[2022-02-06 Sun 11:19] =>  0:25
:END:
- dockerfile
- image内容
- github actions
いつでも実行できるようにしたが、まだエラーが多くCIで実行できない。
** DONE pomodoroグラフを記録・表示する
CLOSED: [2022-02-26 Sat 00:13]
:LOGBOOK:
CLOCK: [2022-02-13 Sun 11:57]--[2022-02-13 Sun 12:22] =>  0:25
CLOCK: [2022-02-13 Sun 11:17]--[2022-02-13 Sun 11:42] =>  0:25
CLOCK: [2022-02-13 Sun 10:50]--[2022-02-13 Sun 11:15] =>  0:25
:END:
デイリーで測ってるやつをファイルに保存しておいて、描画すればよさそう。
** DONE dockerジョブを改良
CLOSED: [2022-02-27 Sun 14:34]
:LOGBOOK:
CLOCK: [2022-02-26 Sat 20:06]--[2022-02-26 Sat 20:31] =>  0:25
CLOCK: [2022-02-26 Sat 19:13]--[2022-02-26 Sat 19:38] =>  0:25
CLOCK: [2022-02-26 Sat 14:23]--[2022-02-26 Sat 14:48] =>  0:25
CLOCK: [2022-02-26 Sat 13:25]--[2022-02-26 Sat 13:50] =>  0:25
CLOCK: [2022-02-26 Sat 11:06]--[2022-02-26 Sat 11:31] =>  0:25
CLOCK: [2022-02-26 Sat 00:14]--[2022-02-26 Sat 00:39] =>  0:25
:END:
- herokuのコンテナデプロイがおかしい
- イメージサイズがでかくてビルドに時間がかかる
** CLOSE stagingビルドが終わったらPRにコメントする
CLOSED: [2022-02-28 Mon 23:05]
:LOGBOOK:
CLOCK: [2022-02-28 Mon 22:29]--[2022-02-28 Mon 22:54] =>  0:25
CLOCK: [2022-02-28 Mon 21:59]--[2022-02-28 Mon 22:24] =>  0:25
:END:
UI上できたかわからないので。

あまりよくわからないのでやらない。
** DONE Upptimeで死活監視してみる
CLOSED: [2022-02-28 Mon 23:06]
:LOGBOOK:
CLOCK: [2022-02-28 Mon 10:27]--[2022-02-28 Mon 10:52] =>  0:25
:END:
サイレントにデプロイ失敗していることが多い。
[[id:6b889822-21f1-4a3e-9755-e3ca52fa0bc4][GitHub]] Actionsだけでできるらしい。
** DONE デザイン調整
CLOSED: [2022-05-08 Sun 11:47]
:LOGBOOK:
CLOCK: [2022-05-06 Fri 21:42]--[2022-05-06 Fri 22:07] =>  0:25
CLOCK: [2022-05-06 Fri 21:17]--[2022-05-06 Fri 21:42] =>  0:25
CLOCK: [2022-05-05 Thu 23:07]--[2022-05-05 Thu 23:32] =>  0:25
:END:
** DONE 更新してないファイルを検知してissue化させる
CLOSED: [2022-07-02 Sat 09:15]
[[id:6b889822-21f1-4a3e-9755-e3ca52fa0bc4][GitHub]] Actionで定期タスクを実行して、issue化させる。
一定期間過ぎてるファイルリストを出して、それらをまとめたIssueを作らせるとよさそう。

Stalefileを作成した。
** DONE LintをCIで実行する
CLOSED: [2022-07-03 Sun 15:08]
:LOGBOOK:
CLOCK: [2022-05-22 Sun 15:42]--[2022-05-22 Sun 16:07] =>  0:25
CLOCK: [2022-05-22 Sun 15:16]--[2022-05-22 Sun 15:41] =>  0:25
:END:
** DONE Makefileをリファクタリング
CLOSED: [2022-07-03 Sun 15:08]
:LOGBOOK:
:END:
サイトのビルドは[[id:375ccc99-c86e-4d3e-9367-550286dccba4][Make]]でしている。

全然使いこなせてないので、ちゃんとしたMakefileの書き方で書く。
[[id:5ba43a42-93cb-48fa-8578-0558c757493f][magit]]のMakefileが参考になりそう。
https://github.com/kd-collective/magit/blob/877c389ca0161959081fa2c77045ce1ae9463be4/Documentation/Makefile#L1
** DONE ディレクトリ整理
CLOSED: [2022-07-03 Sun 15:08]
** DONE PRのテスト失敗を直す
CLOSED: [2022-09-25 Sun 10:28]
:LOGBOOK:
CLOCK: [2022-09-25 Sun 10:00]--[2022-09-25 Sun 10:25] =>  0:25
CLOCK: [2022-09-25 Sun 10:25]--[2022-09-25 Sun 10:50] =>  0:25
:END:
失敗している。
** DONE サイトデザインを戻す
CLOSED: [2022-09-25 Sun 15:41]
:LOGBOOK:
CLOCK: [2022-09-25 Sun 13:24]--[2022-09-25 Sun 13:49] =>  0:25
CLOCK: [2022-09-25 Sun 12:45]--[2022-09-25 Sun 13:10] =>  0:25
CLOCK: [2022-09-25 Sun 11:45]--[2022-09-25 Sun 12:10] =>  0:25
:END:
前の方が良い。
** DONE herokuを直す
CLOSED: [2022-09-25 Sun 15:41]
:LOGBOOK:
CLOCK: [2022-09-25 Sun 11:20]--[2022-09-25 Sun 11:45] =>  0:25
CLOCK: [2022-09-25 Sun 10:55]--[2022-09-25 Sun 11:20] =>  0:25
:END:
ステージングが動くようにする。
** DONE 記法ルール
CLOSED: [2023-02-11 Sat 16:50]
適当なので、構造のルールとか決める。ルールをlintで検知できるようにする。

- 階層を3階層以上作らない。あとから変更しにくいから。浅く広く構築していく
- コードには必ずキャプションをつける。あとから見てわからなくなることが多いので、意味が重複してもつける
** DONE denoteの一覧表示する
CLOSED: [2023-07-16 Sun 01:16]
:LOGBOOK:
CLOCK: [2023-06-19 Mon 21:32]--[2023-06-19 Mon 21:57] =>  0:25
:END:

一応ビルドはしているけど導線がわかりづらい。

今の問題点。

- 一覧表示しづらい(エディタからも)
  - 別にできない
  - タイトルが日本語で出ない
  - 後で見やすくしないと、書き終わらない

mdbookみたいな感じにしたい。
** DONE denote一覧を出力する
CLOSED: [2023-10-08 Sun 10:18]
:LOGBOOK:
CLOCK: [2023-10-07 Sat 23:38]--[2023-10-08 Sun 00:03] =>  0:25
CLOCK: [2023-10-07 Sat 22:28]--[2023-10-07 Sat 23:26] =>  0:58
CLOCK: [2023-10-07 Sat 21:29]--[2023-10-07 Sat 21:54] =>  0:25
CLOCK: [2023-10-07 Sat 21:02]--[2023-10-07 Sat 21:27] =>  0:25
CLOCK: [2023-10-07 Sat 20:36]--[2023-10-07 Sat 21:01] =>  0:25
CLOCK: [2023-10-07 Sat 23:00]--[2023-10-07 Sat 23:25] =>  0:25
:END:

CIでdynamic blockを評価できない。空白になってしまう。

#+begin_quote
Error during update of dynamic block
#+end_quote

requireしたらできるようになった。どうも[[id:1658782a-d331-464b-9fd7-1f8233b8b7f8][Docker]]イメージをいじるとき、直近の変更が反映されてないように見える。

** DONE denoteのテンプレートを作成する
CLOSED: [2023-10-07 Sat 20:35]
:LOGBOOK:
CLOCK: [2023-07-16 Sun 11:44]--[2023-07-16 Sun 12:09] =>  0:25
CLOCK: [2023-07-16 Sun 11:19]--[2023-07-16 Sun 11:44] =>  0:25
CLOCK: [2023-07-16 Sun 01:21]--[2023-07-16 Sun 01:46] =>  0:25
:END:

[[id:ec870135-b092-4635-8f8e-74a5411bb779][RFC]]風のテンプレートを作成する。スコープを明確にする。
** DONE denoteページでdenoteリンクが機能しない
CLOSED: [2023-10-09 Mon 17:37]
denoteディレクトリをカレントディレクトリに指定したら直った。

エクスポートした後、nilになっている。トップからはリンクが機能しているので、階層が違うので問題のようだ。
* Footnotes
[fn:1]
1. org-roamが各orgファイルを解釈して、sqliteデータベースを作成する。([[id:1ad8c3d5-97ba-4905-be11-e6f2626127ad][Emacs]])
2. 出力したsqliteデータベースのノード・エッジ情報をjsonに加工する。([[id:a6c9c9ad-d9b1-4e13-8992-75d8590e464c][Python]])
3. d3.jsにデータを入れて、無向グラフを描画する。([[id:a6980e15-ecee-466e-9ea7-2c0210243c0d][JavaScript]])
[fn:2] Gitリポジトリをコミットごとに調査するスクリプトでデータ取得。GNU Plotでグラフ画像を描画している。
