<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><author><name>Kijima Daigo</name></author>
<title>Insomnia</title>
<generator>Emacs webfeeder.el</generator>
<link href="https://kijimad.github.io/roam"/>
<link href="https://kijimad.github.io/roam/atom.xml" rel="self"/>
<id>https://kijimad.github.io/roam/atom.xml</id>
<updated>2025-06-29T20:00:14+09:00</updated>
<entry>
  <title>KDOC 402: Goの識別子の境界を探る</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgfae6a89" class="outline-2">
 <h2 id="orgfae6a89"> <a href="#orgfae6a89">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgfae6a89">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-21 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgb1e200d" class="outline-2">
 <h2 id="orgb1e200d"> <a href="#orgb1e200d">概要</a></h2>
 <div class="outline-text-2" id="text-orgb1e200d">
 <p>
多くの現代的なプログラミング言語では識別子にUnicodeの文字(コードポイント)を使えるということを知っていたが、ちゃんとGoの仕様を調べたことはなかった。確認する。
</p>

 <p>
最初に、何も調べずに実行してみて確かめてみる。違和感がすごいが、英語ネイティブが見ているのはこういう景色なのだろう。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>すべて正しいシンタックス。ビルド、実行できる</label> <pre class="src src-go">import "fmt"
func main() {
        // 変数名に日本語が使える
        あ := "a"
        fmt.Println(あ)

        // 関数名に日本語が使える
        漢字()

        // 型名に日本語が使える
        type 地名 struct {}
        var 江戸川橋 地名
        fmt.Println(江戸川橋)
}

func 漢字() {}
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">a
{}
</pre>
</div>

 <p>
調べてみる。
</p>

 <p>
 <a href="https://go.dev/ref/spec#letter">言語仕様書</a>によると、識別子( <code>identifier</code>)の定義はこうだ。出てきた  <code>letter</code>,  <code>unicode_letter</code> も辿って調べた。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 2: </span>identifierの定義</label> <pre class="src src-code">identifier = letter { letter | unicode_digit } .
letter     = unicode_letter | "_" .
unicode_letter = /* a Unicode code point categorized as "Letter" */ .
</pre>
</div>

 <p>
ここからわかること、考察。
</p>

 <ul class="org-ul"> <li>Unicodeにはカテゴリという概念がある。letter(文字), mark(結合記号), number(数字), punctuation(句読点), …
 <ul class="org-ul"> <li>結合記号はアクセント記号のように、ほかの文字と組み合わせて使う記号のことである</li>
 <li>たとえば漢字はletterのサブカテゴリotherに属する</li>
</ul></li>
 <li>識別子の先頭にletterカテゴリの文字があれば、あとはなんでもいい。逆にいえば、結合記号、数字、句読点、…から開始できない</li>
 <li>アンダースコア  <code>_</code> は句読点カテゴリの文字である。例外的にletterとして許容されている
 <ul class="org-ul"> <li>自然に使っていて、全く意識してなかった</li>
</ul></li>
</ul> <p>
以上から、無効なパターンを試した <sup> <a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup>。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 3: </span>結合記号、数字、句読点、…から開始できない</label> <pre class="src src-shell"> <span class="org-variable-name">tmpfile</span>=$(mktemp /tmp/tmpgo.XXXXXX.go)

cat > $ <span class="org-variable-name">tmpfile</span> <<EOF
 <span class="org-sh-heredoc">package main</span>

 <span class="org-sh-heredoc">func main() {</span>
 <span class="org-sh-heredoc">  // 先頭のアクセント記号は不可</span>
 <span class="org-sh-heredoc">  ◌̀ := "あ"</span>
 <span class="org-sh-heredoc">  print(◌̀)</span>

 <span class="org-sh-heredoc">  // 先頭の数字は不可</span>
 <span class="org-sh-heredoc">  ９ := "あ"</span>
 <span class="org-sh-heredoc">  print(９)</span>

 <span class="org-sh-heredoc">  // 先頭の漢数字はletter扱いなので問題ない</span>
 <span class="org-sh-heredoc">  九 := "あ"</span>
 <span class="org-sh-heredoc">  print(九)</span>

 <span class="org-sh-heredoc">  // 先頭の句読点は不可</span>
 <span class="org-sh-heredoc">  、 := "あ"</span>
 <span class="org-sh-heredoc">  print(、)</span>

 <span class="org-sh-heredoc">  // 先頭のシンボルは不可</span>
 <span class="org-sh-heredoc">  👍 := "あ"</span>
 <span class="org-sh-heredoc">  print(👍)</span>
 <span class="org-sh-heredoc">}</span>
 <span class="org-sh-heredoc">EOF</span>

go run $ <span class="org-variable-name">tmpfile</span> 2>&1
rm $ <span class="org-variable-name">tmpfile</span>
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil"># command-line-arguments
/tmp/tmpgo.FO1KQz.go:5:3: invalid character U+25CC '◌' in identifier
/tmp/tmpgo.FO1KQz.go:5:6: invalid character U+0300 '̀' in identifier
/tmp/tmpgo.FO1KQz.go:6:9: invalid character U+25CC '◌' in identifier
/tmp/tmpgo.FO1KQz.go:6:12: invalid character U+0300 '̀' in identifier
/tmp/tmpgo.FO1KQz.go:9:3: identifier cannot begin with digit U+FF19 '９'
/tmp/tmpgo.FO1KQz.go:10:9: identifier cannot begin with digit U+FF19 '９'
/tmp/tmpgo.FO1KQz.go:17:3: invalid character U+3001 '、' in identifier
/tmp/tmpgo.FO1KQz.go:18:9: invalid character U+3001 '、' in identifier
/tmp/tmpgo.FO1KQz.go:21:3: invalid character U+1F44D '👍' in identifier
/tmp/tmpgo.FO1KQz.go:22:9: invalid character U+1F44D '👍' in identifier
/tmp/tmpgo.FO1KQz.go:22:9: too many errors
</pre>
</div>

 <p>
調べる前の認識は、正確ではなかったのがわかった。
</p>
</div>
</div>
 <div id="outline-container-org835e0f9" class="outline-2">
 <h2 id="org835e0f9"> <a href="#org835e0f9">関連</a></h2>
 <div class="outline-text-2" id="text-org835e0f9">
 <ul class="org-ul"> <li> <a href="https://en.wikipedia.org/wiki/Unicode_character_property">Unicode character property - Wikipedia</a>。カテゴリ表を参考にした</li>
 <li> <a href="https://go.dev/ref/spec#letter">The Go Programming Language Specification</a>。Goの言語仕様書</li>
</ul></div>
</div>
 <div id="footnotes">
 <h2 class="footnotes">Footnotes: </h2>
 <div id="text-footnotes">

 <div class="footdef"> <sup> <a id="fn.1" class="footnum" href="#fnr.1" role="doc-backlink">1</a></sup> <div class="footpara" role="doc-footnote"> <p class="footpara">
org-babelで標準エラーを出すためシェルスクリプトから実行している。
</p></div></div>


</div>
</div></div>]]></content>
  <link href="https://kijimad.github.io/roam/20250621T183743--kdoc-402-goの識別子の境界を探る__draft_wiki.html"/>
  <id>https://kijimad.github.io/roam/20250621T183743--kdoc-402-goの識別子の境界を探る__draft_wiki.html</id>
  <updated>2025-06-30T05:00:12+09:00</updated>
</entry>
<entry>
  <title>KDOC 407: 1W5Hでユーザーストーリーを書く</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org14ce769" class="outline-2">
 <h2 id="org14ce769"> <a href="#org14ce769">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org14ce769">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org78f9011" class="outline-2">
 <h2 id="org78f9011"> <a href="#org78f9011">概要</a></h2>
 <div class="outline-text-2" id="text-org78f9011">
 <p>
 <a href="https://speakerdeck.com/soudai/grow-one-day-each-day?slide=30">**強い**エンジニアのなり方 - フィードバックサイクルを勝ち取る / grow one day each day</a>で、問題設定の文脈において1W5H形式でユーザーストーリーに記載することが書かれていた。
</p>

 <p>
これらは当たり前に見える。しかしだからこそ、ズレが生まれる。それを明確にすることが大事なのだと考えた。
</p>

 <p>
メモ。
</p>

 <ul class="org-ul"> <li>Why
 <ul class="org-ul"> <li>なぜ必要なのか</li>
</ul></li>
 <li>What
 <ul class="org-ul"> <li>実現したいことは何か</li>
 <li>成果物は何か</li>
 <li>完了の定義</li>
</ul></li>
 <li>When
 <ul class="org-ul"> <li>タスクの期限</li>
</ul></li>
 <li>Where
 <ul class="org-ul"> <li>ビジョンやゴールはどこか</li>
 <li>どこで実行されるか</li>
</ul></li>
 <li>Who
 <ul class="org-ul"> <li>ステークホルダーは誰か</li>
 <li>利用者は誰か</li>
 <li>依頼者は誰か</li>
 <li>レビューは誰にお願いするか</li>
</ul></li>
 <li>How
 <ul class="org-ul"> <li>どのように実現するか</li>
 <li>実装のための制約や方針も含む</li>
</ul></li>
</ul> <p>
ユーザーストーリーの見直し。
</p>

 <ul class="org-ul"> <li>もっとも実現したいことにフォーカスする</li>
 <li>複数の方法に置き換え</li>
 <li>実現する場所、実装する場所を置き換える</li>
 <li>届けたいペルソナを絞る</li>
 <li>制約を減らす方法を検討する</li>
 <li>今やるべきか検討する</li>
</ul></div>
</div>
 <div id="outline-container-orgde068b3" class="outline-2">
 <h2 id="orgde068b3"> <a href="#orgde068b3">関連</a></h2>
 <div class="outline-text-2" id="text-orgde068b3">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250624T214442--kdoc-407-1w5hでユーザーストーリーを書く__draft_essay.html"/>
  <id>https://kijimad.github.io/roam/20250624T214442--kdoc-407-1w5hでユーザーストーリーを書く__draft_essay.html</id>
  <updated>2025-06-30T05:00:10+09:00</updated>
</entry>
<entry>
  <title>KDOC 401: 起動中のプロセスをstraceで観察する</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgbf28231" class="outline-2">
 <h2 id="orgbf28231"> <a href="#orgbf28231">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgbf28231">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-21 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgb45a9a2" class="outline-2">
 <h2 id="orgb45a9a2"> <a href="#orgb45a9a2">概要</a></h2>
 <div class="outline-text-2" id="text-orgb45a9a2">
 <p>
 <code>strace</code> ですでに起動しているプロセスを見てみると気軽に発行システムコールを眺められる。コマンドをメモしておく。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>viteの開発サーバに対してアタッチする。ホットリロードのためにポーリングがされているのがわかる</label> <pre class="src src-shell">sudo strace -p $(pgrep node | head -n1)
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">strace: Process 1550973 attached
epoll_pwait(15, [{events=EPOLLIN, data={u32=22, u64=22}}], 1024, 638, NULL, 8) = 1
read(22, "\35\0\0\0H\253\0\0\6\1\0\0\0\7\0\0\0command\3\4\0\0\0pin"..., 65536) = 33
write(20, "\t\0\0\0I\253\0\0\6\0\0\0\0", 13) = 13
epoll_pwait(15, [], 1024, 0, NULL, 8)   = 0
(略)
</pre>
</div>
</div>
</div>
 <div id="outline-container-org74b36ab" class="outline-2">
 <h2 id="org74b36ab"> <a href="#org74b36ab">関連</a></h2>
 <div class="outline-text-2" id="text-org74b36ab">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250621T094036--kdoc-401-起動中のプロセスをstraceで観察する__wiki.html"/>
  <id>https://kijimad.github.io/roam/20250621T094036--kdoc-401-起動中のプロセスをstraceで観察する__wiki.html</id>
  <updated>2025-06-30T05:00:05+09:00</updated>
</entry>
<entry>
  <title>KDOC 409: 挫折し続けた運動を習慣化できたのは毎日やったから</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org6792d4d" class="outline-2">
 <h2 id="org6792d4d"> <a href="#org6792d4d">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org6792d4d">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgcd1f9ff" class="outline-2">
 <h2 id="orgcd1f9ff"> <a href="#orgcd1f9ff">概要</a></h2>
 <div class="outline-text-2" id="text-orgcd1f9ff">
 <p>
運動を1年間継続してやっている。体の変化を実感し、自信になっている。肉体だけでない。自分がやると決めたことを続けられる人間なのだということを誇らしく感じる。
</p>

 <p>
 <a href="20240810T073930--kdoc-215-運動習慣を身につけるヒントを考える__essay.html#ID-20240810T073930">KDOC 215: 運動習慣を身につけるヒントを考える</a>では、継続1ヶ月時点で、なぜ続けられているのかを考えている。今は最大の要因について違う意見を持っている。もっとも重要な要因は、「毎日やっていたから」に見える。本で紹介されていたスケジュールが曜日ごとに違う部位のトレーニングを1種類やる、ということだったのでそのとおりやっていた。
</p>

 <p>
意見を変えた理由は、ほかの習慣における再現性である。運動は習慣化できたが、ほかのことへの応用はうまくいってなかった。
</p>

 <p>
最近、 <a href="20250624T222943--kdoc-408-ラクに続けるコツは週7日やることである__draft_essay.html#ID-20250624T222943">KDOC 408: ラクに続けるコツは週7日やることである</a>がよさそうに見えたので、毎日やるのを実践している。毎日5分本を読む、5分英語の動画を見る、といった習慣をはじめてしばらく期間が経過したのだが、じつに自然に継続している。
</p>

 <p>
重要なのは、毎日実行すること、毎日実行できるようにハードルを下げる、ということだったように見える。
</p>
</div>
</div>
 <div id="outline-container-org8d1f253" class="outline-2">
 <h2 id="org8d1f253"> <a href="#org8d1f253">関連</a></h2>
 <div class="outline-text-2" id="text-org8d1f253">
 <ul class="org-ul"> <li> <a href="20240708T214636--kdoc-197-『プリズナー・トレーニング』__book.html#ID-20240708T214636">KDOC 197: 『プリズナー・トレーニング』</a>。運動を習慣化できた本</li>
 <li> <a href="20250611T180912--kdoc-385-『続ける思考』__draft_book.html#ID-20250611T180912">KDOC 385: 『続ける思考』</a>。習慣化するために誰でも再現可能な方法を解説する本</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250626T085406--kdoc-409-挫折し続けた運動を習慣化できたのは毎日やったから__draft_essay.html"/>
  <id>https://kijimad.github.io/roam/20250626T085406--kdoc-409-挫折し続けた運動を習慣化できたのは毎日やったから__draft_essay.html</id>
  <updated>2025-06-30T05:00:03+09:00</updated>
</entry>
<entry>
  <title>KDOC 410: 物事に対する情熱は行動の後に生まれる</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org329709d" class="outline-2">
 <h2 id="org329709d"> <a href="#org329709d">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org329709d">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-29 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgbb377db" class="outline-2">
 <h2 id="orgbb377db"> <a href="#orgbb377db">概要</a></h2>
 <div class="outline-text-2" id="text-orgbb377db">
 <p>
大人や社会は「好きなことを仕事にしろ」と言った。しかし、「好きなこと」をどうやって見つけるのかには口をつぐんだ。本当は知らないと自白する代わりに、「色んなことをしてそれを探せ」と言った。
</p>

 <p>
受け取ったメッセージを思い返してみると、こういうことだ。
</p>

 <ul class="org-ul"> <li>自分が好きなものは広い世界のどこかに存在している</li>
 <li>いろんな体験をすれば発見できる。だからバイトしろ。海外に行け。勉強しろ。スポーツしろ</li>
 <li>ないならもっと探せ。でも時間制限があるから、22歳までに見つけろ</li>
 <li>好きなものかはやってみれば直感や感情で判定できる</li>
 <li>エゴや憧れも好きのうちだ。実際に体験してなくてもそれは好きに分類できる</li>
 <li>本当に好きならたくさん努力できるだろう。努力できないなら好きとはいえない</li>
</ul> <p>
「砂漠のどこかにダイヤが転がっているからそれを探せ」と言っているように聞こえた。このモデルの問題点は、ダイヤはどこにも転がっていないという点だ。自分探しに成功した人間が存在しないように、好きなことは未知の場所を探して見つけられるものではない。
</p>

 <hr></hr> <hr></hr> <p>
「物事に対する情熱はやり続けた後に生まれる」という考え方もある。
</p>

 <p>
行動が先にあって好きになっていくということだ。ダイヤを探すのではなく、手に持っている石を磨き続ければダイヤになる。現時点で情熱がないとしたらそれはまだ発見できてないということではなく、何も続けていないということだ。何でもいいからやり始めればいい。重要なのは  <b>「選ぶこと」</b> ではなく  <b>「磨き始めること」</b> だ。
</p>

 <p>
ありもしないものを探せというアドバイスより、何でもいいから続けてみろ、というアドバイスのほうが建設的に見える。
</p>
</div>
</div>
 <div id="outline-container-org0bfeee8" class="outline-2">
 <h2 id="org0bfeee8"> <a href="#org0bfeee8">関連</a></h2>
 <div class="outline-text-2" id="text-org0bfeee8">
 <ul class="org-ul"> <li> <a href="20221027T235104--kdoc-3-『ない仕事の作り方』__book.html#ID-20221027T235104">KDOC 3: 『ない仕事の作り方』</a>では、好きだから集めるのではなく、大量に集めるから好きになるのだ、と主張する</li>
 <li> <a href="20250611T180912--kdoc-385-『続ける思考』__draft_book.html#ID-20250611T180912">KDOC 385: 『続ける思考』</a>では、意味など考えず時間をかけた結果として好きになる、と主張する</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250629T110721--kdoc-410-物事に対する情熱は行動の後に生まれる__draft_essay.html"/>
  <id>https://kijimad.github.io/roam/20250629T110721--kdoc-410-物事に対する情熱は行動の後に生まれる__draft_essay.html</id>
  <updated>2025-06-30T05:00:01+09:00</updated>
</entry>
<entry>
  <title>KDOC 403: 六義園を観察する</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org86c2130" class="outline-2">
 <h2 id="org86c2130"> <a href="#org86c2130">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org86c2130">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgb8c6555" class="outline-2">
 <h2 id="orgb8c6555"> <a href="#orgb8c6555">概要</a></h2>
 <div class="outline-text-2" id="text-orgb8c6555">
 <p>
六義園は、東京都文京区にある庭園である。博物館かどうかは微妙だが、来歴や解説の展示も割とあるので博物館観察シリーズに入れる。
</p>

 <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3905.019232201816!2d139.74315321198782!3d35.733100472456165!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x60188dbdf73e4461%3A0x7648774313f66fe5!2sRikugien%20Gardens!5e1!3m2!1sen!2sjp!4v1750636306703!5m2!1sen!2sjp" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
</div>
</div>
 <div id="outline-container-orgcd2b69b" class="outline-2">
 <h2 id="orgcd2b69b"> <a href="#orgcd2b69b">メモ</a></h2>
 <div class="outline-text-2" id="text-orgcd2b69b">
 <ul class="org-ul"> <li>公園ではなく、庭園である。代々木公園とは違う。広い庭園だが順路以外は入れない。座れる場所もそう多くない。ゆっくりするというより、庭園の設計どおりに観覧客が視点を移動させ風景を味わうものであるという意図を感じた。この点、博物館に近い
 <ul class="org-ul"> <li>人が留まらないので、静かである</li>
</ul></li>
 <li>太神楽(だいかぐら)という、大道芸的な伝統芸能があるのを知った。あじさいの美しい庭園の入り口部分で、和装の芸人2人が観覧席を前に技芸を披露していた。芸人なのでおひねりを要求するのだが、やはり場所によるプレミア感なのか、額面の入りがよかったように見えた。小銭を入れている人はいなかった(自分も札を出した)。これが仮に錦糸町駅前のパフォーマンスだったとすると、同じ額になってはいなかったように見える</li>
 <li>外国人の比率が多かったように見える。客層を反映しているのか、園内は英語が付記されたものが多かった。太神楽の芸人もブロークンな英語を交えてトークしていた</li>
 <li>園内のいたるところに解説板がある。場所の名前についての解説、意匠の解説などがある</li>
</ul></div>
</div>
 <div id="outline-container-orgec5a44b" class="outline-2">
 <h2 id="orgec5a44b"> <a href="#orgec5a44b">関連</a></h2>
 <div class="outline-text-2" id="text-orgec5a44b">
 <p>
なし。
</p>
</div>
</div>
 <div id="outline-container-orgdfd8707" class="outline-2">
 <h2 id="orgdfd8707"> <a href="#orgdfd8707">Backlinks</a></h2>
 <div class="outline-text-2" id="text-orgdfd8707">
 <ul class="org-ul"> <li> <a href="./20240908T180537--kdoc-238-他人の博物館を観察して参考にする__project.html">KDOC 238: 他人の博物館を観察して参考にする</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250621T205407--kdoc-403-六義園を観察する__draft_essay.html"/>
  <id>https://kijimad.github.io/roam/20250621T205407--kdoc-403-六義園を観察する__draft_essay.html</id>
  <updated>2025-06-30T05:00:00+09:00</updated>
</entry>
<entry>
  <title>KDOC 396: 優れた技術ブログは思考プロセスを含む</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org1c3cbd4" class="outline-2">
 <h2 id="org1c3cbd4"> <a href="#org1c3cbd4">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org1c3cbd4">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-25 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org063aab8" class="outline-2">
 <h2 id="org063aab8"> <a href="#org063aab8">概要</a></h2>
 <div class="outline-text-2" id="text-org063aab8">
 <p>
優れた技術ブログは、どう実装したかだけでなく、「なぜそうしたのか」「他にどんな選択肢を検討したのか」という思考プロセスを含む、という。
</p>
</div>
</div>
 <div id="outline-container-orgfb7dc31" class="outline-2">
 <h2 id="orgfb7dc31"> <a href="#orgfb7dc31">関連</a></h2>
 <div class="outline-text-2" id="text-orgfb7dc31">
 <ul class="org-ul"> <li> <a href="https://syu-m-5151.hatenablog.com/entry/2025/04/07/181150">エンジニアブログは技術的であるべきで登壇は衒学的であると思う理由 - じゃあ、おうちで学べる</a>から。</li>
</ul></div>
</div>
 <div id="outline-container-org221b360" class="outline-2">
 <h2 id="org221b360"> <a href="#org221b360">Backlinks</a></h2>
 <div class="outline-text-2" id="text-org221b360">
 <ul class="org-ul"> <li> <a href="./20250617T082740--kdoc-397-技術力とは、技術選択の理由を説明できることである__essay.html">KDOC 397: 技術力とは、技術選択の理由を説明できることである</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250616T220141--kdoc-396-優れた技術ブログは思考プロセスを含む__essay.html"/>
  <id>https://kijimad.github.io/roam/20250616T220141--kdoc-396-優れた技術ブログは思考プロセスを含む__essay.html</id>
  <updated>2025-06-30T05:00:00+09:00</updated>
</entry>
<entry>
  <title>KDOC 394: manのシステムコールセクションはインストールされてないことがある</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org9942a3a" class="outline-2">
 <h2 id="org9942a3a"> <a href="#org9942a3a">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org9942a3a">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-14 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-24 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgb059133" class="outline-2">
 <h2 id="orgb059133"> <a href="#orgb059133">概要</a></h2>
 <div class="outline-text-2" id="text-orgb059133">
 <p>
Linux Mint 22.1で、manで検索したときにシステムコールのセクションが見つからないことに気づいた。ディストリビュージョンによっては、省略されていることがあるという。
</p>

 <p>
インストールする。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>manpages-devをインストールする</label> <pre class="src src-shell">sudo apt update
sudo apt install manpages-dev
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-shell">man 2 fork | head -n10
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">fork(2)                       System Calls Manual                      fork(2)

NAME
       fork - create a child process

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <unistd.h>
</pre>
</div>
</div>
</div>
 <div id="outline-container-org1f30ecc" class="outline-2">
 <h2 id="org1f30ecc"> <a href="#org1f30ecc">関連</a></h2>
 <div class="outline-text-2" id="text-org1f30ecc">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T125259--kdoc-394-manのシステムコールセクションはインストールされてないことがある__wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T125259--kdoc-394-manのシステムコールセクションはインストールされてないことがある__wiki.html</id>
  <updated>2025-06-30T05:00:00+09:00</updated>
</entry>
<entry>
  <title>KDOC 391: 1対1のテーブルを維持する</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org8017c42" class="outline-2">
 <h2 id="org8017c42"> <a href="#org8017c42">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org8017c42">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-19 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-24 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org034c48f" class="outline-2">
 <h2 id="org034c48f"> <a href="#org034c48f">概要</a></h2>
 <div class="outline-text-2" id="text-org034c48f">
 <p>
親テーブルと子テーブルのレコードが1対1の対応であることを保ちたい場面がある。親だけ、あるいは子だけが消された状態はデータ不整合である。防ぎたい。
</p>

 <p>
たとえばこのような、必ず「ユーザ」は「個人ユーザ」か「会社ユーザ」である、ようなケース。
</p>

 <p>
users。親。
</p>

 <table> <colgroup> <col class="org-left"></col></colgroup> <thead> <tr> <th scope="col" class="org-left">フィールド</th>
</tr></thead> <tbody> <tr> <td class="org-left">id</td>
</tr></tbody></table> <hr></hr> <hr></hr> <p>
user_individuals。子。
</p>

 <table> <colgroup> <col class="org-left"></col></colgroup> <thead> <tr> <th scope="col" class="org-left">フィールド</th>
</tr></thead> <tbody> <tr> <td class="org-left">id</td>
</tr> <tr> <td class="org-left">user_id</td>
</tr></tbody></table> <hr></hr> <hr></hr> <p>
user_companies。子。
</p>

 <table> <colgroup> <col class="org-left"></col></colgroup> <thead> <tr> <th scope="col" class="org-left">フィールド</th>
</tr></thead> <tbody> <tr> <td class="org-left">id</td>
</tr> <tr> <td class="org-left">user_id</td>
</tr></tbody></table> <p>
データベース制約によって、親が消されたら子を削除する、は簡単にできる(DELETE CASCADE)。いっぽう、親子が1対1で子だけの削除を禁止する、というのをデータベースのレベルでは表現できないように見える。
</p>

 <p>
この場合、アプリケーションでガードする、方法を考えた。
</p>

 <ul class="org-ul"> <li>消すときは親テーブルを消し、親削除による関連削除によって子を削除するルールにする</li>
 <li>ORMのフックで、子テーブルの直接削除は禁止する</li>
 <li>アプリケーションに整合チェックを入れて確認する</li>
</ul> <p>
ベストではない。仕様がわかりにくいのと、事故は起きうるのが問題に見える。
</p>
</div>
</div>
 <div id="outline-container-org163b274" class="outline-2">
 <h2 id="org163b274"> <a href="#org163b274">関連</a></h2>
 <div class="outline-text-2" id="text-org163b274">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T012819--kdoc-391-1対1のテーブルを維持する__wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T012819--kdoc-391-1対1のテーブルを維持する__wiki.html</id>
  <updated>2025-06-30T04:59:41+09:00</updated>
</entry>
<entry>
  <title>KDOC 405: IPアドレスは論理アドレスで、MACアドレスは物理アドレスである</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgda01244" class="outline-2">
 <h2 id="orgda01244"> <a href="#orgda01244">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgda01244">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-24 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org95088e4" class="outline-2">
 <h2 id="org95088e4"> <a href="#org95088e4">概要</a></h2>
 <div class="outline-text-2" id="text-org95088e4">
 <p>
IPアドレスは論理アドレスであり、MACアドレスは物理アドレスである(位置569)。
</p>

 <p>
物理的な実態に紐付けられた概念の上に、抽象された論理的な層が構成される。メモリなど、コンピュータではよくみるパターン。
</p>
</div>
</div>
 <div id="outline-container-orgc22c3a6" class="outline-2">
 <h2 id="orgc22c3a6"> <a href="#orgc22c3a6">関連</a></h2>
 <div class="outline-text-2" id="text-orgc22c3a6">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250624T002111--kdoc-405-ipアドレスは論理アドレスで、macアドレスは物理アドレスである__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250624T002111--kdoc-405-ipアドレスは論理アドレスで、macアドレスは物理アドレスである__draft_book.html</id>
  <updated>2025-06-30T04:59:37+09:00</updated>
</entry>
<entry>
  <title>KDOC 399: 『PostgreSQL 17.0』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org1a9ca4a" class="outline-2">
 <h2 id="org1a9ca4a"> <a href="#org1a9ca4a">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org1a9ca4a">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org3cb8d72" class="outline-2">
 <h2 id="org3cb8d72"> <a href="#org3cb8d72">概要</a></h2>
 <div class="outline-text-2" id="text-org3cb8d72">
 <p>
 <a href="https://pgsql-jp.github.io/jpug-doc/17.0/postgresql-17.0-A4.pdf">PostgreSQL 17.0文書</a>は、PostgreSQLのマニュアル。
</p>
</div>
</div>
 <div id="outline-container-orge8b4250" class="outline-2">
 <h2 id="orge8b4250"> <a href="#orge8b4250">メモ</a></h2>
 <div class="outline-text-2" id="text-orge8b4250">
 <ul class="org-ul"> <li>PostgreSQLはクライアント/サーバモデルを採用している。クライアントとサーバのホストが異なる場合、TCP/IPネットワーク経由で通信する(p4)
 <ul class="org-ul"> <li>(感想)ホストが同じ場合はソケット接続という理解で合っているか</li>
</ul></li>
 <li>サーバは接続ごとに新しいプロセスを開始(fork)する。これによってクライアントからの複数同時接続を取り扱える(p4)</li>
 <li>左外部結合というのは、結合演算子の左側に指定したテーブルの各行が最低でも1度出力されるから。いっぽう右側では左側のテーブルの行に一致するもののみが出力される(p14)</li>
 <li>SQLのWHEREとHAVINGの間の相互作用を理解するのが重要である。WHEREとHAVINGの基本的な違いは、WHEREがグループや集約を演算する前に入力行を選択するのに対し、HAVINGはグループと集約を演算したあとにグループ化された行を選択する。したがって、WHERE句は集約関数を持てない。集約を使ってどの行をその集約の入力にすることになるから(p17)</li>
 <li>複数のトランザクションが同時に動作しているとき、それぞれのトランザクションは別のトランザクションが行っている未完了の変更を見ることができてはならない。作業中のトランザクションによる更新は、ほかのトランザクションからはトランザクションが完結するまで不可視である。そのトランザクションが完結した時点でトランザクションで行った更新のすべてが見えるようになる(p21)</li>
 <li>PostgreSQLはすべてのSQL文をトランザクション内で実行するようになっている。BEGINを発行しない場合、それぞれの文は暗黙的にBEGINが付いているとみなし、成功すればCOMMITで囲われているものとする(p21)</li>
 <li>セーブポイントはトランザクションを構成するある部分を選択的に破棄するいっぽう、破棄されない残りの部分をコミットする(p22)</li>
 <li>システムは  <code>NAMEDATALEN</code> - 1より長い識別子を使わない。より長い名前を書くと短く切られる。デフォルトでは  <code>NAMEDATALEN</code> は64バイトなので、識別子は最長で63バイト。定数は変えて増やせる(p40)</li>
 <li>任意の文字の連なりをダブルクォートで囲ったものを区切り識別子 or 引用符付き識別子という(p40)
 <ul class="org-ul"> <li>(感想)なぜプログラミング言語のように文字列リテラルといわないのか</li>
 <li>(感想)名前の列あるいはテーブルを問い合わせるために使うから。データそのものでなく、識別子として使うからこのような名前になっている</li>
</ul></li>
 <li>引用符がつかない名前は常に小文字に解釈される。識別子を引用符で囲むことで大文字と小文字が区別される(p40)</li>
 <li>SQLにおける文字列定数は、単一引用符で括られた任意の文字の並びである(p41)
 <ul class="org-ul"> <li>(感想)なぜ文字列定数というのだろう</li>
</ul></li>
 <li>対象の文字列内に単一引用符が多くあると、それらをすべて二重にしなければならないので理解しづらくなる。そのような場合は単一引用符をエスケープすることなく使用できるドル引用符付けが便利。ただし標準SQLで定義されていない(p44)</li>
 <li>定数は文脈に基づいて自動的にもっとも適切な型に変換される(p46)</li>
 <li>(感想)集約とか関数とかはあまり使ったことがないしあまり使うケースもないように見えるので、細かい話があまり頭に入ってこない</li>
 <li>SQLではテーブル内の行の順序は保証されない。テーブルを読み込むと、明示的に並び替えを要求しない限り行は不特定な順番で並び替えられる(p69)</li>
 <li>リレーショナルデータベース理論では、すべてのテーブルに主キーが1つ必要とされている。PostgrSQLは強制しないが、これに従うことが推奨される(p80)</li>
 <li>関連削除のデフォルト設定はNO ACTIONである。NO ACTIONでは検査をトランザクション中で後回しにできる。RESTRICTは後回しにできない(p83)</li>
</ul></div>
</div>
 <div id="outline-container-org361ba34" class="outline-2">
 <h2 id="org361ba34"> <a href="#org361ba34">関連</a></h2>
 <div class="outline-text-2" id="text-org361ba34">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250618T233353--kdoc-399-『postgresql-170』__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250618T233353--kdoc-399-『postgresql-170』__draft_book.html</id>
  <updated>2025-06-30T04:59:37+09:00</updated>
</entry>
<entry>
  <title>KDOC 393: ビックバンデプロイのやり方を考える</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgb6d8564" class="outline-2">
 <h2 id="orgb6d8564"> <a href="#orgb6d8564">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgb6d8564">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-25 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org79f455f" class="outline-2">
 <h2 id="org79f455f"> <a href="#org79f455f">概要</a></h2>
 <div class="outline-text-2" id="text-org79f455f">
 <p>
フルタイムのプログラマーとして働き始めて1年目のときに、「データ変更とコード変更を同時にやってはいけない」を教わった。データ変更 → デプロイ → コード変更 → デプロイというように片方ずつ変更せよ、片方ずつデプロイできるように変更せよ、というようなことだ。データ変更はコード変更に比べて、カラム変更、インデックス追加、レコード変更といった操作に長時間費やす可能性がある。その間はデータとコードが一致しなくなる。リクエストが来た場合、動かない可能性がある。最悪の場合、不整合レコードになる。
</p>

 <p>
教わった内容は単なる無意識の習慣になり、意識することはなくなっていた。あるとき、誇張した形でそれが現れた。デプロイが3ヶ月ごとにしかできないような <sup> <a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup>Webのシステムにおいては、常にデプロイ可能なシステムよりシビアに、データとコードについて考える必要があった。ビックバンデプロイをそもそも避けたほうがいいのは間違いない。しかし避けられないシステムだって世の中には存在している。
</p>

 <p>
問題なくデプロイをするには、2つの方法があるように見える。
</p>

 <ul class="org-ul"> <li>ダウンタイムを受け入れて、バックエンドサーバを止めるか遮断する。ブロックしないと、データ変更中にリクエストが来て不整合になってしまう。フロントエンドを止めるだけでは不十分である。リロードしてない人はアクセスを飛ばせてしまう
 <ul class="org-ul"> <li>❌ ダウンタイムの発生</li>
 <li>❌ 停止させるための方法確立が必要</li>
 <li>❌ 何か起こった場合に原因が切り分けにくい</li>
 <li>⭕ 手順が単純、少ない</li>
</ul></li>
 <li>チェックポイントとなるコミットで、数回繰り返してデプロイする
 <ul class="org-ul"> <li>⭕ ダウンタイムが発生しない</li>
 <li>❌ 数回デプロイする分時間がかかる</li>
 <li>⭕ 何か起こった時点で把握しやすく、原因を切り分けやすい</li>
 <li>❌ 手順が複雑、多い</li>
</ul></li>
</ul> <p>
ダウンタイムの許容ポリシーにもよるが、規模が大きくなるほど段階的に進めてデプロイしたほうがよさそうに見える。
</p>
</div>
</div>
 <div id="outline-container-org7ce8e0a" class="outline-2">
 <h2 id="org7ce8e0a"> <a href="#org7ce8e0a">関連</a></h2>
 <div class="outline-text-2" id="text-org7ce8e0a">
 <p>
なし。
</p>
</div>
</div>
 <div id="footnotes">
 <h2 class="footnotes">Footnotes: </h2>
 <div id="text-footnotes">

 <div class="footdef"> <sup> <a id="fn.1" class="footnum" href="#fnr.1" role="doc-backlink">1</a></sup> <div class="footpara" role="doc-footnote"> <p class="footpara">
令和でもそういうことがある。
</p></div></div>


</div>
</div></div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T104010--kdoc-393-ビックバンデプロイのやり方を考える__wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T104010--kdoc-393-ビックバンデプロイのやり方を考える__wiki.html</id>
  <updated>2025-06-30T04:59:31+09:00</updated>
</entry>
<entry>
  <title>KDOC 398: GORMフックはレシーバーがnilになる可能性がある</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org4be6fc7" class="outline-2">
 <h2 id="org4be6fc7"> <a href="#org4be6fc7">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org4be6fc7">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-19 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-25 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org301e2ac" class="outline-2">
 <h2 id="org301e2ac"> <a href="#org301e2ac">概要</a></h2>
 <div class="outline-text-2" id="text-org301e2ac">
 <p>
GORMでは <a href="https://gorm.io/ja_JP/docs/hooks.html">Hooks</a>を使用できる。これによってCRUD操作の前後の処理を挿入できる。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>Userを削除する前に実行される</label> <pre class="src src-go">func (u *User) BeforeDelete(tx *gorm.DB) (error) {
        return nil
}
</pre>
</div>

 <p>
もし  <code>Delete()</code> にスライスのUserを渡し一括で削除しようとすると、フックは1度だけ実行され、レシーバはnilになる。
</p>

 <p>
直感的ではないが、こうなっていなければ1件1件削除するたびにモデル情報を取得する必要があり、パフォーマンスの問題になるだろう。
</p>
</div>
</div>
 <div id="outline-container-orgb1e976a" class="outline-2">
 <h2 id="orgb1e976a"> <a href="#orgb1e976a">関連</a></h2>
 <div class="outline-text-2" id="text-orgb1e976a">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250618T232434--kdoc-398-gormフックはレシーバーがnilになる可能性がある__wiki.html"/>
  <id>https://kijimad.github.io/roam/20250618T232434--kdoc-398-gormフックはレシーバーがnilになる可能性がある__wiki.html</id>
  <updated>2025-06-30T04:59:29+09:00</updated>
</entry>
<entry>
  <title>KDOC 408: ラクに続けるコツは週7日やることである</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgd79fcf0" class="outline-2">
 <h2 id="orgd79fcf0"> <a href="#orgd79fcf0">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgd79fcf0">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-24 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org8fe1ab1" class="outline-2">
 <h2 id="org8fe1ab1"> <a href="#org8fe1ab1">概要</a></h2>
 <div class="outline-text-2" id="text-org8fe1ab1">
 <p>
ラクに続けるコツは、週7日やることである(位置372)。
</p>

 <p>
今日はいいか、となる余地があるとすぐやらなくなるのを繰り返してきた。毎朝5分、毎日やることで続けられる。そして、取り組み始めれば意外とノッてきて長くできるものである。
</p>
</div>
</div>
 <div id="outline-container-org79e5073" class="outline-2">
 <h2 id="org79e5073"> <a href="#org79e5073">関連</a></h2>
 <div class="outline-text-2" id="text-org79e5073">
 <ul class="org-ul"> <li> <a href="20250611T180912--kdoc-385-『続ける思考』__draft_book.html#ID-20250611T180912">KDOC 385: 『続ける思考』</a>から</li>
</ul></div>
</div>
 <div id="outline-container-org35bd2dc" class="outline-2">
 <h2 id="org35bd2dc"> <a href="#org35bd2dc">Backlinks</a></h2>
 <div class="outline-text-2" id="text-org35bd2dc">
 <ul class="org-ul"> <li> <a href="./20250626T085406--kdoc-409-挫折し続けた運動を習慣化できたのは毎日やったから__draft_essay.html">KDOC 409: 挫折し続けた運動を習慣化できたのは毎日やったから</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250624T222943--kdoc-408-ラクに続けるコツは週7日やることである__draft_essay.html"/>
  <id>https://kijimad.github.io/roam/20250624T222943--kdoc-408-ラクに続けるコツは週7日やることである__draft_essay.html</id>
  <updated>2025-06-30T04:59:27+09:00</updated>
</entry>
<entry>
  <title>KDOC 406: TCP/IPでは1つのIPアドレスでネットワークとノードをまとめて表す</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org95558b4" class="outline-2">
 <h2 id="org95558b4"> <a href="#org95558b4">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org95558b4">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgc60bd85" class="outline-2">
 <h2 id="orgc60bd85"> <a href="#orgc60bd85">概要</a></h2>
 <div class="outline-text-2" id="text-orgc60bd85">
 <p>
TCP/IPの特徴の1つに、1つのIPアドレスでネットワークとノードをまとめて表すという点がある(位置400)。
</p>
</div>
</div>
 <div id="outline-container-org6750dbb" class="outline-2">
 <h2 id="org6750dbb"> <a href="#org6750dbb">関連</a></h2>
 <div class="outline-text-2" id="text-org6750dbb">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250624T085212--kdoc-406-tcpipでは1つのipアドレスでネットワークとノードをまとめて表す__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250624T085212--kdoc-406-tcpipでは1つのipアドレスでネットワークとノードをまとめて表す__draft_book.html</id>
  <updated>2025-06-30T04:59:27+09:00</updated>
</entry>
<entry>
  <title>KDOC 404: ネットワークは階層化によってネットワークやアプリケーションの自由度を高くしている</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orga80cac7" class="outline-2">
 <h2 id="orga80cac7"> <a href="#orga80cac7">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orga80cac7">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org2eb497d" class="outline-2">
 <h2 id="org2eb497d"> <a href="#org2eb497d">概要</a></h2>
 <div class="outline-text-2" id="text-org2eb497d">
 <p>
ネットワークシステムは何段階にも機能を分け、組み合わせた形で構築されている。実際のネットワーク方式(Wi-Fi、有線…)、伝送の制御、アプリケーション…。このようにすることでネットワーク方式やアプリケーションの自由度が高くなる(位置206)
</p>
</div>
</div>
 <div id="outline-container-org765e20b" class="outline-2">
 <h2 id="org765e20b"> <a href="#org765e20b">関連</a></h2>
 <div class="outline-text-2" id="text-org765e20b">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250622T091856--kdoc-404-ネットワークは階層化によってネットワークやアプリケーションの自由度を高くしている__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250622T091856--kdoc-404-ネットワークは階層化によってネットワークやアプリケーションの自由度を高くしている__draft_book.html</id>
  <updated>2025-06-30T04:59:27+09:00</updated>
</entry>
<entry>
  <title>KDOC 397: 技術力とは、技術選択の理由を説明できることである</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org1af0930" class="outline-2">
 <h2 id="org1af0930"> <a href="#org1af0930">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org1af0930">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org513b180" class="outline-2">
 <h2 id="org513b180"> <a href="#org513b180">概要</a></h2>
 <div class="outline-text-2" id="text-org513b180">
 <p>
技術力とは、技術選択の理由を説明できること、長期的な影響を予測できること、そしてプロジェクト全体における個々の実装の位置づけを理解できることである、という。
</p>

 <p>
考えたこと。
</p>

 <p>
選択は誰にでもできる。どの選択肢の中からなぜ選んだかを説明できるのが技術力である。それをやるには、問題の前提条件の理解や、どの文脈で有用かなどの本質的な理解が必要になるのだ。
</p>
</div>
</div>
 <div id="outline-container-org558d9fb" class="outline-2">
 <h2 id="org558d9fb"> <a href="#org558d9fb">関連</a></h2>
 <div class="outline-text-2" id="text-org558d9fb">
 <ul class="org-ul"> <li> <a href="https://syu-m-5151.hatenablog.com/entry/2025/02/04/203205">滅びゆく「なぜ？」と「どうして？」の学びをどう受け止めればよいのか？新人エンジニアの指導で感じる生成AI時代の指導の難しさ - じゃあ、おうちで学べる</a>からのメモ</li>
 <li> <a href="20250616T220141--kdoc-396-優れた技術ブログは思考プロセスを含む__essay.html#ID-20250616T220141">KDOC 396: 優れた技術ブログは思考プロセスを含む</a>。同じブログの作者の言葉。「優れた技術」についての一貫した見解</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250617T082740--kdoc-397-技術力とは、技術選択の理由を説明できることである__essay.html"/>
  <id>https://kijimad.github.io/roam/20250617T082740--kdoc-397-技術力とは、技術選択の理由を説明できることである__essay.html</id>
  <updated>2025-06-30T04:59:27+09:00</updated>
</entry>
<entry>
  <title>KDOC 395: IPの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすることである</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org6179af0" class="outline-2">
 <h2 id="org6179af0"> <a href="#org6179af0">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org6179af0">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-25 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org6402de2" class="outline-2">
 <h2 id="org6402de2"> <a href="#org6402de2">概要</a></h2>
 <div class="outline-text-2" id="text-org6402de2">
 <p>
IPの役割は複雑に接続されたインターネット(ネットワークが相互に接続されたもの)において、接続されている個々の機器が任意の相手にデータを送れるようにすることである(位置119)。
</p>

 <p>
別のネットワークを超えた機器に送れる、というところがポイントに見える。
</p>
</div>
</div>
 <div id="outline-container-org53e9a6e" class="outline-2">
 <h2 id="org53e9a6e"> <a href="#org53e9a6e">関連</a></h2>
 <div class="outline-text-2" id="text-org53e9a6e">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250616T202053--kdoc-395-ipの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすることである__book.html"/>
  <id>https://kijimad.github.io/roam/20250616T202053--kdoc-395-ipの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすることである__book.html</id>
  <updated>2025-06-30T04:59:18+09:00</updated>
</entry>
<entry>
  <title>KDOC 400: 役割や責任を明確にすることでチーム内のコミュニケーションが円滑になる</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orga9385d7" class="outline-2">
 <h2 id="orga9385d7"> <a href="#orga9385d7">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orga9385d7">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-21 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-25 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org7591227" class="outline-2">
 <h2 id="org7591227"> <a href="#org7591227">概要</a></h2>
 <div class="outline-text-2" id="text-org7591227">
 <p>
役割や責任を明確にすることでチーム内のコミュニケーションが円滑になる、という。プロジェクトのポジションのフレームワークとして、RACIチャート、DACIモデルというものがある。プロジェクトを始めたり人員が変化するタイミングで確認するとよい。
</p>
</div>
</div>
 <div id="outline-container-org963a679" class="outline-2">
 <h2 id="org963a679"> <a href="#org963a679">関連</a></h2>
 <div class="outline-text-2" id="text-org963a679">
 <ul class="org-ul"> <li> <a href="https://soudai.hatenablog.com/entry/2024/11/23/132843">仕事を任せるコツとやり方 - そーだいなるらくがき帳</a>から。自分の経験と照らし合わせて、言語化されたように感じた</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250620T082616--kdoc-400-役割や責任を明確にすることでチーム内のコミュニケーションが円滑になる__essay.html"/>
  <id>https://kijimad.github.io/roam/20250620T082616--kdoc-400-役割や責任を明確にすることでチーム内のコミュニケーションが円滑になる__essay.html</id>
  <updated>2025-06-30T04:59:17+09:00</updated>
</entry>
<entry>
  <title>KDOC 392: 絞ってから関連レコードを取得してパフォーマンスを改善する</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgfddd7de" class="outline-2">
 <h2 id="orgfddd7de"> <a href="#orgfddd7de">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgfddd7de">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-24 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-26 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org9ff1be6" class="outline-2">
 <h2 id="org9ff1be6"> <a href="#org9ff1be6">概要</a></h2>
 <div class="outline-text-2" id="text-org9ff1be6">
 <p>
大量にJOIN先があるようなレコードを取得する場合、先にWHEREなどで件数を減らしてからJOINするとよい。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>先にWHEREして件数を絞り込み、結果に対してJOINする</label> <pre class="src src-sql"> <span class="org-keyword">SELECT</span> *
 <span class="org-keyword">FROM</span> orders o
 <span class="org-keyword">JOIN</span> (
   <span class="org-keyword">SELECT</span> id
   <span class="org-keyword">FROM</span> users
   <span class="org-keyword">WHERE</span> region =  <span class="org-string">'東京'</span>
) c  <span class="org-keyword">ON</span> o.customer_id = u.id;
</pre>
</div>

 <p>
この方法は件数を減らせる条件として使えるフィールドが、少ないテーブルに集まっている必要がある。条件判定用の値は1つのテーブルに集まり、表示用の値は複数のテーブルから集めてくる、というようなケースに使える。
</p>

 <p>
ORMはよく  <code>Preload</code> として機能を用意している。関連データを別クエリで取得する。返すデータとして必要な関連データだけを得やすい。
</p>

 <p>
逆に、検索条件に関連データを使いたい場合はよく  <code>Joins</code> を用意している。同じクエリ内でJOINするので、条件指定に関連テーブルが使える。検索して件数を絞る前に JOINするので、必要な処理は増える可能性がある。
</p>
</div>
</div>
 <div id="outline-container-org3a16f92" class="outline-2">
 <h2 id="org3a16f92"> <a href="#org3a16f92">関連</a></h2>
 <div class="outline-text-2" id="text-org3a16f92">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T103239--kdoc-392-絞ってから関連レコードを取得してパフォーマンスを改善する__wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T103239--kdoc-392-絞ってから関連レコードを取得してパフォーマンスを改善する__wiki.html</id>
  <updated>2025-06-30T04:59:16+09:00</updated>
</entry>
</feed>
