<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><author><name>Kijima Daigo</name></author>
<title>Insomnia</title>
<generator>Emacs webfeeder.el</generator>
<link href="https://kijimad.github.io/roam"/>
<link href="https://kijimad.github.io/roam/atom.xml" rel="self"/>
<id>https://kijimad.github.io/roam/atom.xml</id>
<updated>2025-06-16T22:04:44+09:00</updated>
<entry>
  <title>KDOC 386: IPはデータを機器に届けられるが、目的のプログラムを示せない</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org526fbce" class="outline-2">
 <h2 id="org526fbce"> <a href="#org526fbce">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org526fbce">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org07b4913" class="outline-2">
 <h2 id="org07b4913"> <a href="#org07b4913">概要</a></h2>
 <div class="outline-text-2" id="text-org07b4913">
 <p>
IPはデータを別のネットワークの機器に届けられるが、目的のプログラムを示せない。機器間の伝送までしかできない。この識別を行いプログラム間でのデータ転送を実現するのが伝送プロトコルのUDPとTCPの役割である(位置151)。
</p>
</div>
</div>
 <div id="outline-container-org094025e" class="outline-2">
 <h2 id="org094025e"> <a href="#org094025e">関連</a></h2>
 <div class="outline-text-2" id="text-org094025e">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250611T184309--kdoc-386-ipはデータを機器に届けられるが、目的のプログラムを示せない__book.html"/>
  <id>https://kijimad.github.io/roam/20250611T184309--kdoc-386-ipはデータを機器に届けられるが、目的のプログラムを示せない__book.html</id>
  <updated>2025-06-17T07:04:42+09:00</updated>
</entry>
<entry>
  <title>KDOC 389: GORM + MySQLでカラムの順番が変動するのはなぜか?</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orga9f2ba9" class="outline-2">
 <h2 id="orga9f2ba9"> <a href="#orga9f2ba9">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orga9f2ba9">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org60c7149" class="outline-2">
 <h2 id="org60c7149"> <a href="#org60c7149">概要</a></h2>
 <div class="outline-text-2" id="text-org60c7149">
 <p>
MySQL + gormでマイグレーションすると、カラムの順序が毎回微妙に変動してしまう。そうなると <a href="https://github.com/k1LoW/tbls">tbls</a>でDBスキーマを出力すると毎回差分が出て、自動チェックができなくて困る。
</p>

 <p>
Postgresでは発生しない。原因はDBなのか、ORMなのか。なぜなのだろうか。
</p>
</div>
</div>
 <div id="outline-container-org7600721" class="outline-2">
 <h2 id="org7600721"> <a href="#org7600721">関連</a></h2>
 <div class="outline-text-2" id="text-org7600721">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250612T234932--kdoc-389-gorm-mysqlでカラムの順番が変動するのはなぜか__permanent.html"/>
  <id>https://kijimad.github.io/roam/20250612T234932--kdoc-389-gorm-mysqlでカラムの順番が変動するのはなぜか__permanent.html</id>
  <updated>2025-06-17T07:04:40+09:00</updated>
</entry>
<entry>
  <title>KDOC 384: 『syntactic support for error handling』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org99c3914" class="outline-2">
 <h2 id="org99c3914"> <a href="#org99c3914">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org99c3914">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-11 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org255d901" class="outline-2">
 <h2 id="org255d901"> <a href="#org255d901">概要</a></h2>
 <div class="outline-text-2" id="text-org255d901">
 <p>
Go公式ブログの <a href="https://go.dev/blog/error-syntax">[ On | No ] syntactic support for error handling</a>を読んだメモ。
</p>
</div>
</div>
 <div id="outline-container-org0895e42" class="outline-2">
 <h2 id="org0895e42"> <a href="#org0895e42">メモ</a></h2>
 <div class="outline-text-2" id="text-org0895e42">
 <ul class="org-ul"> <li>エラーハンドリングの書き方  <code>if err != nil</code> に関しては、今までたくさんのプロポーザルが送られてきた</li>
 <li>多くの場合は個人の好みに基づいた調整の提案が溢れかえった</li>
 <li>エラーのシンタックスと、エラーハンドリングは別の問題である</li>
 <li>定型文を覆い隠すと、明快さが失われる</li>
 <li>ワンラインの、追加文法は受け入れない。1つのことは1つの書き方に反するから
 <ul class="org-ul"> <li> <code>:=</code> の、再宣言する機能は例外である。エラーハンドリングのため追加された機能</li>
</ul></li>
 <li> <code>Cmp.Or</code> を使って複数のエラーを一気にチェックできる。値であるから、自由度がある</li>
 <li>当面の間、Goチームはエラーハンドリングに関するシンタックスの問題を解決しようとするのをやめる。変更提案を却下する</li>
</ul></div>
</div>
 <div id="outline-container-org7a9b698" class="outline-2">
 <h2 id="org7a9b698"> <a href="#org7a9b698">関連</a></h2>
 <div class="outline-text-2" id="text-org7a9b698">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250610T175039--kdoc-384-『syntactic-support-for-error-handling』__book.html"/>
  <id>https://kijimad.github.io/roam/20250610T175039--kdoc-384-『syntactic-support-for-error-handling』__book.html</id>
  <updated>2025-06-17T07:04:38+09:00</updated>
</entry>
<entry>
  <title>KDOC 392: 絞ってからJOINすることでパフォーマンスを改善する</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org10dd45e" class="outline-2">
 <h2 id="org10dd45e"> <a href="#org10dd45e">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org10dd45e">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgfa66fef" class="outline-2">
 <h2 id="orgfa66fef"> <a href="#orgfa66fef">概要</a></h2>
 <div class="outline-text-2" id="text-orgfa66fef">
</div>
</div>
 <div id="outline-container-org7c0e7f7" class="outline-2">
 <h2 id="org7c0e7f7"> <a href="#org7c0e7f7">関連</a></h2>
 <div class="outline-text-2" id="text-org7c0e7f7">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T103239--kdoc-392-絞ってからjoinすることでパフォーマンスを改善する__draft_wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T103239--kdoc-392-絞ってからjoinすることでパフォーマンスを改善する__draft_wiki.html</id>
  <updated>2025-06-17T07:04:36+09:00</updated>
</entry>
<entry>
  <title>KDOC 387: イーサネットによる通信はMACアドレスを使う</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org914e580" class="outline-2">
 <h2 id="org914e580"> <a href="#org914e580">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org914e580">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-12 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgaa3891d" class="outline-2">
 <h2 id="orgaa3891d"> <a href="#orgaa3891d">概要</a></h2>
 <div class="outline-text-2" id="text-orgaa3891d">
 <p>
イーサネットによる通信は、MACアドレスを使い、各機器のインターフェース間で行われる。イーサネットの通信は1つのイーサネットネットワークの内部でしかできない(位置274)
</p>
</div>
</div>
 <div id="outline-container-org9eab8d9" class="outline-2">
 <h2 id="org9eab8d9"> <a href="#org9eab8d9">関連</a></h2>
 <div class="outline-text-2" id="text-org9eab8d9">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
</ul></div>
</div>
 <div id="outline-container-org352d68e" class="outline-2">
 <h2 id="org352d68e"> <a href="#org352d68e">Backlinks</a></h2>
 <div class="outline-text-2" id="text-org352d68e">
 <ul class="org-ul"> <li> <a href="./20250613T090351--kdoc-390-イーサネットや無線lanは1つのネットワーク内での通信を行える__draft_book.html">KDOC 390: イーサネットや無線LANは1つのネットワーク内での通信を行える</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250612T204735--kdoc-387-イーサネットによる通信はmacアドレスを使う__book.html"/>
  <id>https://kijimad.github.io/roam/20250612T204735--kdoc-387-イーサネットによる通信はmacアドレスを使う__book.html</id>
  <updated>2025-06-17T07:04:34+09:00</updated>
</entry>
<entry>
  <title>KDOC 376: 業務経験や企業ブランドの評価割合が高い理由</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org81fdae1" class="outline-2">
 <h2 id="org81fdae1"> <a href="#org81fdae1">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org81fdae1">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-05-06 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-05-18 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org73d0111" class="outline-2">
 <h2 id="org73d0111"> <a href="#org73d0111">概要</a></h2>
 <div class="outline-text-2" id="text-org73d0111">
 <p>
(日本の)中途採用では、採用において類似した業務経験や、有名企業への所属が合否に貢献する割合が高い。面接はマイナス評価によって弾くシステムになっていることが多い。 <a href="20250505T214152--kdoc-375-面接官たちは自分たちの見立てや決断において、リスクを取りたがらない__book.html#ID-20250505T214152">KDOC 375: 面接官たちは自分たちの見立てや決断において、リスクを取りたがらない</a>ためである。他国でもエリート層の採用は同じ傾向があるという。
</p>
</div>
</div>
 <div id="outline-container-org61430f6" class="outline-2">
 <h2 id="org61430f6"> <a href="#org61430f6">関連</a></h2>
 <div class="outline-text-2" id="text-org61430f6">
 <ul class="org-ul"> <li> <a href="20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651">KDOC 370: 『人を選ぶ技術』</a>からメモした</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250505T214835--kdoc-376-業務経験や企業ブランドの評価割合が高い理由__permanent.html"/>
  <id>https://kijimad.github.io/roam/20250505T214835--kdoc-376-業務経験や企業ブランドの評価割合が高い理由__permanent.html</id>
  <updated>2025-06-17T07:04:12+09:00</updated>
</entry>
<entry>
  <title>KDOC 382: JavaScriptにトランスパイルするのはなぜか?</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgcb1b6c6" class="outline-2">
 <h2 id="orgcb1b6c6"> <a href="#orgcb1b6c6">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgcb1b6c6">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-11 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgcb9dd1f" class="outline-2">
 <h2 id="orgcb9dd1f"> <a href="#orgcb9dd1f">概要</a></h2>
 <div class="outline-text-2" id="text-orgcb9dd1f">
 <p>
TypeScriptにせよ、CoffeeScriptなど、JavaScriptにトランスパイルするプログラミング言語がある。ほかの言語では見ない特徴に見える。なぜだろうか。
</p>
</div>
</div>
 <div id="outline-container-org3f43715" class="outline-2">
 <h2 id="org3f43715"> <a href="#org3f43715">関連</a></h2>
 <div class="outline-text-2" id="text-org3f43715">
 <p>
なし。
</p>
</div>
</div>
 <div id="outline-container-org42a58cf" class="outline-2">
 <h2 id="org42a58cf"> <a href="#org42a58cf">Backlinks</a></h2>
 <div class="outline-text-2" id="text-org42a58cf">
 <ul class="org-ul"> <li> <a href="./20250603T215644--kdoc-383-javascriptはブラウザの組み込み言語でありランタイムの更新は難しい__permanent.html">KDOC 383: JavaScriptはブラウザの組み込み言語でありランタイムの更新は難しい</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250603T215521--kdoc-382-javascriptにトランスパイルするのはなぜか__permanent.html"/>
  <id>https://kijimad.github.io/roam/20250603T215521--kdoc-382-javascriptにトランスパイルするのはなぜか__permanent.html</id>
  <updated>2025-06-17T07:04:11+09:00</updated>
</entry>
<entry>
  <title>KDOC 379: 選択するとき考えること</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org210cc02" class="outline-2">
 <h2 id="org210cc02"> <a href="#org210cc02">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org210cc02">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org4652776" class="outline-2">
 <h2 id="org4652776"> <a href="#org4652776">概要</a></h2>
 <div class="outline-text-2" id="text-org4652776">
 <p>
選択するうえで考えること。どちらもIT投資家ポール・グレアムの何かのエッセイで言っていたことで、ずっとこうやって選ぶようにしている。
</p>

 <ol class="org-ol"> <li> <p>
好きなことをやる
</p>

 <p>
好きなことをやっているときが一番幸福で、能力を発揮できると考えている。好きにも程度があって、金を払ったりリスクを負っても追い求めるくらい好きなこと、を見つけてやり続けることが大切だと考えている。例えば昼はバイトをして夜演奏するミュージシャンは、好きの程度が非常に高いと考えている。
</p></li>

 <li> <p>
難しいことをやる
</p>

 <p>
難しいことを選択していれば、ほかの選択肢が閉ざされるのを後回しにできる。やりたいことに出会ったとき諦める可能性が少ない。なので、迷ったらとりあえず難しいほうを選択するのがよいだろうと考えている。
</p></li>
</ol></div>
</div>
 <div id="outline-container-org7063fdb" class="outline-2">
 <h2 id="org7063fdb"> <a href="#org7063fdb">関連</a></h2>
 <div class="outline-text-2" id="text-org7063fdb">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250518T092255--kdoc-379-選択するとき考えること__essay.html"/>
  <id>https://kijimad.github.io/roam/20250518T092255--kdoc-379-選択するとき考えること__essay.html</id>
  <updated>2025-06-17T07:04:11+09:00</updated>
</entry>
<entry>
  <title>KDOC 391: 1対1のテーブルを維持する</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org07bb7ce" class="outline-2">
 <h2 id="org07bb7ce"> <a href="#org07bb7ce">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org07bb7ce">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgd88db1a" class="outline-2">
 <h2 id="orgd88db1a"> <a href="#orgd88db1a">概要</a></h2>
 <div class="outline-text-2" id="text-orgd88db1a">
 <p>
親テーブルと子テーブルが1対1であることを保ちたい場面がある。親だけ、子だけが消されるとデータ不整合になったり浮いたデータになって有害である。
</p>
</div>
</div>
 <div id="outline-container-org5a32860" class="outline-2">
 <h2 id="org5a32860"> <a href="#org5a32860">関連</a></h2>
 <div class="outline-text-2" id="text-org5a32860">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T012819--kdoc-391-1対1のテーブルを維持する__draft_wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T012819--kdoc-391-1対1のテーブルを維持する__draft_wiki.html</id>
  <updated>2025-06-17T07:04:10+09:00</updated>
</entry>
<entry>
  <title>KDOC 388: 『仕事ですぐに使えるTypeScript』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orga6e65df" class="outline-2">
 <h2 id="orga6e65df"> <a href="#orga6e65df">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orga6e65df">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgea98e40" class="outline-2">
 <h2 id="orgea98e40"> <a href="#orgea98e40">概要</a></h2>
 <div class="outline-text-2" id="text-orgea98e40">
 <p>
 <a href="https://future-architect.github.io/typescript-guide/typescript-guide.pdf">仕事ですぐに使えるTypeScript</a>は、TypeScriptの入門本。
</p>

 <ul class="org-ul"> <li>76</li>
</ul></div>
</div>
 <div id="outline-container-org583eb34" class="outline-2">
 <h2 id="org583eb34"> <a href="#org583eb34">メモ</a></h2>
 <div class="outline-text-2" id="text-org583eb34">
 <ul class="org-ul"> <li>TypeScriptのソースコードはあくまでもJavaScriptに変換されてから実行される。TypeScriptのコンパイラが持つインターフェースやtypeなど固有の型情報はランタイムには存在しない。そのため「このオブジェクトがこのインターフェースを持つとき」という実行文はほかの言語のようにそのまま実行できない(p68)</li>
 <li>TypeScriptはそれを解決するために型ガードという機能が実装されている。実行時の文脈を解析し、型の選択肢を適切に絞り込んでいく。コンパイラはtypeofやinstanceofなどを見て型ガードと判定する、という(p68)</li>
 <li>(感想)なぜtypeofは文字列で返すのだろうか。型ガードがある理由と同じようにランタイムにまつわるものだろうか。TypeScriptの層で吸収できそうにも見える</li>
 <li>型ガードではTypeScriptのコンパイラだけが知っている情報は扱えない。JavaScriptとして実行時にアクセスできる情報を使って、booleanを返す必要がある(p70)</li>
 <li>型アサーションは実行文ではなく、あくまでコンパイラの持つ型情報を上書きするものである。型ガードと異なり、実行時には一切参照しない(p70)</li>
 <li>従来のJavaScriptは関数の使い勝手がよかったいっぽうで、言語の他の機能は少なかった。関数を多用したテクニックが多くあった(p75)</li>
</ul></div>
</div>
 <div id="outline-container-org4c0423c" class="outline-2">
 <h2 id="org4c0423c"> <a href="#org4c0423c">関連</a></h2>
 <div class="outline-text-2" id="text-org4c0423c">
 <p>
なし。
</p>
</div>
</div>
 <div id="outline-container-org4a3125a" class="outline-2">
 <h2 id="org4a3125a"> <a href="#org4a3125a">Backlinks</a></h2>
 <div class="outline-text-2" id="text-org4a3125a">
 <ul class="org-ul"> <li> <a href="./20250603T215644--kdoc-383-javascriptはブラウザの組み込み言語でありランタイムの更新は難しい__permanent.html">KDOC 383: JavaScriptはブラウザの組み込み言語でありランタイムの更新は難しい</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250612T231654--kdoc-388-『仕事ですぐに使えるtypescript』__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250612T231654--kdoc-388-『仕事ですぐに使えるtypescript』__draft_book.html</id>
  <updated>2025-06-17T07:04:09+09:00</updated>
</entry>
<entry>
  <title>KDOC 395: IPの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすること</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org6ae17dc" class="outline-2">
 <h2 id="org6ae17dc"> <a href="#org6ae17dc">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org6ae17dc">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org1947a30" class="outline-2">
 <h2 id="org1947a30"> <a href="#org1947a30">概要</a></h2>
 <div class="outline-text-2" id="text-org1947a30">
 <p>
IPの役割は複雑に接続されたインターネット(ネットワークが相互に接続されたもの)において、接続されている個々の機器が任意の相手にデータを送れるようにすることである(位置119)。
</p>
</div>
</div>
 <div id="outline-container-orgc544ef2" class="outline-2">
 <h2 id="orgc544ef2"> <a href="#orgc544ef2">関連</a></h2>
 <div class="outline-text-2" id="text-orgc544ef2">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250616T202053--kdoc-395-ipの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすること__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250616T202053--kdoc-395-ipの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすること__draft_book.html</id>
  <updated>2025-06-17T07:04:04+09:00</updated>
</entry>
<entry>
  <title>KDOC 381: 識別子の先頭に数値が使えないのは区別がつかなくなるから</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgebf60d9" class="outline-2">
 <h2 id="orgebf60d9"> <a href="#orgebf60d9">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgebf60d9">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-11 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgb17c3c1" class="outline-2">
 <h2 id="orgb17c3c1"> <a href="#orgb17c3c1">概要</a></h2>
 <div class="outline-text-2" id="text-orgb17c3c1">
 <p>
 <a href="https://jsprimer.net/basic/variables/">変数と宣言 · JavaScript Primer</a>で、変数名の先頭に数字が使えない理由は、変数名と数値が区別できなくなってしまうためである、と書かれていた。
</p>

 <p>
そういった識別子への制限があるプログラミング言語は多い。同じ理由でそうなっているように見える。
</p>
</div>
</div>
 <div id="outline-container-org719aa5a" class="outline-2">
 <h2 id="org719aa5a"> <a href="#org719aa5a">関連</a></h2>
 <div class="outline-text-2" id="text-org719aa5a">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250603T215002--kdoc-381-識別子の先頭に数値が使えないのは区別がつかなくなるから__permanent.html"/>
  <id>https://kijimad.github.io/roam/20250603T215002--kdoc-381-識別子の先頭に数値が使えないのは区別がつかなくなるから__permanent.html</id>
  <updated>2025-06-17T07:04:03+09:00</updated>
</entry>
<entry>
  <title>KDOC 383: JavaScriptはブラウザの組み込み言語でありランタイムの更新は難しい</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgd76b8f3" class="outline-2">
 <h2 id="orgd76b8f3"> <a href="#orgd76b8f3">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgd76b8f3">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-11 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgb0a7825" class="outline-2">
 <h2 id="orgb0a7825"> <a href="#orgb0a7825">概要</a></h2>
 <div class="outline-text-2" id="text-orgb0a7825">
 <p>
JavaScriptはブラウザの組み込み言語であるため、サーバーアプリケーションのようにランタイムをアプリケーションに合わせて維持したり更新できない。そのため、拡張した機能や文法を使いつつJavaScriptに変換することでランタイムを変更することなく追加機能の恩恵を受けるということをしている。
</p>
</div>
</div>
 <div id="outline-container-org9303bdf" class="outline-2">
 <h2 id="org9303bdf"> <a href="#org9303bdf">関連</a></h2>
 <div class="outline-text-2" id="text-org9303bdf">
 <ul class="org-ul"> <li> <a href="20250612T231654--kdoc-388-『仕事ですぐに使えるtypescript』__draft_book.html#ID-20250612T231654">KDOC 388: 『仕事ですぐに使えるTypeScript』</a>4ページの内容から</li>
 <li> <a href="20250603T215521--kdoc-382-javascriptにトランスパイルするのはなぜか__permanent.html#ID-20250603T215521">KDOC 382: JavaScriptにトランスパイルするのはなぜか?</a>。疑問に対する答え</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250603T215644--kdoc-383-javascriptはブラウザの組み込み言語でありランタイムの更新は難しい__permanent.html"/>
  <id>https://kijimad.github.io/roam/20250603T215644--kdoc-383-javascriptはブラウザの組み込み言語でありランタイムの更新は難しい__permanent.html</id>
  <updated>2025-06-17T07:04:01+09:00</updated>
</entry>
<entry>
  <title>KDOC 378: 『RFC 1952: GZIP file format specification version 4.3』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org79440c6" class="outline-2">
 <h2 id="org79440c6"> <a href="#org79440c6">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org79440c6">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-05-06 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org9ddc39a" class="outline-2">
 <h2 id="org9ddc39a"> <a href="#org9ddc39a">概要</a></h2>
 <div class="outline-text-2" id="text-org9ddc39a">
 <p>
 <a href="https://www.rfc-editor.org/rfc/rfc1952.html">RFC 1952: GZIP file format specification version 4.3</a>はgzipファイルの仕様を示した文書。
</p>
</div>
</div>
 <div id="outline-container-org8c9d857" class="outline-2">
 <h2 id="org8c9d857"> <a href="#org8c9d857">メモ</a></h2>
 <div class="outline-text-2" id="text-org8c9d857">
 <ul class="org-ul"> <li>gzipファイルフォーマットは一連の「メンバ」、圧縮データのセットで構成される。</li>
 <li>データ仕様のアスキーアートにも仕様がある。1つの箱は1バイトを示す</li>
 <li>least significant: 最下位ビット</li>
 <li>significant bit: 最上位ビット</li>
 <li>先頭はgzipファイルであることを示すID
 <ul class="org-ul"> <li>ID1 = 31(0x1f, \037)</li>
 <li>ID2 = 139(0x8b, \213)</li>
</ul></li>
</ul> <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>先頭2バイトがIDの1f 8bになっている</label> <pre class="src src-shell"> <span class="org-builtin">echo</span>  <span class="org-string">"xxx"</span> > aaa
gzip aaa
xxd aaa.gz
rm aaa.gz
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">00000000: 1f8b 0808 d6bc 1968 0003 6161 6100 aba8  .......h..aaa...
00000010: a8e0 0200 6774 1ed2 0400 0000            ....gt......
</pre>
</div>

 <ul class="org-ul"> <li>誤り検出符号(CRC)  <a href="https://ja.wikipedia.org/wiki/%E5%B7%A1%E5%9B%9E%E5%86%97%E9%95%B7%E6%A4%9C%E6%9F%BB">巡回冗長検査 - Wikipedia</a></li>
</ul> <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 2: </span>FNAMEで元のファイル名を保持する。“aaa”の、0x61 0x61 0x61が見える。また、ゼロ終端になっている</label> <pre class="src src-shell"> <span class="org-builtin">echo</span>  <span class="org-string">"xxx"</span> > aaa
gzip aaa
xxd aaa.gz
rm aaa.gz
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">00000000: 1f8b 0808 35be 1968 0003 6161 6100 aba8  ....5..h..aaa...
00000010: a8e0 0200 6774 1ed2 0400 0000            ....gt......
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-shell"> <span class="org-builtin">echo</span>  <span class="org-string">"xxx"</span> > AAA
gzip AAA
xxd AAA.gz
file AAA.gz
rm AAA.gz
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">00000000: 1f8b 0808 27c2 1968 0003 4141 4100 aba8  ....'..h..AAA...
00000010: a8e0 0200 6774 1ed2 0400 0000            ....gt......
AAA.gz: gzip compressed data, was "AAA", last modified: Tue May  6 08:02:47 2025, from Unix, original size modulo 2^32 4
</pre>
</div>


 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 4: </span>ファイル名はUTF-8で符号化された。“あ”: e3 81 82。3バイト文字なので、その分データが増えている</label> <pre class="src src-shell"> <span class="org-builtin">echo</span>  <span class="org-string">"xxx"</span> > あああ
gzip あああ
xxd あああ.gz
rm あああ.gz
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">00000000: 1f8b 0808 39c1 1968 0003 e381 82e3 8182  ....9..h........
00000010: e381 8200 aba8 a8e0 0200 6774 1ed2 0400  ..........gt....
00000020: 0000                                     ..
</pre>
</div>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 5: </span>そのまま追記しても有効な形式であり、展開できる</label> <pre class="src src-shell"> <span class="org-builtin">echo</span>  <span class="org-string">"xxx"</span> > aaa
gzip aaa
 <span class="org-builtin">echo</span>  <span class="org-string">"yyy"</span> | gzip -c >> aaa.gz
xxd aaa.gz
 <span class="org-builtin">echo</span>  <span class="org-string">"================"</span>
gzip -c -d aaa.gz
rm aaa.gz
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">00000000: 1f8b 0808 cdbd 1968 0003 6161 6100 aba8  .......h..aaa...
00000010: a8e0 0200 6774 1ed2 0400 0000 1f8b 0800  ....gt..........
00000020: 0000 0000 0003 abac ace4 0200 7448 7b72  ............tH{r
00000030: 0400 0000                                ....
================
xxx
yyy
</pre>
</div>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 6: </span>バイナリのOS情報にはUNIX: 03が入っている</label> <pre class="src src-shell"> <span class="org-builtin">echo</span>  <span class="org-string">"xxx"</span> > aaa
gzip aaa
xxd aaa.gz
file aaa.gz
rm aaa.gz
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">00000000: 1f8b 0808 02ca 1968 0003 6161 6100 aba8  .......h..aaa...
00000010: a8e0 0200 6774 1ed2 0400 0000            ....gt......
aaa.gz: gzip compressed data, was "aaa", last modified: Tue May  6 08:36:18 2025, from Unix, original size modulo 2^32 4
</pre>
</div>
</div>
</div>
 <div id="outline-container-org91068da" class="outline-2">
 <h2 id="org91068da"> <a href="#org91068da">関連</a></h2>
 <div class="outline-text-2" id="text-org91068da">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250506T160040--kdoc-378-『rfc-1952-gzip-file-format-specification-version-43』__book.html"/>
  <id>https://kijimad.github.io/roam/20250506T160040--kdoc-378-『rfc-1952-gzip-file-format-specification-version-43』__book.html</id>
  <updated>2025-06-17T07:03:59+09:00</updated>
</entry>
<entry>
  <title>KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgd743876" class="outline-2">
 <h2 id="orgd743876"> <a href="#orgd743876">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgd743876">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-05-11 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org3bae86e" class="outline-2">
 <h2 id="org3bae86e"> <a href="#org3bae86e">概要</a></h2>
 <div class="outline-text-2" id="text-org3bae86e">
 <p>
 <a href="https://nextpublishing.jp/book/4891.html">1日で読めてわかるTCP/IPのエッセンス</a>はTCP/IPを易しく解説する本。
</p>
</div>
</div>
 <div id="outline-container-org7efe6e1" class="outline-2">
 <h2 id="org7efe6e1"> <a href="#org7efe6e1">メモ</a></h2>
 <div class="outline-text-2" id="text-org7efe6e1">
 <ul class="org-ul"> <li>TCP/IPは実際に通信するネットワーク方式を定めていない。TCP/IPは特定のネットワーク方式に依存するプロトコルではない。ネットワーク方式に依存する要素はプロトコルに含まれていない(位置84)</li>
 <li>TCP/IPは使用するアプリケーションの動作を定めない。アプリケーションやサービスを自由に実装するための基盤となる(位置84)</li>
 <li>TCP/IPはイーサネットなどの実際のネットワークシステムとネットワークを使うアプリケーションの間に位置する。アプリケーションとネットワークハードウェアの間を取り持ち、汎用的な通信サービスを提供する(位置106)
 <ul class="org-ul"> <li>アプリケーション → TCP/IP → ネットワークデバイスのデバイスドライバ → ネットワークハードウェア → ネットワーク</li>
</ul></li>
 <li>TCP/IPは複数のプロトコルから構成されるプロトコルスイート。IP, UDP, TCPを中心としていくつかの関連プロトコルを含む(位置106)</li>
 <li>IPの役割は複雑に接続されたインターネット(ネットワークが相互に接続されたもの)において、接続されている個々の機器が任意の相手にデータを送れるようにすること。イーサネットや無線LANは1つのネットワーク内での通信を行えるが、そのままでは多数のネットワークを相互に接続できない(位置119)</li>
 <li>ルーターは接続しているネットワークの間でデータの中継を行う機器。ルータを使ったインターネットでのデータ転送をサポートするプロトコルがIP。IPを使うことでイーサネットなどで構成されたネットワークどうしをルータで接続しデータを中継できる(位置119)</li>
 <li>IPアドレスにはその機器が接続されているネットワークを識別する情報と機器そのものを識別する情報が含まれる。インターネットではIPアドレスを使って通信の相手を指定する(位置138)</li>
 <li>UDPはプログラム間でデータをやり取りするためにデータにポート番号を付加するプロトコル(位置151)</li>
 <li>TCPはポート番号を使って機器上のプログラムを識別する。そして2つのプログラムの間でデータを相互にやり取りする通信路を提供する。最初に通信相手を指定して明示的に接続処理し、以後はその相手とのみデータをやり取りする。明示的な接続関係のことをコネクションという。コネクションによって相手と自分の状態を共有し通信のエラー検出や対処をする(位置168)</li>
 <li>ネットワークシステムは何段階にも機能を分け、組み合わせた形で構築されている。実際のネットワーク方式、伝送の制御、アプリケーション…。このようにすることでネットワーク方式やアプリケーションの自由度が高くなる(位置206)</li>
 <li>OSIの7階層モデルは、TCP/IPを使うインターネットのネットワーク構成にはうまくあてはまらない。層の役割がアプリケーションの構造に対応しないため。TCP/IP階層モデルと呼ばれるモデルもある(位置223)</li>
 <li>ネットワーク方式ごとのフレーム中のデータサイズの上限値をMTUという(位置333)</li>
 <li>IPアドレスはインターネットに接続された個々のノードを識別するための一意な32ビットの情報。表記がピリオドつなぎというだけ(位置400)</li>
 <li>TCP/IPの特徴の1つに、1つのIPアドレスでネットワークとノードをまとめて表すという点がある(位置400)</li>
 <li>アドレスの上位の、ネットワークを示す部分をネットワーク部、下位の、ノードを示す部分をホスト部という。IPアドレスのネットワーク部とホスト部を示すため、サブネットマスクという情報が使われる。ネットワーク部とマスク部の配分は自由なので必要である。ビットが1の部分がネットワーク部、0の部分がホスト部を表す(位置419)</li>
 <li>ネットワーク部が異なるノードは別ネットワークに接続していると判断され、ルーターを介して通信する(位置435)</li>
 <li>ホスト部のビットがすべて0のIPアドレスは、特定のノードを識別するためのアドレスではなく、ネットワークを識別するアドレスとして使われる(位置476)</li>
 <li>論理アドレスであるIPアドレスと、物理アドレスであるMACアドレス(位置569)</li>
 <li>イーサネットでTCP/IPを使う場合、IPのレベルではIPアドレスで宛先や送信元を指定する。実際の通信はイーサネットを使うので、MACアドレスでノードを指定しなければならない。そのため通信を行うにはIPアドレスから対応するMACアドレスを求める作業が必要になる。そこでARP(アドレス解決プロトコル)を使いネットワークを使ってIPアドレスとMACアドレスの対応付けを行っている(位置587)</li>
 <li>ARPキャッシュはどこに保存されるのだろうか</li>
 <li>ネットワークの基本的な診断を行うpingコマンドはICMPエコー要求/応答要求機能を使っている(位置660)</li>
 <li>CIDRはIPアドレスのネットワーク部のビット配分を階層的に扱い、多数のネットワーク宛のルーティングエントリを少数のエントリで代表して扱うというもの。電話番号の国番号や市外局番のように階層化されているようなもの(位置810)</li>
 <li>IPアドレスはノードを識別するだけで、目的のプログラムを示せない(位置854)</li>
 <li>UDPとTCPでは、UDPヘッダ、TCPヘッダの中にポート番号という情報が収められており、そのポート番号でコンピュータのプログラムを識別する(位置854)</li>
 <li>単純なデータ要求に対し、短い応答が返されて終わりというやり取りの場合、UDPのほうが効率的である。たとえばDNSによる名前解決にはUDPが多用されている(位置854)</li>
 <li>UDPはTCPと異なり、特定の接続相手を定めない。一度に複数の宛先に伝送する場合はUDPを使う。UDPでデータを転送する場合、データグラムの送信ごとに宛先を指定する(位置854)</li>
 <li>UDPはデータグラムに送信元ポート番号と宛先ポート番号を付加するプロトコルといえる(位置995)</li>
 <li>TCPは常に特定の2つのプログラム間でのやりとりとなる(位置1058)</li>
 <li>TCPの伝送では順序情報をやりとりすることでデータの順序や欠落の有無を確認する(位置1072)</li>
 <li>あるサーバープログラムが複数のクライアントや同一クライアントの複数のプログラムに同時にサービスを提供する場合、サーバー側のIPアドレスとポート番号は同一である。が、クライアント側のIPアドレスとポート番号は異なるため、それぞれのコネクションを別のものとして区別できる(位置1103)</li>
 <li>2つのプログラム間で通信を行う際には伝送するデータの量を加減する処理が求められる。受信側が処理しきれないペースでデータを送ってしまうと受信側のバッファが溢れてデータが失われる。TCPはスロースタートという方法で輻輳の発生を抑えている(位置1252)</li>
</ul></div>
</div>
 <div id="outline-container-org422fe03" class="outline-2">
 <h2 id="org422fe03"> <a href="#org422fe03">関連</a></h2>
 <div class="outline-text-2" id="text-org422fe03">
 <p>
なし。
</p>
</div>
</div>
 <div id="outline-container-org805ca22" class="outline-2">
 <h2 id="org805ca22"> <a href="#org805ca22">Backlinks</a></h2>
 <div class="outline-text-2" id="text-org805ca22">
 <ul class="org-ul"> <li> <a href="./20250611T184309--kdoc-386-ipはデータを機器に届けられるが、目的のプログラムを示せない__book.html">KDOC 386: IPはデータを機器に届けられるが、目的のプログラムを示せない</a></li>
 <li> <a href="./20250612T204735--kdoc-387-イーサネットによる通信はmacアドレスを使う__book.html">KDOC 387: イーサネットによる通信はMACアドレスを使う</a></li>
 <li> <a href="./20250613T090351--kdoc-390-イーサネットや無線lanは1つのネットワーク内での通信を行える__draft_book.html">KDOC 390: イーサネットや無線LANは1つのネットワーク内での通信を行える</a></li>
 <li> <a href="./20250616T202053--kdoc-395-ipの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすること__draft_book.html">KDOC 395: IPの役割は複数ネットワークにおいて任意の相手にデータを送れるようにすること</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html</id>
  <updated>2025-06-17T07:03:58+09:00</updated>
</entry>
<entry>
  <title>KDOC 385: 『続ける思考』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org72b6c6d" class="outline-2">
 <h2 id="org72b6c6d"> <a href="#org72b6c6d">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org72b6c6d">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org8435ebb" class="outline-2">
 <h2 id="org8435ebb"> <a href="#org8435ebb">概要</a></h2>
 <div class="outline-text-2" id="text-org8435ebb">
 <p>
 <a href="https://amzn.to/3SQiCn6">『続ける思考』</a>はどうやってものごとを続けるか、についての本である。「習慣家」である筆者がその方法を解説する。
</p>
</div>
</div>
 <div id="outline-container-orged54c2e" class="outline-2">
 <h2 id="orged54c2e"> <a href="#orged54c2e">メモ</a></h2>
 <div class="outline-text-2" id="text-orged54c2e">
 <ul class="org-ul"> <li>(感想)アイデアを説明するために映画や漫画の引用を多用する。わかりやすい。映画や漫画を見て記録したことが生かされている</li>
 <li>ただ「成果」を先に求めてしまうとそれがすべてになる。はじめた瞬間から「修練」や「修行」になってしまう。つらい(位置227)</li>
 <li>最初は上達を感じてたのしい。でもそのうち尻すぼみしていく。なかなかうまくならない。自分ってこんなものかと考える。つまらなく感じる(位置238)
 <ul class="org-ul"> <li>(感想)非常によくわかる。その繰り返しだ</li>
</ul></li>
 <li>別に最初に想像するようにうまくならなくてもいい。続けていけば必ず何かの「変化」が起こる。そのことを信じて何かを続けてみる。「正しい努力」という考え方を捨てて、「ただ続ける」ことをまずは意識すればよい、という(位置238)</li>
 <li>気持ちいいやり方を自分で見つけるために重要なことは、じぶんで解き方を発見することだ。そのためには最初から効率を求めすぎないことである。攻略法を見ずにやりながら考えることが、気持ちいい継続を生む秘訣である、という(位置253)</li>
 <li>最短の攻略法ですぐうまくなると、すぐに飽きる。それが「続かない」につながる(位置275)</li>
 <li>ラクに続けるコツは、週7日やることだ(位置372)</li>
 <li>どうしてもやりたくない日はやったフリだけする。ジョギングだったら着替えるだけとか、掃除なら掃除機を手に取るとか。さわりだけやれば意外にそのあとのことはできてしまう(位置830)</li>
 <li>自分を動かすエンジンは「小さな達成」だ。すべてのことに「小さなゴール」を設定し、「クリア」したらすぐ次のステージに移ることが重要である(位置987)</li>
 <li>自分で1人で漫画を書き続けヒットさせた人の話。不定期アップになると、読んでくれる人が離れる。その恐怖が背中を押してくれた。毎週同じ日に1話アップするというのは重要で、読んでくれる人に覚えてもらえる、という(位置1088)</li>
 <li>結果だけ見るとネットでバズった漫画が売れてアニメ化されて、と簡単に進んだだけに見える。しかしそこに行き着くまでには誰にも注目されずに2年間コツコツ描き続けた孤独なひとりきりの時間がある(位置1101)</li>
 <li>「うまくなる」「何か得する」「いいことが起きる」続けた先に待っていると考えることをやめてみる。目指すべきゴールを考えるのをやめてみる。上達しなくても別にいい。なんの役に立たなくても別にいい。楽しくなくてもいい。「こうなりたい」と考えずにはじめれば、壁にぶつかることもない(位置1124)</li>
 <li>楽しむためには「ラク」にやりすぎないことである。取り組むこと自体は「ラク」にすまさないのが長く続けていくポイントである(位置1190)</li>
 <li>誰にもでもできる大したことないことを、誰もやらないくらいに積み重ねる(位置1343)</li>
 <li>継続を阻む最大の敵は「大きな達成」である。目標の達成をゴールだと考えるとそこで終わる(位置1356)</li>
 <li>「誰でもできることを、誰もやらないくらい長くやる」ことには価値がある(位置1494)</li>
 <li>記録することで観察力が高まる。変化は記録してないと気づかない。最初は余計なことを考えずただ記録するだけでよい。半年、1年も毎日続けると、自然とメモする内容に変化が起こる(位置1667)</li>
 <li>雑談を盛り上げるには3番目にハマっていることの話をするといい。熱く語りすぎないから(位置1680)</li>
 <li>はじめは意味を考える必要はない。あとでその意味に気づくくらいでちょうどいい(位置1937)</li>
 <li>すぐ手に入る、すぐ結果がわかる、すぐ答えが出る。そんな時代であるから「好き」か遠のく。便利になることで人は好きを失っているのではないか、という。好きになることの裏には、たくさんの時間とただ楽しいだけではない大変さが必要である。AIでさらにすぐに答えが出るようになるだろう。「時間をかける」ということが難しくなる可能性がある(位置2205)</li>
 <li>(感想)好きは行動の後に生まれるという点で、 <a href="20221027T235104--kdoc-3-『ない仕事の作り方』__book.html#ID-20221027T235104">KDOC 3: 『ない仕事の作り方』</a>と通じる考え方である。より具体的に実行するためにどうすればいいか、にフォーカスしている。</li>
</ul></div>
</div>
 <div id="outline-container-orgf26d915" class="outline-2">
 <h2 id="orgf26d915"> <a href="#orgf26d915">関連</a></h2>
 <div class="outline-text-2" id="text-orgf26d915">
 <p>
なし。
</p>
</div>
</div>
 <div id="outline-container-orgb263a55" class="outline-2">
 <h2 id="orgb263a55"> <a href="#orgb263a55">Backlinks</a></h2>
 <div class="outline-text-2" id="text-orgb263a55">
 <ul class="org-ul"> <li> <a href="./20210904124352-workflow.html">workflow</a></li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250611T180912--kdoc-385-『続ける思考』__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250611T180912--kdoc-385-『続ける思考』__draft_book.html</id>
  <updated>2025-06-17T07:03:57+09:00</updated>
</entry>
<entry>
  <title>KDOC 380: 『すごい面接の技術 転職活動で「選ばれる人」になる唯一の方法』</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgb3d6359" class="outline-2">
 <h2 id="orgb3d6359"> <a href="#orgb3d6359">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgb3d6359">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-09 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-11 貴島</li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-org6c187af" class="outline-2">
 <h2 id="org6c187af"> <a href="#org6c187af">概要</a></h2>
 <div class="outline-text-2" id="text-org6c187af">
 <p>
『すごい面接の技術 転職活動で「選ばれる人」になる唯一の方法』は、転職活動の面接についての本。
</p>
</div>
</div>
 <div id="outline-container-org06322f6" class="outline-2">
 <h2 id="org06322f6"> <a href="#org06322f6">メモ</a></h2>
 <div class="outline-text-2" id="text-org06322f6">
 <p>
面接官の立場になって考えること。
</p>

 <ul class="org-ul"> <li> <p>
視点
</p>

 <p>
面接官の立場で考えて、「相手が欲しい答え」が何か見つけ出す。
</p></li>

 <li> <p>
わかりやすさ
</p>

 <p>
「答え」をわかりやすく伝える。
</p></li>

 <li>ストーリー

 <ul class="org-ul"> <li>キャリアの過去と未来をつなげるストーリーを使って、「だから御社で活躍できる」を伝える</li>
</ul></li>
</ul> <p>
メモ。
</p>

 <ul class="org-ul"> <li>転職活動は能力やスキル、経験だけで結果が決まらない。決まるなら、面接する必要はないから。だから、チャンスであるともいえる。不利な状況を覆せる可能性がある(p6)</li>
 <li>中途採用は単に優秀な人材というより、マッチングが重要である。「仕事の進め方や環境に合う人材」、「募集中の特定のポジションのニーズを満たす人材」。求人のニーズを満たせるかの一点が重要(p16)</li>
 <li>中途採用における書類選考では、主に応募者の在籍業界、企業名と役職、経験年数の基本情報をチェックして職務経歴書の最初の要約を読んだらほぼ合否は決まる(p35)</li>
 <li>職務経歴書は企業が雇いたくなる理由として有効なものだけに情報を絞って、できるだけ短く1~2ページにまとめるのが鉄則(p35)</li>
 <li>転職活動とは自分という人材を企業に売り込むための「営業」の場である。経歴がなぜ相手企業にとって魅力的だと言えるのかを相手目線で説明できるのが重要である(p36)</li>
 <li>自分のキャリアのハッシュタグで考える。求人票の内容に沿ってどのようなアピールが評価されそうか考え、ハッシュタグとなる言葉を選ぶ(p41)</li>
 <li>職務経歴書は1社1社調整する。求人票の内容が違うのだから、それに合わせて変えるのは当然のことである(p42)</li>
 <li>同じ業界・同じ職種だと、専門性やコネクションがない限り、長期的に待遇や役職を上げていくことはできない。転職を機にキャリアアップを目指すのであれば、過去のキャリアを「軸」にしつつ、自分の人材としての可能性が広がるような未知を選ぶのが理想的である(p47)</li>
 <li>現職と転職先との何らかの共通点となる軸、「キャリアのつながり」を作れない限り、雇うべき必然性を認識してもらえない。つながりのあるストーリーがあると、必然性を認識しやすい(p48)</li>
 <li>転職活動とは、単純に「市場価値」で勝敗が決まるものではない。そうならば、面接は不要である。「市場価値」とは別に、「その企業にとっての価値」という指標がある(p50)</li>
 <li>「自己評価」と「面接官の評価」は一致しない。暗記したことを言っている人に多い。聞いた内容からややズレた回答をしてしまい、上手くコミュニケーションを取れない、という印象を受ける(p52)</li>
 <li>面接は「対話」であり、コミュニケーション能力を評価する場である。面接官の表情や声の調子から、自分が伝えたいことがきちんと伝わっているかを敏感に察知し、臨機応変に補足説明をしたり、相手の理解度を確認したりする工夫が必要である。柔軟な対応ができない人は面接で高く評価されることはない。相手の質問に正確に答えることが最優先である(p53)</li>
 <li>専門用語を使わない。予備知識がなくても誰にでもわかるように「平易で一般的な言葉」に言い換える(p54)</li>
 <li>面接の結果は、大部分が面接官個人のフィーリングで決まる。だからこそ、気遣いや柔軟な対応が重要である(p55)</li>
 <li>事前の準備さえできていれば、当日は心配ない。回答例をたくさん用意しておく必要がある(p55)</li>
 <li>企業が自分を雇うべき絶対的な理由が必要であり、「過去の仕事を頑張ったかどうか」ではない。また「自分が伝えたいこと」を語るのではなく、「相手が欲しがっていること」を語るのが重要である(p58)</li>
 <li>面接では「等身大の自分」なんて見せてはいけない。ビジネスの延長線上であって、本音と建前がある。重要なのは回答内容で面接官に「採用したい」と考えてもらえるかである。何をどう言えば相手が自分を採用したくなるかだけを考える(p59)</li>
 <li>面接後は振り返りを行う。一次面接の傾向は、最終面接でも共通している。質問、受け答え、相手の反応や反省点をメモしておく(p62)</li>
 <li>中途採用面接はこれから一緒に働く仲間として頼りになる人物かどうかを見ているため、即戦力となるための能力や経験以上に、「真剣さ」「真面目さ」「熱意」を厳しく見ている(p65)</li>
</ul> <p>
研究内容。
</p>

 <ul class="org-ul"> <li>業界について
 <ul class="org-ul"> <li>業界全体の市場規模</li>
 <li>自社のマーケットシェア</li>
 <li>業界内でのポジショニング</li>
</ul></li>
 <li>企業について
 <ul class="org-ul"> <li>近年の業績の推移</li>
 <li>看板となる事業</li>
 <li>現在抱えている課題</li>
 <li>将来3~5年のビジネスの展望</li>
</ul></li>
 <li>募集中の求人について
 <ul class="org-ul"> <li>今回の応募ポジションの社内での位置づけ</li>
 <li>入社後の役割、達成すべきゴール</li>
 <li>求めている人物像と条件</li>
</ul></li>
</ul> <p>
メモ。
</p>

 <ul class="org-ul"> <li>企業が求めるのは「具体的な仕事の経験と実績」である。このとき役立つのが「STAR」の考え方である(p68)
 <ul class="org-ul"> <li>Situation(状況)。市場の概況、自社が置かれた状況を説明する。基本的な前提を共有できていないと自分が達成したことの「難易度」や「意義」が伝わらない</li>
 <li>Task(課題)。自分が何を解決したか。何が難しいのか。取り組んだ課題やハードルについて相手に理解してもらう</li>
 <li>Action(行動)。課題解決のために何をしたかだけでなく、なぜそうするに至ったか、他の選択肢があるなかで何が決め手だったか、意思決定プロセスにどう貢献したか。チームとしてやったことと自分個人が成し遂げたことを明確に区別して伝えるのが重要である</li>
 <li>Result(結果)。仕事の結果として何が得られたか、客観的な成果、数字の実績など</li>
 <li>Learning(学び)。その一連のプロジェクトから経験として学んだこと、失敗したと感じていること、やり直すなら何を改善するか</li>
</ul></li>
 <li>当時どのような「状況」下にあって、いかなる「課題」を解決する必要があったのか、そのためにどのような「行動」をとり、最終的に「結果」はどうなったのか、というポイントを押さえる。さらにLearning(学び)を追加で語るとよい(p68)</li>
 <li>声に出して、話す練習をする。自分が話す姿を客観的に見ておくことが重要(p76)</li>
 <li>オンラインでは話がどれくらい通じているか、相手の反応がよいかを測りにくい。相手も同じである。相手の反応を注意深く見つつ、ここまでの話が伝わっているかを都度確認する(p82)</li>
 <li>面接官も緊張している。四苦八苦しながら面接をしている。決して敵ではなく、一緒に働くことになる仲間である。自分という人材の良いところを仲間である面接官に教えるくらいの気持ちがよい(p86)</li>
 <li>志望理由に「本当の理由」はいらない。志望理由で転職エージェントに紹介されたから、と答えるのは典型的な失敗例である(p92)</li>
 <li>自分の過去の経験がこの会社でどう生きるのか、この会社で何を目指しているのか、というキャリアのストーリーを志望理由に組み込むとベストである。また企業や業界研究をきちんとしていないと答えられない深い内容は明確な差別化になる。また、企業や業界について調べるほど興味が出てきて「志望理由」は自然と湧いてくる(p94)</li>
 <li>ストーリーの考え方のヒント。この面接に自分が呼ばれた理由を考える。「自分に期待されていること」を考える。過去のキャリアと転職先のポジションをつなげるストーリーは相手のニーズから必然性を持って作り上げるものである(p95)</li>
 <li>「現職に不満はない」は嘘くさい。明確な理由がなければならない(p96)</li>
 <li>面接のほかの要素と同じく、「逆質問」も正直に自分が聞きたいことを聞く機会ではなく、「逆質問」という形式で評価を下す試練の1つである(p117)</li>
 <li>残業や転勤に対してなんでも正直従う、という態度も本当なのかと疑われることになる。自分の事情や背景を説明したうえで、条件付きで承諾するとよい</li>
 <li>「5年後・10年後のキャリア」は文字通りに受け取れば自分個人のキャリアの話だが、相手が欲しいのは「5年後、10年後の長期でどのように会社に貢献できるか」ということである(p132)</li>
 <li>どんな質問が来ても自分のスキルや過去の業務経験のPRにつながる形で回答するのが理想(p132)</li>
 <li>「会社の課題は何か」という質問は会社の悪いところを聞きたいわけではない。「課題」は見方を変えれば「改善のチャンス」であり、現職の会社でどのように課題を特定しそれを解決しようと努力したかを聞いている(p143)</li>
 <li>「休日の過ごし方」の質問にも意味がある。正直な答えは必要ない(p146)</li>
 <li>面接はアピールの場であり、納得させるにはストーリーが重要である。簡潔に回答できるケースは少ない(p158)</li>
</ul></div>
</div>
 <div id="outline-container-orgcfa6a97" class="outline-2">
 <h2 id="orgcfa6a97"> <a href="#orgcfa6a97">関連</a></h2>
 <div class="outline-text-2" id="text-orgcfa6a97">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250602T184338--kdoc-380-『すごい面接の技術-転職活動で「選ばれる人」になる唯一の方法』__book.html"/>
  <id>https://kijimad.github.io/roam/20250602T184338--kdoc-380-『すごい面接の技術-転職活動で「選ばれる人」になる唯一の方法』__book.html</id>
  <updated>2025-06-17T07:03:57+09:00</updated>
</entry>
<entry>
  <title>KDOC 394: manのシステムコールセクションはインストールされてないことがある</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-orgd9c4554" class="outline-2">
 <h2 id="orgd9c4554"> <a href="#orgd9c4554">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-orgd9c4554">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul> <ul class="org-ul"> <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgd4212f6" class="outline-2">
 <h2 id="orgd4212f6"> <a href="#orgd4212f6">概要</a></h2>
 <div class="outline-text-2" id="text-orgd4212f6">
 <p>
Linux Mint 22.1では、manのシステムコールのセクションが見つからない。ディストリビュージョンによっては、省略されていることがあるという。
</p>

 <p>
インストールする。
</p>

 <div class="org-src-container">
 <label class="org-src-name"> <span class="listing-number">Listing 1: </span>manpages-devをインストールする</label> <pre class="src src-shell">sudo apt update
sudo apt install manpages-dev
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-shell">man 2 fork | head -n10
</pre>
</div>

 <div class="org-src-container">
 <pre class="src src-nil">fork(2)                       System Calls Manual                      fork(2)

NAME
       fork - create a child process

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <unistd.h>
</pre>
</div>
</div>
</div>
 <div id="outline-container-orgf8b2ee0" class="outline-2">
 <h2 id="orgf8b2ee0"> <a href="#orgf8b2ee0">関連</a></h2>
 <div class="outline-text-2" id="text-orgf8b2ee0">
 <p>
なし。
</p>
</div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T125259--kdoc-394-manのシステムコールセクションはインストールされてないことがある__draft_wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T125259--kdoc-394-manのシステムコールセクションはインストールされてないことがある__draft_wiki.html</id>
  <updated>2025-06-17T07:03:49+09:00</updated>
</entry>
<entry>
  <title>KDOC 390: イーサネットや無線LANは1つのネットワーク内での通信を行える</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org932656d" class="outline-2">
 <h2 id="org932656d"> <a href="#org932656d">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org932656d">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgab77f5e" class="outline-2">
 <h2 id="orgab77f5e"> <a href="#orgab77f5e">概要</a></h2>
 <div class="outline-text-2" id="text-orgab77f5e">
 <p>
イーサネットや無線LANは1つのネットワーク内での通信を行えるが、そのままでは多数のネットワークを相互に接続できない(位置119)。
</p>
</div>
</div>
 <div id="outline-container-org9e937c4" class="outline-2">
 <h2 id="org9e937c4"> <a href="#org9e937c4">関連</a></h2>
 <div class="outline-text-2" id="text-org9e937c4">
 <ul class="org-ul"> <li> <a href="20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102">KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』</a>から</li>
 <li> <a href="20250612T204735--kdoc-387-イーサネットによる通信はmacアドレスを使う__book.html#ID-20250612T204735">KDOC 387: イーサネットによる通信はMACアドレスを使う</a>を、言い換えたもの。層ごとに役割があり、できないことを考えると理解がしやすく見える</li>
</ul></div>
</div>
</div>]]></content>
  <link href="https://kijimad.github.io/roam/20250613T090351--kdoc-390-イーサネットや無線lanは1つのネットワーク内での通信を行える__draft_book.html"/>
  <id>https://kijimad.github.io/roam/20250613T090351--kdoc-390-イーサネットや無線lanは1つのネットワーク内での通信を行える__draft_book.html</id>
  <updated>2025-06-17T07:03:49+09:00</updated>
</entry>
<entry>
  <title>KDOC 393: データとコードを同時に変更してはいけない</title>
  <author><name>kijimaD</name></author>
  <content type="html"><![CDATA[<div id="content" class="content">

 <div id="outline-container-org985c2ec" class="outline-2">
 <h2 id="org985c2ec"> <a href="#org985c2ec">この文書のステータス</a></h2>
 <div class="outline-text-2" id="text-org985c2ec">
 <ul class="org-ul"> <li>作成
 <ul class="org-ul"> <li class="on"> <input type="checkbox" checked="checked"></input> 2025-06-16 貴島</li>
</ul></li>
 <li>レビュー
 <ul class="org-ul"> <li class="off"> <input type="checkbox"></input> <署名></li>
</ul></li>
</ul></div>
</div>
 <div id="outline-container-orgc44111f" class="outline-2">
 <h2 id="orgc44111f"> <a href="#orgc44111f">概要</a></h2>
 <div class="outline-text-2" id="text-orgc44111f">
 <p>
社会人1年目のときに、「データ変更とコード変更を同時にやってはいけない」と教わった。データ変更 → デプロイ → コード変更 → デプロイというように片方ずつ変更せよ、というようなことだ。カラム変更、インデックス追加、レコード変更といった操作に長時間費やす可能性がある。その間はデータとコードが一致しなくなる。リクエストが来た場合、動かない可能性がある。最悪の場合、不整合レコードになる。
</p>

 <p>
教わった内容は単なる習慣になり、意識することはあまりなくなっていた。あるとき、誇張した形でそれが現れた。デプロイが3ヶ月ごとにしかできないような <sup> <a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup>Webのシステムにおいては、常にデプロイ可能なシステムよりシビアに、データとコードについて考える必要があった。
</p>

 <p>
問題なくデプロイするには、2つの方法があるように見える。
</p>

 <ul class="org-ul"> <li>ダウンタイムを受け入れて、バックエンドサーバを止めるか遮断する。ブロックしないと、データ変更中にリクエストが来て不整合になってしまう。フロントエンドを止めるだけでは不十分である。リロードしてない人はアクセスを飛ばせてしまう
 <ul class="org-ul"> <li>❌ ダウンタイムの発生</li>
 <li>❌ 停止させるための方法確立が必要</li>
 <li>❌ 何か起こった場合に原因が切り分けにくい</li>
 <li>⭕ 手順が単純、少ない</li>
</ul></li>
 <li>チェックポイントとなるコミットで、数回繰り返してデプロイする
 <ul class="org-ul"> <li>⭕ ダウンタイムが発生しない</li>
 <li>❌ 数回デプロイする分時間がかかる</li>
 <li>⭕ 何か起こった時点で把握しやすく、原因を切り分けやすい</li>
 <li>❌ 手順が複雑、多い</li>
</ul></li>
</ul> <p>
ダウンタイムの許容ポリシーにもよるが、規模が大きくなるほど段階的に進めてデプロイしたほうがよさそうに見える。
</p>
</div>
</div>
 <div id="outline-container-org1864921" class="outline-2">
 <h2 id="org1864921"> <a href="#org1864921">関連</a></h2>
 <div class="outline-text-2" id="text-org1864921">
 <p>
なし。
</p>
</div>
</div>
 <div id="footnotes">
 <h2 class="footnotes">Footnotes: </h2>
 <div id="text-footnotes">

 <div class="footdef"> <sup> <a id="fn.1" class="footnum" href="#fnr.1" role="doc-backlink">1</a></sup> <div class="footpara" role="doc-footnote"> <p class="footpara">
令和でもそういうことがあるのである…。
</p></div></div>


</div>
</div></div>]]></content>
  <link href="https://kijimad.github.io/roam/20250614T104010--kdoc-393-データとコードを同時に変更してはいけない__draft_wiki.html"/>
  <id>https://kijimad.github.io/roam/20250614T104010--kdoc-393-データとコードを同時に変更してはいけない__draft_wiki.html</id>
  <updated>2025-06-17T07:03:47+09:00</updated>
</entry>
</feed>
